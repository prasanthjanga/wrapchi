/*!
 Material Components for the web
 Copyright (c) 2017 Google Inc.
 License: Apache-2.0
*/
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/assets/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 32);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
var stylesInDom = {},
	memoize = function(fn) {
		var memo;
		return function () {
			if (typeof memo === "undefined") memo = fn.apply(this, arguments);
			return memo;
		};
	},
	isOldIE = memoize(function() {
		// Test for IE <= 9 as proposed by Browserhacks
		// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
		// Tests for existence of standard globals is to allow style-loader 
		// to operate correctly into non-standard environments
		// @see https://github.com/webpack-contrib/style-loader/issues/177
		return window && document && document.all && !window.atob;
	}),
	getElement = (function(fn) {
		var memo = {};
		return function(selector) {
			if (typeof memo[selector] === "undefined") {
				memo[selector] = fn.call(this, selector);
			}
			return memo[selector]
		};
	})(function (styleTarget) {
		return document.querySelector(styleTarget)
	}),
	singletonElement = null,
	singletonCounter = 0,
	styleElementsInsertedAtTop = [],
	fixUrls = __webpack_require__(6);

module.exports = function(list, options) {
	if(typeof DEBUG !== "undefined" && DEBUG) {
		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};
	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (typeof options.singleton === "undefined") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (typeof options.insertInto === "undefined") options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

	var styles = listToStyles(list);
	addStylesToDom(styles, options);

	return function update(newList) {
		var mayRemove = [];
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			domStyle.refs--;
			mayRemove.push(domStyle);
		}
		if(newList) {
			var newStyles = listToStyles(newList);
			addStylesToDom(newStyles, options);
		}
		for(var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];
			if(domStyle.refs === 0) {
				for(var j = 0; j < domStyle.parts.length; j++)
					domStyle.parts[j]();
				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom(styles, options) {
	for(var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];
		if(domStyle) {
			domStyle.refs++;
			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}
			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];
			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}
			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles(list) {
	var styles = [];
	var newStyles = {};
	for(var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};
		if(!newStyles[id])
			styles.push(newStyles[id] = {id: id, parts: [part]});
		else
			newStyles[id].parts.push(part);
	}
	return styles;
}

function insertStyleElement(options, styleElement) {
	var styleTarget = getElement(options.insertInto)
	if (!styleTarget) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}
	var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
	if (options.insertAt === "top") {
		if(!lastStyleElementInsertedAtTop) {
			styleTarget.insertBefore(styleElement, styleTarget.firstChild);
		} else if(lastStyleElementInsertedAtTop.nextSibling) {
			styleTarget.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			styleTarget.appendChild(styleElement);
		}
		styleElementsInsertedAtTop.push(styleElement);
	} else if (options.insertAt === "bottom") {
		styleTarget.appendChild(styleElement);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement(styleElement) {
	styleElement.parentNode.removeChild(styleElement);
	var idx = styleElementsInsertedAtTop.indexOf(styleElement);
	if(idx >= 0) {
		styleElementsInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement(options) {
	var styleElement = document.createElement("style");
	options.attrs.type = "text/css";

	attachTagAttrs(styleElement, options.attrs);
	insertStyleElement(options, styleElement);
	return styleElement;
}

function createLinkElement(options) {
	var linkElement = document.createElement("link");
	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	attachTagAttrs(linkElement, options.attrs);
	insertStyleElement(options, linkElement);
	return linkElement;
}

function attachTagAttrs(element, attrs) {
	Object.keys(attrs).forEach(function (key) {
		element.setAttribute(key, attrs[key]);
	});
}

function addStyle(obj, options) {
	var styleElement, update, remove;

	if (options.singleton) {
		var styleIndex = singletonCounter++;
		styleElement = singletonElement || (singletonElement = createStyleElement(options));
		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
	} else if(obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function") {
		styleElement = createLinkElement(options);
		update = updateLink.bind(null, styleElement, options);
		remove = function() {
			removeStyleElement(styleElement);
			if(styleElement.href)
				URL.revokeObjectURL(styleElement.href);
		};
	} else {
		styleElement = createStyleElement(options);
		update = applyToTag.bind(null, styleElement);
		remove = function() {
			removeStyleElement(styleElement);
		};
	}

	update(obj);

	return function updateStyle(newObj) {
		if(newObj) {
			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
				return;
			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;
		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag(styleElement, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (styleElement.styleSheet) {
		styleElement.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = styleElement.childNodes;
		if (childNodes[index]) styleElement.removeChild(childNodes[index]);
		if (childNodes.length) {
			styleElement.insertBefore(cssNode, childNodes[index]);
		} else {
			styleElement.appendChild(cssNode);
		}
	}
}

function applyToTag(styleElement, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		styleElement.setAttribute("media", media)
	}

	if(styleElement.styleSheet) {
		styleElement.styleSheet.cssText = css;
	} else {
		while(styleElement.firstChild) {
			styleElement.removeChild(styleElement.firstChild);
		}
		styleElement.appendChild(document.createTextNode(css));
	}
}

function updateLink(linkElement, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/* If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
	and there is no publicPath defined then lets turn convertToAbsoluteUrls
	on by default.  Otherwise default to the convertToAbsoluteUrls option
	directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls){
		css = fixUrls(css);
	}

	if(sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = linkElement.href;

	linkElement.href = URL.createObjectURL(blob);

	if(oldSrc)
		URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ 1:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return b64.length * 3 / 4 - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, j, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr(len * 3 / 4 - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0, j = 0; i < l; i += 4, j += 3) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}


/***/ }),

/***/ 2:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(1)
var ieee754 = __webpack_require__(4)
var isArray = __webpack_require__(5)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ }),

/***/ 3:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap) {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
  var base64 = new Buffer(JSON.stringify(sourceMap)).toString('base64');
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

  return '/*# ' + data + ' */';
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).Buffer))

/***/ }),

/***/ 32:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(8);
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__(0)(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js??ref--0-1!../../node_modules/postcss-loader/index.js??ref--0-2!../../node_modules/sass-loader/index.js??ref--0-3!./material-components-web.scss", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js??ref--0-1!../../node_modules/postcss-loader/index.js??ref--0-2!../../node_modules/sass-loader/index.js??ref--0-3!./material-components-web.scss");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 4:
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ 5:
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ 6:
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),

/***/ 7:
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ 8:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(3)(true);
// imports


// module
exports.push([module.i, ".mdc-animation-linear-out-slow-in {\n  -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n          animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n\n.mdc-animation-fast-out-slow-in {\n  -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n          animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n\n.mdc-animation-fast-out-linear-in {\n  -webkit-animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\n          animation-timing-function: cubic-bezier(0.4, 0, 1, 1); }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@-webkit-keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@-webkit-keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-button {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  line-height: 1.5rem;\n  color: rgba(0, 0, 0, 0.87);\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  display: inline-block;\n  position: relative;\n  min-width: 64px;\n  height: 36px;\n  padding: 0 16px;\n  border: none;\n  border-radius: 2px;\n  outline: none;\n  background: transparent;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 36px;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  overflow: hidden;\n  vertical-align: middle;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  box-sizing: border-box;\n  -webkit-appearance: none; }\n  .mdc-button:not(.mdc-ripple-upgraded):hover::before, .mdc-button:not(.mdc-ripple-upgraded):focus::before, .mdc-button:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 85ms;\n            transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-button::before {\n    background-color: rgba(0, 0, 0, 0.06);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-button.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-button.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-button.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-button.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-button::after {\n    background-color: rgba(0, 0, 0, 0.06);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-button.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-button:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-button.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-button.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-button.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-button:not(.mdc-ripple-upgraded) {\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0.18); }\n  .mdc-button--theme-dark,\n  .mdc-theme--dark .mdc-button {\n    --mdc-ripple-surface-width: 0;\n    --mdc-ripple-surface-height: 0;\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n    will-change: transform, opacity;\n    -webkit-tap-highlight-color: transparent;\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white); }\n    .mdc-button--theme-dark:not(.mdc-ripple-upgraded):hover::before, .mdc-button--theme-dark:not(.mdc-ripple-upgraded):focus::before, .mdc-button--theme-dark:not(.mdc-ripple-upgraded):active::after,\n    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):hover::before,\n    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):focus::before,\n    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):active::after {\n      -webkit-transition-duration: 85ms;\n              transition-duration: 85ms;\n      opacity: .6; }\n    .mdc-button--theme-dark::before,\n    .mdc-theme--dark .mdc-button::before {\n      background-color: rgba(255, 255, 255, 0.14);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      -webkit-transition: opacity 250ms linear;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded::before,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded::before {\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n              transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-button--theme-dark.mdc-ripple-upgraded--background-focused::before,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--background-focused::before {\n      opacity: .99999; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded--background-active-fill::before,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--background-active-fill::before {\n      -webkit-transition-duration: 120ms;\n              transition-duration: 120ms;\n      opacity: 1; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded--unbounded::before,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--unbounded::before {\n      top: calc(50% - 50%);\n      top: var(--mdc-ripple-top, calc(50% - 50%));\n      left: calc(50% - 50%);\n      left: var(--mdc-ripple-left, calc(50% - 50%));\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n              transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-button--theme-dark::after,\n    .mdc-theme--dark .mdc-button::after {\n      background-color: rgba(255, 255, 255, 0.14);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      -webkit-transition: opacity 250ms linear;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded::after,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded::after {\n      top: 0;\n      left: 0;\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform-origin: center center;\n              transform-origin: center center;\n      opacity: 0; }\n    .mdc-button--theme-dark:not(.mdc-ripple-upgraded--unbounded)::after,\n    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded--unbounded)::after {\n      -webkit-transform-origin: center center;\n              transform-origin: center center; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded--unbounded::after,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--unbounded::after {\n      top: 0;\n      top: var(--mdc-ripple-top, 0);\n      left: 0;\n      left: var(--mdc-ripple-left, 0);\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform-origin: center center;\n              transform-origin: center center; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded--foreground-activation::after,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--foreground-activation::after {\n      -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n              animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded--foreground-deactivation::after,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--foreground-deactivation::after {\n      -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n              transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n      -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n              animation: 250ms mdc-ripple-fg-opacity-out; }\n    .mdc-button--theme-dark:not(.mdc-ripple-upgraded),\n    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded) {\n      -webkit-tap-highlight-color: rgba(255, 255, 255, 0.18); }\n  .mdc-button.mdc-button--primary {\n    --mdc-ripple-surface-width: 0;\n    --mdc-ripple-surface-height: 0;\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n    will-change: transform, opacity;\n    -webkit-tap-highlight-color: transparent; }\n    .mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded):hover::before, .mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded):focus::before, .mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded):active::after {\n      -webkit-transition-duration: 85ms;\n              transition-duration: 85ms;\n      opacity: .6; }\n    .mdc-button.mdc-button--primary::before {\n      background-color: rgba(63, 81, 181, 0.12);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      -webkit-transition: opacity 250ms linear;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n      @supports (background-color: color(green a(10%))) {\n        .mdc-button.mdc-button--primary::before {\n          background-color: color(var(--mdc-theme-primary, #3f51b5) a(12%)); } }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded::before {\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n              transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--background-focused::before {\n      opacity: .99999; }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--background-active-fill::before {\n      -webkit-transition-duration: 120ms;\n              transition-duration: 120ms;\n      opacity: 1; }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--unbounded::before {\n      top: calc(50% - 50%);\n      top: var(--mdc-ripple-top, calc(50% - 50%));\n      left: calc(50% - 50%);\n      left: var(--mdc-ripple-left, calc(50% - 50%));\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n              transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-button.mdc-button--primary::after {\n      background-color: rgba(63, 81, 181, 0.12);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      -webkit-transition: opacity 250ms linear;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n      @supports (background-color: color(green a(10%))) {\n        .mdc-button.mdc-button--primary::after {\n          background-color: color(var(--mdc-theme-primary, #3f51b5) a(12%)); } }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded::after {\n      top: 0;\n      left: 0;\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform-origin: center center;\n              transform-origin: center center;\n      opacity: 0; }\n    .mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded--unbounded)::after {\n      -webkit-transform-origin: center center;\n              transform-origin: center center; }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--unbounded::after {\n      top: 0;\n      top: var(--mdc-ripple-top, 0);\n      left: 0;\n      left: var(--mdc-ripple-left, 0);\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform-origin: center center;\n              transform-origin: center center; }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--foreground-activation::after {\n      -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n              animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--foreground-deactivation::after {\n      -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n              transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n      -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n              animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-button.mdc-button--accent {\n    --mdc-ripple-surface-width: 0;\n    --mdc-ripple-surface-height: 0;\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n    will-change: transform, opacity;\n    -webkit-tap-highlight-color: transparent; }\n    .mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded):hover::before, .mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded):focus::before, .mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded):active::after {\n      -webkit-transition-duration: 85ms;\n              transition-duration: 85ms;\n      opacity: .6; }\n    .mdc-button.mdc-button--accent::before {\n      background-color: rgba(255, 64, 129, 0.12);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      -webkit-transition: opacity 250ms linear;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n      @supports (background-color: color(green a(10%))) {\n        .mdc-button.mdc-button--accent::before {\n          background-color: color(var(--mdc-theme-accent, #ff4081) a(12%)); } }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded::before {\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n              transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--background-focused::before {\n      opacity: .99999; }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--background-active-fill::before {\n      -webkit-transition-duration: 120ms;\n              transition-duration: 120ms;\n      opacity: 1; }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--unbounded::before {\n      top: calc(50% - 50%);\n      top: var(--mdc-ripple-top, calc(50% - 50%));\n      left: calc(50% - 50%);\n      left: var(--mdc-ripple-left, calc(50% - 50%));\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n              transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-button.mdc-button--accent::after {\n      background-color: rgba(255, 64, 129, 0.12);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      -webkit-transition: opacity 250ms linear;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n      @supports (background-color: color(green a(10%))) {\n        .mdc-button.mdc-button--accent::after {\n          background-color: color(var(--mdc-theme-accent, #ff4081) a(12%)); } }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded::after {\n      top: 0;\n      left: 0;\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform-origin: center center;\n              transform-origin: center center;\n      opacity: 0; }\n    .mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded--unbounded)::after {\n      -webkit-transform-origin: center center;\n              transform-origin: center center; }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--unbounded::after {\n      top: 0;\n      top: var(--mdc-ripple-top, 0);\n      left: 0;\n      left: var(--mdc-ripple-left, 0);\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform-origin: center center;\n              transform-origin: center center; }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--foreground-activation::after {\n      -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n              animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--foreground-deactivation::after {\n      -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n              transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n      -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n              animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-button:active {\n    outline: none; }\n  .mdc-button:hover {\n    cursor: pointer; }\n  .mdc-button::-moz-focus-inner {\n    padding: 0;\n    border: 0; }\n  .mdc-button--dense {\n    height: 32px;\n    font-size: .8125rem;\n    line-height: 32px; }\n  .mdc-button--raised {\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    -webkit-transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n    will-change: box-shadow;\n    min-width: 88px; }\n    .mdc-button--raised:active {\n      box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n    .mdc-button--raised.mdc-button--primary {\n      --mdc-ripple-surface-width: 0;\n      --mdc-ripple-surface-height: 0;\n      --mdc-ripple-fg-size: 0;\n      --mdc-ripple-left: 0;\n      --mdc-ripple-top: 0;\n      --mdc-ripple-fg-scale: 1;\n      --mdc-ripple-fg-translate-end: 0;\n      --mdc-ripple-fg-translate-start: 0;\n      will-change: transform, opacity;\n      -webkit-tap-highlight-color: transparent; }\n      .mdc-button--raised.mdc-button--primary:not(.mdc-ripple-upgraded):hover::before, .mdc-button--raised.mdc-button--primary:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised.mdc-button--primary:not(.mdc-ripple-upgraded):active::after {\n        -webkit-transition-duration: 85ms;\n                transition-duration: 85ms;\n        opacity: .6; }\n      .mdc-button--raised.mdc-button--primary::before {\n        background-color: rgba(255, 255, 255, 0.14);\n        position: absolute;\n        top: calc(50% - 100%);\n        left: calc(50% - 100%);\n        width: 200%;\n        height: 200%;\n        -webkit-transition: opacity 250ms linear;\n        transition: opacity 250ms linear;\n        border-radius: 50%;\n        opacity: 0;\n        pointer-events: none;\n        content: \"\"; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded::before {\n        top: calc(50% - 100%);\n        left: calc(50% - 100%);\n        width: 200%;\n        height: 200%;\n        -webkit-transform: scale(0);\n                transform: scale(0);\n        -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n                transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--background-focused::before {\n        opacity: .99999; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--background-active-fill::before {\n        -webkit-transition-duration: 120ms;\n                transition-duration: 120ms;\n        opacity: 1; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--unbounded::before {\n        top: calc(50% - 50%);\n        top: var(--mdc-ripple-top, calc(50% - 50%));\n        left: calc(50% - 50%);\n        left: var(--mdc-ripple-left, calc(50% - 50%));\n        width: 100%;\n        width: var(--mdc-ripple-fg-size, 100%);\n        height: 100%;\n        height: var(--mdc-ripple-fg-size, 100%);\n        -webkit-transform: scale(0);\n                transform: scale(0);\n        -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n                transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n      .mdc-button--raised.mdc-button--primary::after {\n        background-color: rgba(255, 255, 255, 0.14);\n        position: absolute;\n        top: calc(50% - 100%);\n        left: calc(50% - 100%);\n        width: 200%;\n        height: 200%;\n        -webkit-transition: opacity 250ms linear;\n        transition: opacity 250ms linear;\n        border-radius: 50%;\n        opacity: 0;\n        pointer-events: none;\n        content: \"\"; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded::after {\n        top: 0;\n        left: 0;\n        width: 100%;\n        width: var(--mdc-ripple-fg-size, 100%);\n        height: 100%;\n        height: var(--mdc-ripple-fg-size, 100%);\n        -webkit-transform: scale(0);\n                transform: scale(0);\n        -webkit-transform-origin: center center;\n                transform-origin: center center;\n        opacity: 0; }\n      .mdc-button--raised.mdc-button--primary:not(.mdc-ripple-upgraded--unbounded)::after {\n        -webkit-transform-origin: center center;\n                transform-origin: center center; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--unbounded::after {\n        top: 0;\n        top: var(--mdc-ripple-top, 0);\n        left: 0;\n        left: var(--mdc-ripple-left, 0);\n        width: 100%;\n        width: var(--mdc-ripple-fg-size, 100%);\n        height: 100%;\n        height: var(--mdc-ripple-fg-size, 100%);\n        -webkit-transform: scale(0);\n                transform: scale(0);\n        -webkit-transform-origin: center center;\n                transform-origin: center center; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--foreground-activation::after {\n        -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n                animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--foreground-deactivation::after {\n        -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n                transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n        -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n                animation: 250ms mdc-ripple-fg-opacity-out; }\n    .mdc-button--raised.mdc-button--accent {\n      --mdc-ripple-surface-width: 0;\n      --mdc-ripple-surface-height: 0;\n      --mdc-ripple-fg-size: 0;\n      --mdc-ripple-left: 0;\n      --mdc-ripple-top: 0;\n      --mdc-ripple-fg-scale: 1;\n      --mdc-ripple-fg-translate-end: 0;\n      --mdc-ripple-fg-translate-start: 0;\n      will-change: transform, opacity;\n      -webkit-tap-highlight-color: transparent; }\n      .mdc-button--raised.mdc-button--accent:not(.mdc-ripple-upgraded):hover::before, .mdc-button--raised.mdc-button--accent:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised.mdc-button--accent:not(.mdc-ripple-upgraded):active::after {\n        -webkit-transition-duration: 85ms;\n                transition-duration: 85ms;\n        opacity: .6; }\n      .mdc-button--raised.mdc-button--accent::before {\n        background-color: rgba(255, 255, 255, 0.14);\n        position: absolute;\n        top: calc(50% - 100%);\n        left: calc(50% - 100%);\n        width: 200%;\n        height: 200%;\n        -webkit-transition: opacity 250ms linear;\n        transition: opacity 250ms linear;\n        border-radius: 50%;\n        opacity: 0;\n        pointer-events: none;\n        content: \"\"; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded::before {\n        top: calc(50% - 100%);\n        left: calc(50% - 100%);\n        width: 200%;\n        height: 200%;\n        -webkit-transform: scale(0);\n                transform: scale(0);\n        -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n                transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--background-focused::before {\n        opacity: .99999; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--background-active-fill::before {\n        -webkit-transition-duration: 120ms;\n                transition-duration: 120ms;\n        opacity: 1; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--unbounded::before {\n        top: calc(50% - 50%);\n        top: var(--mdc-ripple-top, calc(50% - 50%));\n        left: calc(50% - 50%);\n        left: var(--mdc-ripple-left, calc(50% - 50%));\n        width: 100%;\n        width: var(--mdc-ripple-fg-size, 100%);\n        height: 100%;\n        height: var(--mdc-ripple-fg-size, 100%);\n        -webkit-transform: scale(0);\n                transform: scale(0);\n        -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n                transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n      .mdc-button--raised.mdc-button--accent::after {\n        background-color: rgba(255, 255, 255, 0.14);\n        position: absolute;\n        top: calc(50% - 100%);\n        left: calc(50% - 100%);\n        width: 200%;\n        height: 200%;\n        -webkit-transition: opacity 250ms linear;\n        transition: opacity 250ms linear;\n        border-radius: 50%;\n        opacity: 0;\n        pointer-events: none;\n        content: \"\"; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded::after {\n        top: 0;\n        left: 0;\n        width: 100%;\n        width: var(--mdc-ripple-fg-size, 100%);\n        height: 100%;\n        height: var(--mdc-ripple-fg-size, 100%);\n        -webkit-transform: scale(0);\n                transform: scale(0);\n        -webkit-transform-origin: center center;\n                transform-origin: center center;\n        opacity: 0; }\n      .mdc-button--raised.mdc-button--accent:not(.mdc-ripple-upgraded--unbounded)::after {\n        -webkit-transform-origin: center center;\n                transform-origin: center center; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--unbounded::after {\n        top: 0;\n        top: var(--mdc-ripple-top, 0);\n        left: 0;\n        left: var(--mdc-ripple-left, 0);\n        width: 100%;\n        width: var(--mdc-ripple-fg-size, 100%);\n        height: 100%;\n        height: var(--mdc-ripple-fg-size, 100%);\n        -webkit-transform: scale(0);\n                transform: scale(0);\n        -webkit-transform-origin: center center;\n                transform-origin: center center; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--foreground-activation::after {\n        -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n                animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--foreground-deactivation::after {\n        -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n                transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n        -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n                animation: 250ms mdc-ripple-fg-opacity-out; }\n    .mdc-button--theme-dark .mdc-button--raised,\n    .mdc-theme--dark .mdc-button--raised {\n      background-color: #3f51b5;\n      background-color: var(--mdc-theme-primary, #3f51b5); }\n      .mdc-button--theme-dark .mdc-button--raised::before,\n      .mdc-theme--dark .mdc-button--raised::before {\n        color: black; }\n  .mdc-button--primary {\n    color: #3f51b5;\n    color: var(--mdc-theme-primary, #3f51b5); }\n    .mdc-button--theme-dark .mdc-button--primary,\n    .mdc-theme--dark .mdc-button--primary {\n      color: #3f51b5;\n      color: var(--mdc-theme-primary, #3f51b5); }\n    .mdc-button--primary.mdc-button--raised {\n      background-color: #3f51b5;\n      background-color: var(--mdc-theme-primary, #3f51b5);\n      color: white;\n      color: var(--mdc-theme-text-primary-on-primary, white); }\n      .mdc-button--primary.mdc-button--raised::before {\n        color: black; }\n  .mdc-button--accent {\n    color: #ff4081;\n    color: var(--mdc-theme-accent, #ff4081); }\n    .mdc-button--theme-dark .mdc-button--accent,\n    .mdc-theme--dark .mdc-button--accent {\n      color: #ff4081;\n      color: var(--mdc-theme-accent, #ff4081); }\n    .mdc-button--accent.mdc-button--raised {\n      background-color: #ff4081;\n      background-color: var(--mdc-theme-accent, #ff4081);\n      color: white;\n      color: var(--mdc-theme-text-primary-on-accent, white); }\n      .mdc-button--accent.mdc-button--raised::before {\n        color: black; }\n  .mdc-button--compact {\n    padding: 0 8px; }\n  fieldset:disabled .mdc-button, .mdc-button:disabled {\n    color: rgba(0, 0, 0, 0.26);\n    cursor: default;\n    pointer-events: none; }\n    .mdc-button--theme-dark fieldset:disabled .mdc-button,\n    .mdc-theme--dark fieldset:disabled .mdc-button, .mdc-button--theme-dark .mdc-button:disabled,\n    .mdc-theme--dark .mdc-button:disabled {\n      color: rgba(255, 255, 255, 0.3); }\n  fieldset:disabled .mdc-button--raised, .mdc-button--raised:disabled {\n    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n    background-color: rgba(0, 0, 0, 0.12);\n    pointer-events: none; }\n    .mdc-button--theme-dark fieldset:disabled .mdc-button--raised,\n    .mdc-theme--dark fieldset:disabled .mdc-button--raised, .mdc-button--theme-dark .mdc-button--raised:disabled,\n    .mdc-theme--dark .mdc-button--raised:disabled {\n      background-color: rgba(255, 255, 255, 0.12); }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-card {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-pack: end;\n      -ms-flex-pack: end;\n          justify-content: flex-end;\n  padding: 0;\n  box-sizing: border-box; }\n  .mdc-card__primary {\n    padding: 16px; }\n    .mdc-card__primary .mdc-card__title--large {\n      padding-top: 8px; }\n    .mdc-card__primary:last-child {\n      padding-bottom: 24px; }\n  .mdc-card__supporting-text {\n    padding: 8px 16px;\n    box-sizing: border-box;\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 400;\n    letter-spacing: 0.04em;\n    line-height: 1.25rem;\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n    .mdc-card--theme-dark .mdc-card__supporting-text,\n    .mdc-theme--dark .mdc-card__supporting-text {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n    .mdc-card__primary + .mdc-card__supporting-text {\n      margin-top: -8px;\n      padding-top: 0; }\n    .mdc-card__supporting-text:last-child {\n      padding-bottom: 24px; }\n  .mdc-card__actions {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    padding: 8px;\n    box-sizing: border-box; }\n    .mdc-card--theme-dark .mdc-card__actions,\n    .mdc-theme--dark .mdc-card__actions {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n    .mdc-card__actions .mdc-card__action {\n      margin: 0 8px 0 0; }\n    .mdc-card__actions .mdc-card__action:last-child {\n      margin-right: 0; }\n    .mdc-card__actions--vertical {\n      -webkit-box-orient: vertical;\n      -webkit-box-direction: normal;\n          -ms-flex-flow: column;\n              flex-flow: column;\n      -webkit-box-align: start;\n          -ms-flex-align: start;\n              align-items: flex-start; }\n      .mdc-card__actions--vertical .mdc-card__action {\n        margin: 0 0 4px; }\n      .mdc-card__actions--vertical .mdc-card__action:last-child {\n        margin-bottom: 0; }\n  .mdc-card__media {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n    -webkit-box-pack: end;\n        -ms-flex-pack: end;\n            justify-content: flex-end;\n    padding: 16px;\n    box-sizing: border-box; }\n  .mdc-card__media-item {\n    display: inline-block;\n    width: auto;\n    height: 80px;\n    margin: 16px 0 0;\n    padding: 0; }\n    .mdc-card__media-item--1dot5x {\n      width: auto;\n      height: 120px; }\n    .mdc-card__media-item--2x {\n      width: auto;\n      height: 160px; }\n    .mdc-card__media-item--3x {\n      width: auto;\n      height: 240px; }\n  .mdc-card__title {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    line-height: 1.5rem;\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n    margin: -.063rem 0; }\n    .mdc-card--theme-dark .mdc-card__title,\n    .mdc-theme--dark .mdc-card__title {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n  .mdc-card__title--large {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 1.5rem;\n    font-weight: 400;\n    letter-spacing: normal;\n    line-height: 2rem;\n    margin: 0; }\n  .mdc-card__subtitle {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 400;\n    letter-spacing: 0.04em;\n    line-height: 1.25rem;\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n    margin: -.063rem 0; }\n    .mdc-card--theme-dark .mdc-card__subtitle,\n    .mdc-theme--dark .mdc-card__subtitle {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n  .mdc-card__horizontal-block {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: flex-start;\n    -webkit-box-pack: justify;\n        -ms-flex-pack: justify;\n            justify-content: space-between;\n    padding: 0 16px 0 0;\n    box-sizing: border-box; }\n    .mdc-card__horizontal-block .mdc-card__actions--vertical {\n      margin: 16px; }\n    .mdc-card__horizontal-block .mdc-card__media-item {\n      margin-left: 16px; }\n    .mdc-card__horizontal-block .mdc-card__media-item--3x {\n      margin-bottom: 16px; }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* Manual calculation done on SVG */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* Manual calculation done on SVG */\n@-webkit-keyframes mdc-checkbox-fade-in-background {\n  0% {\n    border-color: rgba(0, 0, 0, 0.54);\n    background-color: transparent; }\n  50% {\n    border-color: #3f51b5;\n    border-color: var(--mdc-theme-primary, #3f51b5);\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); } }\n@keyframes mdc-checkbox-fade-in-background {\n  0% {\n    border-color: rgba(0, 0, 0, 0.54);\n    background-color: transparent; }\n  50% {\n    border-color: #3f51b5;\n    border-color: var(--mdc-theme-primary, #3f51b5);\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); } }\n\n@-webkit-keyframes mdc-checkbox-fade-out-background {\n  0%,\n  80% {\n    border-color: #3f51b5;\n    border-color: var(--mdc-theme-primary, #3f51b5);\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); }\n  100% {\n    border-color: rgba(0, 0, 0, 0.54);\n    background-color: transparent; } }\n\n@keyframes mdc-checkbox-fade-out-background {\n  0%,\n  80% {\n    border-color: #3f51b5;\n    border-color: var(--mdc-theme-primary, #3f51b5);\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); }\n  100% {\n    border-color: rgba(0, 0, 0, 0.54);\n    background-color: transparent; } }\n\n@-webkit-keyframes mdc-checkbox-fade-in-background-dark {\n  0% {\n    border-color: white;\n    background-color: transparent; }\n  50% {\n    border-color: #3f51b5;\n    border-color: var(--mdc-theme-primary, #3f51b5);\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); } }\n\n@keyframes mdc-checkbox-fade-in-background-dark {\n  0% {\n    border-color: white;\n    background-color: transparent; }\n  50% {\n    border-color: #3f51b5;\n    border-color: var(--mdc-theme-primary, #3f51b5);\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); } }\n\n@-webkit-keyframes mdc-checkbox-fade-out-background-dark {\n  0%,\n  80% {\n    border-color: #3f51b5;\n    border-color: var(--mdc-theme-primary, #3f51b5);\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); }\n  100% {\n    border-color: white;\n    background-color: transparent; } }\n\n@keyframes mdc-checkbox-fade-out-background-dark {\n  0%,\n  80% {\n    border-color: #3f51b5;\n    border-color: var(--mdc-theme-primary, #3f51b5);\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); }\n  100% {\n    border-color: white;\n    background-color: transparent; } }\n\n@-webkit-keyframes mdc-checkbox-unchecked-checked-checkmark-path {\n  0%,\n  50% {\n    stroke-dashoffset: 29.78334; }\n  50% {\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n  100% {\n    stroke-dashoffset: 0; } }\n\n@keyframes mdc-checkbox-unchecked-checked-checkmark-path {\n  0%,\n  50% {\n    stroke-dashoffset: 29.78334; }\n  50% {\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n  100% {\n    stroke-dashoffset: 0; } }\n\n@-webkit-keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {\n  0%,\n  68.2% {\n    -webkit-transform: scaleX(0);\n            transform: scaleX(0); }\n  68.2% {\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0, 1); }\n  100% {\n    -webkit-transform: scaleX(1);\n            transform: scaleX(1); } }\n\n@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {\n  0%,\n  68.2% {\n    -webkit-transform: scaleX(0);\n            transform: scaleX(0); }\n  68.2% {\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0, 1); }\n  100% {\n    -webkit-transform: scaleX(1);\n            transform: scaleX(1); } }\n\n@-webkit-keyframes mdc-checkbox-checked-unchecked-checkmark-path {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\n    opacity: 1;\n    stroke-dashoffset: 0; }\n  to {\n    opacity: 0;\n    stroke-dashoffset: -29.78334; } }\n\n@keyframes mdc-checkbox-checked-unchecked-checkmark-path {\n  from {\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\n    opacity: 1;\n    stroke-dashoffset: 0; }\n  to {\n    opacity: 0;\n    stroke-dashoffset: -29.78334; } }\n\n@-webkit-keyframes mdc-checkbox-checked-indeterminate-checkmark {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    opacity: 1;\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n  to {\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg);\n    opacity: 0; } }\n\n@keyframes mdc-checkbox-checked-indeterminate-checkmark {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    opacity: 1;\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n  to {\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg);\n    opacity: 0; } }\n\n@-webkit-keyframes mdc-checkbox-indeterminate-checked-checkmark {\n  from {\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg);\n    opacity: 0;\n    -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0.14, 0, 0, 1); }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n    opacity: 1; } }\n\n@keyframes mdc-checkbox-indeterminate-checked-checkmark {\n  from {\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg);\n    opacity: 0;\n    -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0.14, 0, 0, 1); }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n    opacity: 1; } }\n\n@-webkit-keyframes mdc-checkbox-checked-indeterminate-mixedmark {\n  from {\n    -webkit-transform: rotate(-45deg);\n            transform: rotate(-45deg);\n    opacity: 0;\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n  to {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    opacity: 1; } }\n\n@keyframes mdc-checkbox-checked-indeterminate-mixedmark {\n  from {\n    -webkit-transform: rotate(-45deg);\n            transform: rotate(-45deg);\n    opacity: 0;\n    -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n  to {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    opacity: 1; } }\n\n@-webkit-keyframes mdc-checkbox-indeterminate-checked-mixedmark {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    opacity: 1;\n    -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0.14, 0, 0, 1); }\n  to {\n    -webkit-transform: rotate(315deg);\n            transform: rotate(315deg);\n    opacity: 0; } }\n\n@keyframes mdc-checkbox-indeterminate-checked-mixedmark {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n    opacity: 1;\n    -webkit-animation-timing-function: cubic-bezier(0.14, 0, 0, 1);\n            animation-timing-function: cubic-bezier(0.14, 0, 0, 1); }\n  to {\n    -webkit-transform: rotate(315deg);\n            transform: rotate(315deg);\n    opacity: 0; } }\n\n@-webkit-keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {\n  0% {\n    -webkit-transform: scaleX(1);\n            transform: scaleX(1);\n    opacity: 1;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  32.8%,\n  100% {\n    -webkit-transform: scaleX(0);\n            transform: scaleX(0);\n    opacity: 0; } }\n\n@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {\n  0% {\n    -webkit-transform: scaleX(1);\n            transform: scaleX(1);\n    opacity: 1;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  32.8%,\n  100% {\n    -webkit-transform: scaleX(0);\n            transform: scaleX(0);\n    opacity: 0; } }\n\n.mdc-checkbox {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  display: inline-block;\n  position: relative;\n  box-sizing: content-box;\n  width: 18px;\n  height: 18px;\n  -webkit-box-flex: 0;\n      -ms-flex: 0 0 18px;\n          flex: 0 0 18px;\n  padding: 11px;\n  line-height: 0;\n  white-space: nowrap;\n  cursor: pointer;\n  vertical-align: bottom; }\n  .mdc-checkbox:not(.mdc-ripple-upgraded):hover::before, .mdc-checkbox:not(.mdc-ripple-upgraded):focus::before, .mdc-checkbox:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 85ms;\n            transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-checkbox::before {\n    background-color: rgba(63, 81, 181, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-checkbox::before {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }\n  .mdc-checkbox.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-checkbox.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-checkbox.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-checkbox.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-checkbox::after {\n    background-color: rgba(63, 81, 181, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-checkbox::after {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }\n  .mdc-checkbox.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-checkbox:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-checkbox.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-checkbox.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-checkbox.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-checkbox::before, .mdc-checkbox::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%; }\n  .mdc-checkbox.mdc-ripple-upgraded--unbounded .mdc-checkbox__background::before {\n    content: none; }\n  .mdc-checkbox__background {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    left: 11px;\n    right: initial;\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    top: 11px;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    box-sizing: border-box;\n    pointer-events: none;\n    width: 45%;\n    height: 45%;\n    -webkit-transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 1, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 1, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    border: 2px solid rgba(0, 0, 0, 0.54);\n    border-radius: 2px;\n    background-color: transparent;\n    will-change: background-color, border-color; }\n    [dir=\"rtl\"] .mdc-checkbox .mdc-checkbox__background,\n    .mdc-checkbox[dir=\"rtl\"] .mdc-checkbox__background {\n      left: initial;\n      right: 11px; }\n    .mdc-checkbox--theme-dark .mdc-checkbox__background,\n    .mdc-theme--dark .mdc-checkbox__background {\n      border-color: white; }\n    .mdc-checkbox__background::before {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      -webkit-transform: scale(0, 0);\n              transform: scale(0, 0);\n      -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      border-radius: 50%;\n      content: \"\";\n      opacity: 0;\n      pointer-events: none;\n      will-change: opacity, transform;\n      background: #3f51b5;\n      background: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-checkbox__native-control {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    cursor: inherit;\n    opacity: 0; }\n  .mdc-checkbox__checkmark {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    -webkit-transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    opacity: 0;\n    fill: white; }\n    .mdc-checkbox__checkmark__path {\n      -webkit-transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      stroke: white !important;\n      stroke-width: 3.12px;\n      stroke-dashoffset: 29.78334;\n      stroke-dasharray: 29.78334; }\n  .mdc-checkbox__mixedmark {\n    width: 100%;\n    height: 2px;\n    -webkit-transform: scaleX(0) rotate(0deg);\n            transform: scaleX(0) rotate(0deg);\n    -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    background-color: white;\n    opacity: 0; }\n\n.mdc-checkbox__native-control:focus ~ .mdc-checkbox__background::before {\n  -webkit-transform: scale(2.75, 2.75);\n          transform: scale(2.75, 2.75);\n  -webkit-transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: .26; }\n\n.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background {\n  -webkit-transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  border-color: #3f51b5;\n  border-color: var(--mdc-theme-primary, #3f51b5);\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark {\n    -webkit-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: 1; }\n    .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark__path {\n      stroke-dashoffset: 0; }\n  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__mixedmark {\n    -webkit-transform: scaleX(1) rotate(-45deg);\n            transform: scaleX(1) rotate(-45deg); }\n\n.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background {\n  border-color: #3f51b5;\n  border-color: var(--mdc-theme-primary, #3f51b5);\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark {\n    -webkit-transform: rotate(45deg);\n            transform: rotate(45deg);\n    -webkit-transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    opacity: 0; }\n    .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark__path {\n      stroke-dashoffset: 0; }\n  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__mixedmark {\n    -webkit-transform: scaleX(1) rotate(0deg);\n            transform: scaleX(1) rotate(0deg);\n    opacity: 1; }\n\n.mdc-checkbox__native-control:disabled,\nfieldset:disabled .mdc-checkbox__native-control,\n[aria-disabled=\"true\"] .mdc-checkbox__native-control {\n  cursor: default; }\n  .mdc-checkbox__native-control:disabled ~ .mdc-checkbox__background,\n  fieldset:disabled .mdc-checkbox__native-control ~ .mdc-checkbox__background,\n  [aria-disabled=\"true\"] .mdc-checkbox__native-control ~ .mdc-checkbox__background {\n    border-color: rgba(0, 0, 0, 0.26); }\n    .mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled ~ .mdc-checkbox__background,\n    .mdc-theme--dark .mdc-checkbox__native-control:disabled ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark\n    fieldset:disabled .mdc-checkbox__native-control ~ .mdc-checkbox__background,\n    .mdc-theme--dark\n    fieldset:disabled .mdc-checkbox__native-control ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark\n    [aria-disabled=\"true\"] .mdc-checkbox__native-control ~ .mdc-checkbox__background,\n    .mdc-theme--dark\n    [aria-disabled=\"true\"] .mdc-checkbox__native-control ~ .mdc-checkbox__background {\n      border-color: rgba(255, 255, 255, 0.3); }\n  .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background, .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background,\n  fieldset:disabled .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,\n  fieldset:disabled .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background,\n  [aria-disabled=\"true\"] .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,\n  [aria-disabled=\"true\"] .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background {\n    border-color: transparent;\n    background-color: rgba(0, 0, 0, 0.26); }\n    .mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background,\n    .mdc-theme--dark .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background,\n    .mdc-theme--dark .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark\n    fieldset:disabled .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,\n    .mdc-theme--dark\n    fieldset:disabled .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark\n    fieldset:disabled .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background,\n    .mdc-theme--dark\n    fieldset:disabled .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark\n    [aria-disabled=\"true\"] .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,\n    .mdc-theme--dark\n    [aria-disabled=\"true\"] .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark\n    [aria-disabled=\"true\"] .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background,\n    .mdc-theme--dark\n    [aria-disabled=\"true\"] .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background {\n      background-color: rgba(255, 255, 255, 0.3); }\n\n.mdc-checkbox--upgraded .mdc-checkbox__background,\n.mdc-checkbox--upgraded .mdc-checkbox__checkmark,\n.mdc-checkbox--upgraded .mdc-checkbox__checkmark__path,\n.mdc-checkbox--upgraded .mdc-checkbox__mixedmark {\n  -webkit-transition: none !important;\n  transition: none !important; }\n\n.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background, .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background {\n  -webkit-animation: mdc-checkbox-fade-in-background 180ms linear;\n          animation: mdc-checkbox-fade-in-background 180ms linear; }\n  .mdc-checkbox--theme-dark .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,\n  .mdc-theme--dark .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background, .mdc-checkbox--theme-dark .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,\n  .mdc-theme--dark .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background {\n    -webkit-animation-name: mdc-checkbox-fade-in-background-dark;\n            animation-name: mdc-checkbox-fade-in-background-dark; }\n\n.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background, .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background {\n  -webkit-animation: mdc-checkbox-fade-out-background 180ms linear;\n          animation: mdc-checkbox-fade-out-background 180ms linear; }\n  .mdc-checkbox--theme-dark .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,\n  .mdc-theme--dark .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background, .mdc-checkbox--theme-dark .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background,\n  .mdc-theme--dark .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background {\n    -webkit-animation-name: mdc-checkbox-fade-out-background-dark;\n            animation-name: mdc-checkbox-fade-out-background-dark; }\n\n.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark__path {\n  -webkit-animation: 180ms linear 0s mdc-checkbox-unchecked-checked-checkmark-path;\n          animation: 180ms linear 0s mdc-checkbox-unchecked-checked-checkmark-path;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark {\n  -webkit-animation: 90ms linear 0s mdc-checkbox-unchecked-indeterminate-mixedmark;\n          animation: 90ms linear 0s mdc-checkbox-unchecked-indeterminate-mixedmark;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark__path {\n  -webkit-animation: 90ms linear 0s mdc-checkbox-checked-unchecked-checkmark-path;\n          animation: 90ms linear 0s mdc-checkbox-checked-unchecked-checkmark-path;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark {\n  -webkit-animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-checkmark;\n          animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-checkmark;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark {\n  -webkit-animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-mixedmark;\n          animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-mixedmark;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark {\n  -webkit-animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-checkmark;\n          animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-checkmark;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark {\n  -webkit-animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-mixedmark;\n          animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-mixedmark;\n  -webkit-transition: none;\n  transition: none; }\n\n.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark {\n  -webkit-animation: 300ms linear 0s mdc-checkbox-indeterminate-unchecked-mixedmark;\n          animation: 300ms linear 0s mdc-checkbox-indeterminate-unchecked-mixedmark;\n  -webkit-transition: none;\n  transition: none; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n:root {\n  --mdc-dialog-dark-theme-bg-color: #303030; }\n\n.mdc-dialog {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: fixed;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  opacity: 0;\n  z-index: -1; }\n  .mdc-dialog__surface {\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n    box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n    width: calc(100% - 30px);\n    min-width: 640px;\n    max-width: 865px;\n    -webkit-transform: translateY(150px) scale(0.8);\n            transform: translateY(150px) scale(0.8);\n    -webkit-transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    border-radius: 2px;\n    background-color: #fff;\n    background-color: var(--mdc-theme-background, #fff);\n    opacity: 0; }\n    .mdc-dialog--theme-dark .mdc-dialog__surface,\n    .mdc-theme--dark .mdc-dialog__surface {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white);\n      background-color: #303030;\n      background-color: var(--mdc-dialog-dark-theme-bg-color, #303030); }\n    [dir=\"rtl\"] .mdc-dialog .mdc-dialog__surface,\n    .mdc-dialog[dir=\"rtl\"] .mdc-dialog__surface {\n      text-align: right; }\n  .mdc-dialog__backdrop {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: fixed;\n    top: 0;\n    left: 0;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.87);\n    background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n    opacity: 0;\n    z-index: -1; }\n  .mdc-dialog__header {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    padding: 24px 24px 0; }\n    .mdc-dialog__header__empty {\n      padding: 0; }\n    [dir=\"rtl\"] .mdc-dialog .mdc-dialog__header,\n    .mdc-dialog[dir=\"rtl\"] .mdc-dialog__header {\n      text-align: right; }\n    .mdc-dialog__header__title {\n      -webkit-box-flex: 1;\n          -ms-flex: 1;\n              flex: 1;\n      margin: 0;\n      font-family: Roboto, sans-serif;\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-font-smoothing: antialiased;\n      font-size: 1.25rem;\n      font-weight: 500;\n      letter-spacing: 0.02em;\n      line-height: 2rem; }\n  .mdc-dialog__body {\n    margin-top: 20px;\n    padding: 0 24px 24px;\n    color: rgba(0, 0, 0, 0.54);\n    color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 400;\n    letter-spacing: 0.04em;\n    line-height: 1.25rem; }\n    .mdc-dialog--theme-dark.mdc-dialog__body,\n    .mdc-theme--dark .mdc-dialog__body {\n      color: rgba(255, 255, 255, 0.7);\n      color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n    .mdc-dialog__body--scrollable {\n      max-height: 195px;\n      border-top: 1px solid rgba(0, 0, 0, 0.1);\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n      overflow-y: scroll;\n      overflow-x: auto;\n      -webkit-overflow-scrolling: touch; }\n  .mdc-dialog__footer {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    -webkit-box-pack: end;\n        -ms-flex-pack: end;\n            justify-content: flex-end;\n    padding: 8px; }\n  @media (max-width: 640px) {\n    .mdc-dialog {\n      min-width: 280px; }\n      .mdc-dialog__surface {\n        min-width: 280px; }\n      .mdc-dialog__body {\n        line-height: 24px; } }\n\n.mdc-dialog--open {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  top: 0;\n  left: 0;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  width: 100%;\n  height: 100%;\n  opacity: 1;\n  z-index: 2; }\n  .mdc-dialog--open .mdc-dialog__surface {\n    -webkit-transform: translateY(0) scale(1);\n            transform: translateY(0) scale(1);\n    -webkit-transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: 1; }\n  .mdc-dialog--open .mdc-dialog__backdrop {\n    -webkit-transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .3; }\n\n.mdc-dialog-scroll-lock {\n  height: 100vh;\n  overflow: hidden; }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n:root {\n  --mdc-persistent-drawer-dark-theme-bg-color: #212121; }\n\n.mdc-persistent-drawer {\n  /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */\n  /* stylelint-disable selector-no-qualifying-type */\n  /* stylelint-enable selector-no-qualifying-type */\n  /* TODO(sgomes): Revisit when we have interactive lists. */\n  width: 0; }\n  .mdc-persistent-drawer__toolbar-spacer {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -ms-flex-negative: 0;\n        flex-shrink: 0;\n    -webkit-box-align: flex-center;\n        -ms-flex-align: flex-center;\n            align-items: flex-center;\n    height: 56px;\n    padding: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    box-sizing: border-box;\n    /* TODO(sgomes): replace with global breakpoints when we have them */ }\n    .mdc-persistent-drawer__toolbar-spacer--theme-dark .mdc-persistent-drawer__toolbar-spacer,\n    .mdc-theme--dark .mdc-persistent-drawer__toolbar-spacer {\n      border-bottom: 1px solid rgba(255, 255, 255, 0.12); }\n    @media (min-width: 600px) {\n      .mdc-persistent-drawer__toolbar-spacer {\n        height: 64px; } }\n  .mdc-persistent-drawer__header {\n    position: relative; }\n  .mdc-persistent-drawer__header::before {\n    display: block;\n    padding-top: 56.25%;\n    content: \"\"; }\n  .mdc-persistent-drawer__header-content {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n    padding: 16px;\n    box-sizing: border-box; }\n  .mdc-persistent-drawer .mdc-list-group,\n  .mdc-persistent-drawer .mdc-list {\n    padding-right: 0;\n    padding-left: 0; }\n  .mdc-persistent-drawer .mdc-list-item {\n    position: relative;\n    padding: 0 16px;\n    outline: none;\n    color: inherit;\n    text-decoration: none;\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    line-height: 1.5rem; }\n  .mdc-persistent-drawer .mdc-list-item__start-detail {\n    color: rgba(0, 0, 0, 0.54); }\n    .mdc-persistent-drawer .mdc-list-item__start-detail--theme-dark .mdc-persistent-drawer .mdc-list-item__start-detail,\n    .mdc-theme--dark .mdc-persistent-drawer .mdc-list-item__start-detail {\n      color: rgba(255, 255, 255, 0.54); }\n  .mdc-persistent-drawer--selected.mdc-list-item,\n  .mdc-persistent-drawer--selected.mdc-list-item .mdc-list-item__start-detail {\n    color: #3f51b5;\n    color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-persistent-drawer .mdc-list-item::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    -webkit-transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    border-radius: inherit;\n    background: currentColor;\n    content: \"\";\n    opacity: 0; }\n  .mdc-persistent-drawer .mdc-list-item:focus::before {\n    -webkit-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .12; }\n  .mdc-persistent-drawer .mdc-list-item:active::before {\n    /*\n      Slightly darker value for visual distinction.\n      This allows a full base that has distinct modes.\n      Progressive enhancement with ripples will provide complete button spec alignment.\n    */\n    -webkit-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .18; }\n  .mdc-persistent-drawer .mdc-list-item:active:focus::before {\n    -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  .mdc-persistent-drawer__drawer {\n    background: #fff;\n    background: var(--mdc-theme-background, #fff);\n    border-left: 0;\n    border-right: 1px solid #e4e4e4;\n    left: 0;\n    right: initial;\n    height: 100%;\n    -webkit-transform: translateX(-107%);\n            transform: translateX(-107%);\n    -webkit-transform: translateX(calc(-100% - 20px));\n            transform: translateX(calc(-100% - 20px));\n    will-change: transform;\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n    box-sizing: border-box;\n    overflow: hidden;\n    -ms-touch-action: none;\n        touch-action: none;\n    width: 240px; }\n    [dir=\"rtl\"] .mdc-persistent-drawer__drawer, .mdc-persistent-drawer__drawer[dir=\"rtl\"] {\n      border-left: 1px solid #e4e4e4;\n      border-right: 0; }\n    [dir=\"rtl\"] .mdc-persistent-drawer__drawer, .mdc-persistent-drawer__drawer[dir=\"rtl\"] {\n      left: initial;\n      right: 0; }\n    .mdc-persistent-drawer__drawer--theme-dark,\n    .mdc-theme--dark .mdc-persistent-drawer__drawer {\n      background-color: #212121;\n      background-color: var(--mdc-persistent-drawer-dark-theme-bg-color, #212121);\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white);\n      border-left: 0;\n      border-right: 1px solid rgba(255, 255, 255, 0.12); }\n      [dir=\"rtl\"] .mdc-persistent-drawer__drawer--theme-dark, .mdc-persistent-drawer__drawer--theme-dark[dir=\"rtl\"], [dir=\"rtl\"]\n      .mdc-theme--dark .mdc-persistent-drawer__drawer,\n      .mdc-theme--dark .mdc-persistent-drawer__drawer[dir=\"rtl\"] {\n        border-left: 1px solid rgba(255, 255, 255, 0.12);\n        border-right: 0; }\n    [dir=\"rtl\"] .mdc-persistent-drawer .mdc-persistent-drawer__drawer,\n    .mdc-persistent-drawer[dir=\"rtl\"] .mdc-persistent-drawer__drawer {\n      -webkit-transform: translateX(107%);\n              transform: translateX(107%);\n      -webkit-transform: translateX(calc(100% + 20px));\n              transform: translateX(calc(100% + 20px)); }\n  .mdc-persistent-drawer--animating .mdc-persistent-drawer__drawer {\n    -webkit-transition: -webkit-transform 0.13s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: -webkit-transform 0.13s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.13s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.13s 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0.13s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-persistent-drawer--animating.mdc-persistent-drawer--open .mdc-persistent-drawer__drawer {\n    -webkit-transition: -webkit-transform 0.33s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: -webkit-transform 0.33s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.33s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.33s 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0.33s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-persistent-drawer--open {\n    width: 240px;\n    pointer-events: auto; }\n    .mdc-persistent-drawer--open .mdc-persistent-drawer__drawer {\n      -webkit-transform: none;\n              transform: none; }\n    [dir=\"rtl\"] .mdc-persistent-drawer--open .mdc-persistent-drawer__drawer, .mdc-persistent-drawer--open[dir=\"rtl\"] .mdc-persistent-drawer__drawer {\n      -webkit-transform: none;\n              transform: none; }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n:root {\n  --mdc-permanent-drawer-dark-theme-bg-color: #212121; }\n\n.mdc-permanent-drawer {\n  /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */\n  /* stylelint-disable selector-no-qualifying-type */\n  /* stylelint-enable selector-no-qualifying-type */\n  /* TODO(sgomes): Revisit when we have interactive lists. */\n  background: #fff;\n  background: var(--mdc-theme-background, #fff);\n  border-left: 0;\n  border-right: 1px solid #e4e4e4;\n  left: 0;\n  right: initial;\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  width: 240px;\n  height: 100%;\n  box-sizing: border-box;\n  overflow: hidden; }\n  .mdc-permanent-drawer__toolbar-spacer {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -ms-flex-negative: 0;\n        flex-shrink: 0;\n    -webkit-box-align: flex-center;\n        -ms-flex-align: flex-center;\n            align-items: flex-center;\n    height: 56px;\n    padding: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    box-sizing: border-box;\n    /* TODO(sgomes): replace with global breakpoints when we have them */ }\n    .mdc-permanent-drawer__toolbar-spacer--theme-dark .mdc-permanent-drawer__toolbar-spacer,\n    .mdc-theme--dark .mdc-permanent-drawer__toolbar-spacer {\n      border-bottom: 1px solid rgba(255, 255, 255, 0.12); }\n    @media (min-width: 600px) {\n      .mdc-permanent-drawer__toolbar-spacer {\n        height: 64px; } }\n  .mdc-permanent-drawer__header {\n    position: relative; }\n  .mdc-permanent-drawer__header::before {\n    display: block;\n    padding-top: 56.25%;\n    content: \"\"; }\n  .mdc-permanent-drawer__header-content {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n    padding: 16px;\n    box-sizing: border-box; }\n  .mdc-permanent-drawer .mdc-list-group,\n  .mdc-permanent-drawer .mdc-list {\n    padding-right: 0;\n    padding-left: 0; }\n  .mdc-permanent-drawer .mdc-list-item {\n    position: relative;\n    padding: 0 16px;\n    outline: none;\n    color: inherit;\n    text-decoration: none;\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    line-height: 1.5rem; }\n  .mdc-permanent-drawer .mdc-list-item__start-detail {\n    color: rgba(0, 0, 0, 0.54); }\n    .mdc-permanent-drawer .mdc-list-item__start-detail--theme-dark .mdc-permanent-drawer .mdc-list-item__start-detail,\n    .mdc-theme--dark .mdc-permanent-drawer .mdc-list-item__start-detail {\n      color: rgba(255, 255, 255, 0.54); }\n  .mdc-permanent-drawer--selected.mdc-list-item,\n  .mdc-permanent-drawer--selected.mdc-list-item .mdc-list-item__start-detail {\n    color: #3f51b5;\n    color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-permanent-drawer .mdc-list-item::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    -webkit-transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    border-radius: inherit;\n    background: currentColor;\n    content: \"\";\n    opacity: 0; }\n  .mdc-permanent-drawer .mdc-list-item:focus::before {\n    -webkit-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .12; }\n  .mdc-permanent-drawer .mdc-list-item:active::before {\n    /*\n      Slightly darker value for visual distinction.\n      This allows a full base that has distinct modes.\n      Progressive enhancement with ripples will provide complete button spec alignment.\n    */\n    -webkit-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .18; }\n  .mdc-permanent-drawer .mdc-list-item:active:focus::before {\n    -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  [dir=\"rtl\"] .mdc-permanent-drawer, .mdc-permanent-drawer[dir=\"rtl\"] {\n    border-left: 1px solid #e4e4e4;\n    border-right: 0; }\n  [dir=\"rtl\"] .mdc-permanent-drawer, .mdc-permanent-drawer[dir=\"rtl\"] {\n    left: initial;\n    right: 0; }\n  .mdc-permanent-drawer--theme-dark,\n  .mdc-theme--dark .mdc-permanent-drawer {\n    background-color: #212121;\n    background-color: var(--mdc-permanent-drawer-dark-theme-bg-color, #212121);\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white);\n    border-left: 0;\n    border-right: 1px solid rgba(255, 255, 255, 0.12); }\n    [dir=\"rtl\"] .mdc-permanent-drawer--theme-dark, .mdc-permanent-drawer--theme-dark[dir=\"rtl\"], [dir=\"rtl\"]\n    .mdc-theme--dark .mdc-permanent-drawer,\n    .mdc-theme--dark .mdc-permanent-drawer[dir=\"rtl\"] {\n      border-left: 1px solid rgba(255, 255, 255, 0.12);\n      border-right: 0; }\n  .mdc-permanent-drawer--floating {\n    background: none;\n    border-left: 0;\n    border-right: none; }\n    [dir=\"rtl\"] .mdc-permanent-drawer--floating, .mdc-permanent-drawer--floating[dir=\"rtl\"] {\n      border-left: none;\n      border-right: 0; }\n    .mdc-permanent-drawer--floating--theme-dark,\n    .mdc-theme--dark .mdc-permanent-drawer--floating {\n      background: none;\n      border-left: 0;\n      border-right: none; }\n      [dir=\"rtl\"] .mdc-permanent-drawer--floating--theme-dark, .mdc-permanent-drawer--floating--theme-dark[dir=\"rtl\"], [dir=\"rtl\"]\n      .mdc-theme--dark .mdc-permanent-drawer--floating,\n      .mdc-theme--dark .mdc-permanent-drawer--floating[dir=\"rtl\"] {\n        border-left: none;\n        border-right: 0; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n.mdc-temporary-drawer {\n  /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */\n  /* stylelint-disable selector-no-qualifying-type */\n  /* stylelint-enable selector-no-qualifying-type */\n  /* TODO(sgomes): Revisit when we have interactive lists. */\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  pointer-events: none;\n  box-sizing: border-box;\n  contain: strict;\n  z-index: 3;\n  /* Shaded background */ }\n  .mdc-temporary-drawer__toolbar-spacer {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    -webkit-box-orient: horizontal;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: row;\n            flex-direction: row;\n    -ms-flex-negative: 0;\n        flex-shrink: 0;\n    -webkit-box-align: flex-center;\n        -ms-flex-align: flex-center;\n            align-items: flex-center;\n    height: 56px;\n    padding: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    box-sizing: border-box;\n    /* TODO(sgomes): replace with global breakpoints when we have them */ }\n    .mdc-temporary-drawer__toolbar-spacer--theme-dark .mdc-temporary-drawer__toolbar-spacer,\n    .mdc-theme--dark .mdc-temporary-drawer__toolbar-spacer {\n      border-bottom: 1px solid rgba(255, 255, 255, 0.12); }\n    @media (min-width: 600px) {\n      .mdc-temporary-drawer__toolbar-spacer {\n        height: 64px; } }\n  .mdc-temporary-drawer__header {\n    position: relative; }\n  .mdc-temporary-drawer__header::before {\n    display: block;\n    padding-top: 56.25%;\n    content: \"\"; }\n  .mdc-temporary-drawer__header-content {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    -webkit-box-align: end;\n        -ms-flex-align: end;\n            align-items: flex-end;\n    padding: 16px;\n    box-sizing: border-box; }\n  .mdc-temporary-drawer .mdc-list-group,\n  .mdc-temporary-drawer .mdc-list {\n    padding-right: 0;\n    padding-left: 0; }\n  .mdc-temporary-drawer .mdc-list-item {\n    position: relative;\n    padding: 0 16px;\n    outline: none;\n    color: inherit;\n    text-decoration: none;\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    line-height: 1.5rem; }\n  .mdc-temporary-drawer .mdc-list-item__start-detail {\n    color: rgba(0, 0, 0, 0.54); }\n    .mdc-temporary-drawer .mdc-list-item__start-detail--theme-dark .mdc-temporary-drawer .mdc-list-item__start-detail,\n    .mdc-theme--dark .mdc-temporary-drawer .mdc-list-item__start-detail {\n      color: rgba(255, 255, 255, 0.54); }\n  .mdc-temporary-drawer--selected.mdc-list-item,\n  .mdc-temporary-drawer--selected.mdc-list-item .mdc-list-item__start-detail {\n    color: #3f51b5;\n    color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-temporary-drawer .mdc-list-item::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    -webkit-transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    border-radius: inherit;\n    background: currentColor;\n    content: \"\";\n    opacity: 0; }\n  .mdc-temporary-drawer .mdc-list-item:focus::before {\n    -webkit-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .12; }\n  .mdc-temporary-drawer .mdc-list-item:active::before {\n    /*\n      Slightly darker value for visual distinction.\n      This allows a full base that has distinct modes.\n      Progressive enhancement with ripples will provide complete button spec alignment.\n    */\n    -webkit-transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .18; }\n  .mdc-temporary-drawer .mdc-list-item:active:focus::before {\n    -webkit-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  .mdc-temporary-drawer::before {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.6);\n    content: \"\";\n    opacity: 0;\n    opacity: var(--mdc-temporary-drawer-opacity, 0);\n    will-change: opacity;\n    box-sizing: border-box; }\n  .mdc-temporary-drawer__drawer {\n    background: #fff;\n    background: var(--mdc-theme-background, #fff);\n    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n    left: 0;\n    right: initial;\n    height: 100%;\n    -webkit-transform: translateX(-107%);\n            transform: translateX(-107%);\n    -webkit-transform: translateX(calc(-100% - 20px));\n            transform: translateX(calc(-100% - 20px));\n    will-change: transform;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: absolute;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n    width: calc(100% - 56px);\n    max-width: 280px;\n    box-sizing: border-box;\n    overflow: hidden;\n    -ms-touch-action: none;\n        touch-action: none;\n    /* TODO(sgomes): replace with global breakpoints when we have them */ }\n    [dir=\"rtl\"] .mdc-temporary-drawer__drawer, .mdc-temporary-drawer__drawer[dir=\"rtl\"] {\n      left: initial;\n      right: 0; }\n    .mdc-temporary-drawer--theme-dark .mdc-temporary-drawer__drawer,\n    .mdc-theme--dark .mdc-temporary-drawer__drawer {\n      background: #303030;\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n    [dir=\"rtl\"] .mdc-temporary-drawer__drawer .mdc-temporary-drawer__drawer,\n    .mdc-temporary-drawer__drawer[dir=\"rtl\"] .mdc-temporary-drawer__drawer {\n      -webkit-transform: translateX(107%);\n              transform: translateX(107%);\n      -webkit-transform: translateX(calc(100% + 20px));\n              transform: translateX(calc(100% + 20px)); }\n    @media (min-width: 600px) {\n      .mdc-temporary-drawer__drawer {\n        width: calc(100% - 64px);\n        max-width: 320px; } }\n  .mdc-temporary-drawer__content {\n    -webkit-box-flex: 1;\n        -ms-flex-positive: 1;\n            flex-grow: 1;\n    margin: 0;\n    overflow-x: hidden;\n    overflow-y: auto;\n    box-sizing: border-box;\n    -webkit-overflow-scrolling: touch;\n    -ms-touch-action: pan-y;\n        touch-action: pan-y; }\n  .mdc-temporary-drawer__footer {\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    -ms-flex-negative: 0;\n        flex-shrink: 0; }\n  .mdc-temporary-drawer--animating::before {\n    -webkit-transition: opacity 0.3s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 0.3s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-temporary-drawer--animating.mdc-temporary-drawer--open .mdc-temporary-drawer__drawer {\n    -webkit-transition: -webkit-transform 0.33s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: -webkit-transform 0.33s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.33s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.33s 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0.33s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-temporary-drawer--animating .mdc-temporary-drawer__drawer {\n    -webkit-transition: -webkit-transform 0.13s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: -webkit-transform 0.13s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.13s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.13s 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0.13s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-temporary-drawer--open {\n    pointer-events: auto; }\n    .mdc-temporary-drawer--open::before {\n      opacity: 1;\n      opacity: var(--mdc-temporary-drawer-opacity, 1); }\n    .mdc-temporary-drawer--open .mdc-temporary-drawer__drawer {\n      -webkit-transform: none;\n              transform: none; }\n    [dir=\"rtl\"] .mdc-temporary-drawer--open .mdc-temporary-drawer__drawer, .mdc-temporary-drawer--open[dir=\"rtl\"] .mdc-temporary-drawer__drawer {\n      -webkit-transform: none;\n              transform: none; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n.mdc-elevation--z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation-transition {\n  -webkit-transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  will-change: box-shadow; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n.mdc-fab {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  position: relative;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  width: 56px;\n  height: 56px;\n  padding: 0;\n  -webkit-transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  box-sizing: border-box;\n  fill: currentColor;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  overflow: hidden;\n  background-color: #ff4081;\n  background-color: var(--mdc-theme-accent, #ff4081);\n  color: white;\n  color: var(--mdc-theme-text-primary-on-accent, white);\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n  .mdc-fab:not(.mdc-ripple-upgraded):hover::before, .mdc-fab:not(.mdc-ripple-upgraded):focus::before, .mdc-fab:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 85ms;\n            transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-fab::before {\n    background-color: rgba(255, 255, 255, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-fab.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-fab.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-fab.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-fab.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-fab::after {\n    background-color: rgba(255, 255, 255, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-fab.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-fab:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-fab.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-fab.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-fab.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-fab:not(.mdc-ripple-upgraded) {\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0.18); }\n  .mdc-fab--mini {\n    width: 40px;\n    height: 40px; }\n  .mdc-fab--plain {\n    background-color: white;\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }\n    .mdc-fab--plain::before {\n      background-color: rgba(0, 0, 0, 0.06);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      -webkit-transition: opacity 250ms linear;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n    .mdc-fab--plain.mdc-ripple-upgraded::before {\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n              transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-fab--plain.mdc-ripple-upgraded--background-focused::before {\n      opacity: .99999; }\n    .mdc-fab--plain.mdc-ripple-upgraded--background-active-fill::before {\n      -webkit-transition-duration: 120ms;\n              transition-duration: 120ms;\n      opacity: 1; }\n    .mdc-fab--plain.mdc-ripple-upgraded--unbounded::before {\n      top: calc(50% - 50%);\n      top: var(--mdc-ripple-top, calc(50% - 50%));\n      left: calc(50% - 50%);\n      left: var(--mdc-ripple-left, calc(50% - 50%));\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n              transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-fab--plain::after {\n      background-color: rgba(0, 0, 0, 0.06);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      -webkit-transition: opacity 250ms linear;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n    .mdc-fab--plain.mdc-ripple-upgraded::after {\n      top: 0;\n      left: 0;\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform-origin: center center;\n              transform-origin: center center;\n      opacity: 0; }\n    .mdc-fab--plain:not(.mdc-ripple-upgraded--unbounded)::after {\n      -webkit-transform-origin: center center;\n              transform-origin: center center; }\n    .mdc-fab--plain.mdc-ripple-upgraded--unbounded::after {\n      top: 0;\n      top: var(--mdc-ripple-top, 0);\n      left: 0;\n      left: var(--mdc-ripple-left, 0);\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      -webkit-transform: scale(0);\n              transform: scale(0);\n      -webkit-transform-origin: center center;\n              transform-origin: center center; }\n    .mdc-fab--plain.mdc-ripple-upgraded--foreground-activation::after {\n      -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n              animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n    .mdc-fab--plain.mdc-ripple-upgraded--foreground-deactivation::after {\n      -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n              transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n      -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n              animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-fab:active, .mdc-fab:focus {\n    outline: none; }\n  .mdc-fab:active {\n    box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\n  .mdc-fab:hover {\n    cursor: pointer; }\n  .mdc-fab::-moz-focus-inner {\n    padding: 0;\n    border: 0; }\n  .mdc-fab > svg {\n    width: 100%; }\n  fieldset:disabled .mdc-fab, .mdc-fab:disabled {\n    background-color: rgba(0, 0, 0, 0.12);\n    color: rgba(0, 0, 0, 0.26);\n    cursor: default;\n    pointer-events: none; }\n\n.mdc-fab__icon {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  width: 100%; }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* stylelint-disable selector-no-type */\n.mdc-form-field {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.25rem;\n  color: rgba(0, 0, 0, 0.87);\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  vertical-align: middle; }\n  .mdc-form-field--theme-dark,\n  .mdc-theme--dark .mdc-form-field {\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white); }\n  .mdc-form-field > label {\n    -webkit-box-ordinal-group: 1;\n        -ms-flex-order: 0;\n            order: 0;\n    margin-right: auto;\n    padding-left: 4px; }\n  [dir=\"rtl\"] .mdc-form-field > label, .mdc-form-field[dir=\"rtl\"] > label {\n    margin-left: auto;\n    padding-right: 4px; }\n\n.mdc-form-field--align-end > label {\n  -webkit-box-ordinal-group: 0;\n      -ms-flex-order: -1;\n          order: -1;\n  margin-left: auto;\n  padding-right: 4px; }\n\n[dir=\"rtl\"] .mdc-form-field--align-end > label, .mdc-form-field--align-end[dir=\"rtl\"] > label {\n  margin-right: auto;\n  padding-left: 4px; }\n\n/* stylelint-enable selector-no-type */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-grid-list .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 1); }\n\n.mdc-grid-list .mdc-grid-tile {\n  margin: 2px 0;\n  padding: 0 2px; }\n  .mdc-grid-list .mdc-grid-tile__secondary {\n    left: 2px;\n    width: calc(100% - 4px); }\n\n.mdc-grid-list .mdc-grid-list__tiles {\n  margin: 2px auto; }\n\n.mdc-grid-list__tiles {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: row;\n          flex-direction: row;\n  -ms-flex-wrap: wrap;\n      flex-wrap: wrap;\n  margin: 0;\n  padding: 0; }\n\n.mdc-grid-list--tile-gutter-1 .mdc-grid-tile {\n  margin: 0.5px 0;\n  padding: 0 0.5px; }\n  .mdc-grid-list--tile-gutter-1 .mdc-grid-tile__secondary {\n    left: 0.5px;\n    width: calc(100% - 1px); }\n\n.mdc-grid-list--tile-gutter-1 .mdc-grid-list__tiles {\n  margin: 0.5px auto; }\n\n.mdc-grid-list--tile-aspect-16x9 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 1.77778); }\n\n.mdc-grid-list--tile-aspect-3x2 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 1.5); }\n\n.mdc-grid-list--tile-aspect-2x3 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 0.66667); }\n\n.mdc-grid-list--tile-aspect-4x3 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 1.33333); }\n\n.mdc-grid-list--tile-aspect-3x4 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 0.75); }\n\n.mdc-grid-list--twoline-caption .mdc-grid-tile__secondary {\n  height: 68px; }\n\n.mdc-grid-list--header-caption .mdc-grid-tile__secondary {\n  top: 0;\n  bottom: auto; }\n\n.mdc-grid-list--with-icon-align-start .mdc-grid-tile__secondary {\n  padding-left: 56px;\n  padding-right: 8px; }\n  [dir=\"rtl\"] .mdc-grid-list .mdc-grid-list--with-icon-align-start .mdc-grid-tile__secondary,\n  .mdc-grid-list[dir=\"rtl\"] .mdc-grid-list--with-icon-align-start .mdc-grid-tile__secondary {\n    padding-left: 8px;\n    padding-right: 56px; }\n\n.mdc-grid-list--with-icon-align-start .mdc-grid-tile__icon {\n  left: 16px;\n  right: initial;\n  font-size: 24px; }\n  [dir=\"rtl\"] .mdc-grid-list .mdc-grid-list--with-icon-align-start .mdc-grid-tile__icon,\n  .mdc-grid-list[dir=\"rtl\"] .mdc-grid-list--with-icon-align-start .mdc-grid-tile__icon {\n    left: initial;\n    right: 16px; }\n\n.mdc-grid-list--with-icon-align-end .mdc-grid-tile__secondary {\n  padding-left: 16px;\n  padding-right: 56px; }\n  [dir=\"rtl\"] .mdc-grid-list .mdc-grid-list--with-icon-align-end .mdc-grid-tile__secondary,\n  .mdc-grid-list[dir=\"rtl\"] .mdc-grid-list--with-icon-align-end .mdc-grid-tile__secondary {\n    padding-left: 56px;\n    padding-right: 16px; }\n\n.mdc-grid-list--with-icon-align-end .mdc-grid-tile__icon {\n  left: initial;\n  right: 16px;\n  font-size: 24px; }\n  [dir=\"rtl\"] .mdc-grid-list .mdc-grid-list--with-icon-align-end .mdc-grid-tile__icon,\n  .mdc-grid-list[dir=\"rtl\"] .mdc-grid-list--with-icon-align-end .mdc-grid-tile__icon {\n    left: 16px;\n    right: initial; }\n\n.mdc-grid-tile {\n  display: block;\n  position: relative;\n  width: var(--mdc-grid-list-tile-width, 200px); }\n  .mdc-grid-tile__primary {\n    position: relative;\n    height: 0;\n    background-color: #fff;\n    background-color: var(--mdc-theme-background, #fff);\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n    .mdc-grid-tile__primary-content {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: cover; }\n  .mdc-grid-tile__secondary {\n    position: absolute;\n    box-sizing: border-box;\n    bottom: 0;\n    height: 48px;\n    padding: 16px;\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5);\n    color: white;\n    color: var(--mdc-theme-text-primary-on-primary, white); }\n  .mdc-grid-tile__title {\n    display: block;\n    margin: 0;\n    padding: 0;\n    font-size: 1rem;\n    font-weight: 500;\n    line-height: 1rem;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden; }\n  .mdc-grid-tile__support-text {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 400;\n    letter-spacing: 0.04em;\n    line-height: 1.25rem;\n    display: block;\n    margin: 0;\n    margin-top: 4px;\n    padding: 0; }\n  .mdc-grid-tile__icon {\n    position: absolute;\n    top: calc(50% - 24px / 2);\n    font-size: 0; }\n\n/** postcss-bem-linter: define icon-toggle */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n.mdc-icon-toggle {\n  color: rgba(0, 0, 0, 0.54);\n  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  will-change: initial;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: relative;\n  box-sizing: border-box;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n  outline: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none; }\n  .mdc-icon-toggle:not(.mdc-ripple-upgraded):hover::before, .mdc-icon-toggle:not(.mdc-ripple-upgraded):focus::before, .mdc-icon-toggle:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 85ms;\n            transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-icon-toggle::before {\n    background-color: rgba(0, 0, 0, 0.062);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-icon-toggle.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle::after {\n    background-color: rgba(0, 0, 0, 0.062);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-icon-toggle.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-icon-toggle:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle::before,\n  .mdc-theme--dark .mdc-icon-toggle::before {\n    background-color: rgba(255, 255, 255, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded::before,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--unbounded::before,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle::after,\n  .mdc-theme--dark .mdc-icon-toggle::after {\n    background-color: rgba(255, 255, 255, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded::after,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle:not(.mdc-ripple-upgraded--unbounded)::after,\n  .mdc-theme--dark .mdc-icon-toggle:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-icon-toggle::after {\n    position: absolute;\n    border-radius: 50%;\n    content: \"\";\n    opacity: 0;\n    pointer-events: none; }\n  .mdc-icon-toggle--theme-dark,\n  .mdc-theme--dark .mdc-icon-toggle {\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white); }\n\n.mdc-icon-toggle--primary {\n  color: #3f51b5;\n  color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-icon-toggle--primary::before {\n    background-color: rgba(63, 81, 181, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-icon-toggle--primary::before {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle--primary::after {\n    background-color: rgba(63, 81, 181, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-icon-toggle--primary::after {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-icon-toggle--primary:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n\n.mdc-icon-toggle--accent {\n  color: #ff4081;\n  color: var(--mdc-theme-accent, #ff4081); }\n  .mdc-icon-toggle--accent::before {\n    background-color: rgba(255, 64, 129, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-icon-toggle--accent::before {\n        background-color: color(var(--mdc-theme-accent, #ff4081) a(14%)); } }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle--accent::after {\n    background-color: rgba(255, 64, 129, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-icon-toggle--accent::after {\n        background-color: color(var(--mdc-theme-accent, #ff4081) a(14%)); } }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-icon-toggle--accent:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n\n.mdc-icon-toggle--disabled {\n  color: rgba(0, 0, 0, 0.38);\n  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));\n  pointer-events: none; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle--disabled,\n  .mdc-theme--dark .mdc-icon-toggle--disabled {\n    color: rgba(255, 255, 255, 0.5);\n    color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }\n\n/** postcss-bem-linter: end */\n.mdc-layout-grid {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: horizontal;\n  -webkit-box-direction: normal;\n      -ms-flex-flow: row wrap;\n          flex-flow: row wrap;\n  -webkit-box-align: stretch;\n      -ms-flex-align: stretch;\n          align-items: stretch;\n  margin: 0 auto;\n  box-sizing: border-box;\n  padding: 8px;\n  padding: calc(var(--mdc-layout-grid-margin, 16px) - var(--mdc-layout-grid-gutter, 16px) / 2); }\n  @supports (display: grid) {\n    .mdc-layout-grid {\n      display: grid;\n      grid-gap: 16px;\n      grid-gap: var(--mdc-layout-grid-gutter, 16px);\n      padding: 16px;\n      padding: var(--mdc-layout-grid-margin, 16px); }\n      @media (min-width: 840px) {\n        .mdc-layout-grid {\n          grid-template-columns: repeat(12, minmax(0, 1fr)); } }\n      @media (min-width: 480px) and (max-width: 839px) {\n        .mdc-layout-grid {\n          grid-template-columns: repeat(8, minmax(0, 1fr)); } }\n      @media (max-width: 479px) {\n        .mdc-layout-grid {\n          grid-template-columns: repeat(4, minmax(0, 1fr)); } } }\n\n.mdc-layout-grid__cell {\n  margin: 8px;\n  margin: calc(var(--mdc-layout-grid-gutter, 16px) / 2);\n  box-sizing: border-box; }\n  @supports (display: grid) {\n    .mdc-layout-grid__cell {\n      margin: 0; } }\n  @media (min-width: 840px) {\n    .mdc-layout-grid__cell {\n      width: calc(33.33333% - 16px);\n      width: calc(33.33333% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell {\n          width: auto;\n          grid-column-end: span 4; } } }\n  @media (min-width: 480px) and (max-width: 839px) {\n    .mdc-layout-grid__cell {\n      width: calc(50% - 16px);\n      width: calc(50% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell {\n          width: auto;\n          grid-column-end: span 4; } } }\n  @media (max-width: 479px) {\n    .mdc-layout-grid__cell {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell {\n          width: auto;\n          grid-column-end: span 4; } } }\n  @media (min-width: 840px) {\n    .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-desktop.mdc-layout-grid__cell--span-1-desktop {\n      width: calc(8.33333% - 16px);\n      width: calc(8.33333% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-desktop.mdc-layout-grid__cell--span-1-desktop {\n          width: auto;\n          grid-column-end: span 1; } }\n    .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-desktop.mdc-layout-grid__cell--span-2-desktop {\n      width: calc(16.66667% - 16px);\n      width: calc(16.66667% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-desktop.mdc-layout-grid__cell--span-2-desktop {\n          width: auto;\n          grid-column-end: span 2; } }\n    .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-desktop.mdc-layout-grid__cell--span-3-desktop {\n      width: calc(25% - 16px);\n      width: calc(25% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-desktop.mdc-layout-grid__cell--span-3-desktop {\n          width: auto;\n          grid-column-end: span 3; } }\n    .mdc-layout-grid__cell--span-4, .mdc-layout-grid__cell--span-4-desktop.mdc-layout-grid__cell--span-4-desktop {\n      width: calc(33.33333% - 16px);\n      width: calc(33.33333% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-4, .mdc-layout-grid__cell--span-4-desktop.mdc-layout-grid__cell--span-4-desktop {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-desktop.mdc-layout-grid__cell--span-5-desktop {\n      width: calc(41.66667% - 16px);\n      width: calc(41.66667% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-desktop.mdc-layout-grid__cell--span-5-desktop {\n          width: auto;\n          grid-column-end: span 5; } }\n    .mdc-layout-grid__cell--span-6, .mdc-layout-grid__cell--span-6-desktop.mdc-layout-grid__cell--span-6-desktop {\n      width: calc(50% - 16px);\n      width: calc(50% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-6, .mdc-layout-grid__cell--span-6-desktop.mdc-layout-grid__cell--span-6-desktop {\n          width: auto;\n          grid-column-end: span 6; } }\n    .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-desktop.mdc-layout-grid__cell--span-7-desktop {\n      width: calc(58.33333% - 16px);\n      width: calc(58.33333% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-desktop.mdc-layout-grid__cell--span-7-desktop {\n          width: auto;\n          grid-column-end: span 7; } }\n    .mdc-layout-grid__cell--span-8, .mdc-layout-grid__cell--span-8-desktop.mdc-layout-grid__cell--span-8-desktop {\n      width: calc(66.66667% - 16px);\n      width: calc(66.66667% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-8, .mdc-layout-grid__cell--span-8-desktop.mdc-layout-grid__cell--span-8-desktop {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-desktop.mdc-layout-grid__cell--span-9-desktop {\n      width: calc(75% - 16px);\n      width: calc(75% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-desktop.mdc-layout-grid__cell--span-9-desktop {\n          width: auto;\n          grid-column-end: span 9; } }\n    .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-desktop.mdc-layout-grid__cell--span-10-desktop {\n      width: calc(83.33333% - 16px);\n      width: calc(83.33333% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-desktop.mdc-layout-grid__cell--span-10-desktop {\n          width: auto;\n          grid-column-end: span 10; } }\n    .mdc-layout-grid__cell--span-11, .mdc-layout-grid__cell--span-11-desktop.mdc-layout-grid__cell--span-11-desktop {\n      width: calc(91.66667% - 16px);\n      width: calc(91.66667% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-11, .mdc-layout-grid__cell--span-11-desktop.mdc-layout-grid__cell--span-11-desktop {\n          width: auto;\n          grid-column-end: span 11; } }\n    .mdc-layout-grid__cell--span-12, .mdc-layout-grid__cell--span-12-desktop.mdc-layout-grid__cell--span-12-desktop {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-12, .mdc-layout-grid__cell--span-12-desktop.mdc-layout-grid__cell--span-12-desktop {\n          width: auto;\n          grid-column-end: span 12; } } }\n  @media (min-width: 480px) and (max-width: 839px) {\n    .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-tablet.mdc-layout-grid__cell--span-1-tablet {\n      width: calc(12.5% - 16px);\n      width: calc(12.5% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-tablet.mdc-layout-grid__cell--span-1-tablet {\n          width: auto;\n          grid-column-end: span 1; } }\n    .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-tablet.mdc-layout-grid__cell--span-2-tablet {\n      width: calc(25% - 16px);\n      width: calc(25% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-tablet.mdc-layout-grid__cell--span-2-tablet {\n          width: auto;\n          grid-column-end: span 2; } }\n    .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-tablet.mdc-layout-grid__cell--span-3-tablet {\n      width: calc(37.5% - 16px);\n      width: calc(37.5% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-tablet.mdc-layout-grid__cell--span-3-tablet {\n          width: auto;\n          grid-column-end: span 3; } }\n    .mdc-layout-grid__cell--span-4, .mdc-layout-grid__cell--span-4-tablet.mdc-layout-grid__cell--span-4-tablet {\n      width: calc(50% - 16px);\n      width: calc(50% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-4, .mdc-layout-grid__cell--span-4-tablet.mdc-layout-grid__cell--span-4-tablet {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-tablet.mdc-layout-grid__cell--span-5-tablet {\n      width: calc(62.5% - 16px);\n      width: calc(62.5% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-tablet.mdc-layout-grid__cell--span-5-tablet {\n          width: auto;\n          grid-column-end: span 5; } }\n    .mdc-layout-grid__cell--span-6, .mdc-layout-grid__cell--span-6-tablet.mdc-layout-grid__cell--span-6-tablet {\n      width: calc(75% - 16px);\n      width: calc(75% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-6, .mdc-layout-grid__cell--span-6-tablet.mdc-layout-grid__cell--span-6-tablet {\n          width: auto;\n          grid-column-end: span 6; } }\n    .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-tablet.mdc-layout-grid__cell--span-7-tablet {\n      width: calc(87.5% - 16px);\n      width: calc(87.5% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-tablet.mdc-layout-grid__cell--span-7-tablet {\n          width: auto;\n          grid-column-end: span 7; } }\n    .mdc-layout-grid__cell--span-8, .mdc-layout-grid__cell--span-8-tablet.mdc-layout-grid__cell--span-8-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-8, .mdc-layout-grid__cell--span-8-tablet.mdc-layout-grid__cell--span-8-tablet {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-tablet.mdc-layout-grid__cell--span-9-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-tablet.mdc-layout-grid__cell--span-9-tablet {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-tablet.mdc-layout-grid__cell--span-10-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-tablet.mdc-layout-grid__cell--span-10-tablet {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-11, .mdc-layout-grid__cell--span-11-tablet.mdc-layout-grid__cell--span-11-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-11, .mdc-layout-grid__cell--span-11-tablet.mdc-layout-grid__cell--span-11-tablet {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-12, .mdc-layout-grid__cell--span-12-tablet.mdc-layout-grid__cell--span-12-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-12, .mdc-layout-grid__cell--span-12-tablet.mdc-layout-grid__cell--span-12-tablet {\n          width: auto;\n          grid-column-end: span 8; } } }\n  @media (max-width: 479px) {\n    .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-phone.mdc-layout-grid__cell--span-1-phone {\n      width: calc(25% - 16px);\n      width: calc(25% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-phone.mdc-layout-grid__cell--span-1-phone {\n          width: auto;\n          grid-column-end: span 1; } }\n    .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-phone.mdc-layout-grid__cell--span-2-phone {\n      width: calc(50% - 16px);\n      width: calc(50% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-phone.mdc-layout-grid__cell--span-2-phone {\n          width: auto;\n          grid-column-end: span 2; } }\n    .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-phone.mdc-layout-grid__cell--span-3-phone {\n      width: calc(75% - 16px);\n      width: calc(75% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-phone.mdc-layout-grid__cell--span-3-phone {\n          width: auto;\n          grid-column-end: span 3; } }\n    .mdc-layout-grid__cell--span-4, .mdc-layout-grid__cell--span-4-phone.mdc-layout-grid__cell--span-4-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-4, .mdc-layout-grid__cell--span-4-phone.mdc-layout-grid__cell--span-4-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-phone.mdc-layout-grid__cell--span-5-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-phone.mdc-layout-grid__cell--span-5-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-6, .mdc-layout-grid__cell--span-6-phone.mdc-layout-grid__cell--span-6-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-6, .mdc-layout-grid__cell--span-6-phone.mdc-layout-grid__cell--span-6-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-phone.mdc-layout-grid__cell--span-7-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-phone.mdc-layout-grid__cell--span-7-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-8, .mdc-layout-grid__cell--span-8-phone.mdc-layout-grid__cell--span-8-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-8, .mdc-layout-grid__cell--span-8-phone.mdc-layout-grid__cell--span-8-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-phone.mdc-layout-grid__cell--span-9-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-phone.mdc-layout-grid__cell--span-9-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-phone.mdc-layout-grid__cell--span-10-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-phone.mdc-layout-grid__cell--span-10-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-11, .mdc-layout-grid__cell--span-11-phone.mdc-layout-grid__cell--span-11-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-11, .mdc-layout-grid__cell--span-11-phone.mdc-layout-grid__cell--span-11-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-12, .mdc-layout-grid__cell--span-12-phone.mdc-layout-grid__cell--span-12-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-12, .mdc-layout-grid__cell--span-12-phone.mdc-layout-grid__cell--span-12-phone {\n          width: auto;\n          grid-column-end: span 4; } } }\n  .mdc-layout-grid__cell--order-1 {\n    -webkit-box-ordinal-group: 2;\n        -ms-flex-order: 1;\n            order: 1; }\n  .mdc-layout-grid__cell--order-2 {\n    -webkit-box-ordinal-group: 3;\n        -ms-flex-order: 2;\n            order: 2; }\n  .mdc-layout-grid__cell--order-3 {\n    -webkit-box-ordinal-group: 4;\n        -ms-flex-order: 3;\n            order: 3; }\n  .mdc-layout-grid__cell--order-4 {\n    -webkit-box-ordinal-group: 5;\n        -ms-flex-order: 4;\n            order: 4; }\n  .mdc-layout-grid__cell--order-5 {\n    -webkit-box-ordinal-group: 6;\n        -ms-flex-order: 5;\n            order: 5; }\n  .mdc-layout-grid__cell--order-6 {\n    -webkit-box-ordinal-group: 7;\n        -ms-flex-order: 6;\n            order: 6; }\n  .mdc-layout-grid__cell--order-7 {\n    -webkit-box-ordinal-group: 8;\n        -ms-flex-order: 7;\n            order: 7; }\n  .mdc-layout-grid__cell--order-8 {\n    -webkit-box-ordinal-group: 9;\n        -ms-flex-order: 8;\n            order: 8; }\n  .mdc-layout-grid__cell--order-9 {\n    -webkit-box-ordinal-group: 10;\n        -ms-flex-order: 9;\n            order: 9; }\n  .mdc-layout-grid__cell--order-10 {\n    -webkit-box-ordinal-group: 11;\n        -ms-flex-order: 10;\n            order: 10; }\n  .mdc-layout-grid__cell--order-11 {\n    -webkit-box-ordinal-group: 12;\n        -ms-flex-order: 11;\n            order: 11; }\n  .mdc-layout-grid__cell--order-12 {\n    -webkit-box-ordinal-group: 13;\n        -ms-flex-order: 12;\n            order: 12; }\n  .mdc-layout-grid__cell--align-top {\n    -ms-flex-item-align: start;\n        align-self: flex-start; }\n    @supports (display: grid) {\n      .mdc-layout-grid__cell--align-top {\n        -ms-flex-item-align: start;\n            align-self: start; } }\n  .mdc-layout-grid__cell--align-middle {\n    -ms-flex-item-align: center;\n        align-self: center; }\n  .mdc-layout-grid__cell--align-bottom {\n    -ms-flex-item-align: end;\n        align-self: flex-end; }\n    @supports (display: grid) {\n      .mdc-layout-grid__cell--align-bottom {\n        -ms-flex-item-align: end;\n            align-self: end; } }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-list {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.75rem;\n  color: rgba(0, 0, 0, 0.87);\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n  margin: 0;\n  padding: 8px 16px 0;\n  line-height: 1.5rem;\n  list-style-type: none; }\n  .mdc-list--theme-dark,\n  .mdc-theme--dark .mdc-list {\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white); }\n\n.mdc-list--dense {\n  padding-top: 4px;\n  font-size: .812rem; }\n\n.mdc-list-item {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  height: 48px; }\n  .mdc-list-item__start-detail {\n    width: 24px;\n    height: 24px;\n    margin-left: 0;\n    margin-right: 32px; }\n    [dir=\"rtl\"] .mdc-list-item .mdc-list-item__start-detail,\n    .mdc-list-item[dir=\"rtl\"] .mdc-list-item__start-detail {\n      margin-left: 32px;\n      margin-right: 0; }\n  .mdc-list-item__end-detail {\n    width: 24px;\n    height: 24px;\n    margin-left: auto;\n    margin-right: 16px; }\n    [dir=\"rtl\"] .mdc-list-item .mdc-list-item__end-detail,\n    .mdc-list-item[dir=\"rtl\"] .mdc-list-item__end-detail {\n      margin-left: 16px;\n      margin-right: auto; }\n  .mdc-list-item__text {\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column; }\n    .mdc-list-item__text__secondary {\n      font-family: Roboto, sans-serif;\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-font-smoothing: antialiased;\n      font-size: 0.875rem;\n      font-weight: 400;\n      letter-spacing: 0.04em;\n      line-height: 1.25rem;\n      color: rgba(0, 0, 0, 0.54);\n      color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)); }\n      .mdc-list-item__text__secondary--theme-dark,\n      .mdc-theme--dark .mdc-list-item__text__secondary {\n        color: rgba(255, 255, 255, 0.7);\n        color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n      .mdc-list--dense .mdc-list-item__text__secondary {\n        font-size: inherit; }\n  .mdc-list--dense .mdc-list-item {\n    height: 40px; }\n    .mdc-list--dense .mdc-list-item__start-detail {\n      width: 20px;\n      height: 20px;\n      margin-left: 0;\n      margin-right: 36px; }\n      [dir=\"rtl\"] .mdc-list-item .mdc-list--dense .mdc-list-item__start-detail,\n      .mdc-list-item[dir=\"rtl\"] .mdc-list--dense .mdc-list-item__start-detail {\n        margin-left: 36px;\n        margin-right: 0; }\n    .mdc-list--dense .mdc-list-item__end-detail {\n      width: 20px;\n      height: 20px; }\n  .mdc-list--avatar-list .mdc-list-item {\n    height: 56px; }\n    .mdc-list--avatar-list .mdc-list-item__start-detail {\n      width: 40px;\n      height: 40px;\n      margin-left: 0;\n      margin-right: 16px;\n      border-radius: 50%; }\n      [dir=\"rtl\"] .mdc-list-item .mdc-list--avatar-list .mdc-list-item__start-detail,\n      .mdc-list-item[dir=\"rtl\"] .mdc-list--avatar-list .mdc-list-item__start-detail {\n        margin-left: 16px;\n        margin-right: 0; }\n  .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item {\n    height: 48px; }\n    .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail {\n      width: 36px;\n      height: 36px;\n      margin-left: 0;\n      margin-right: 20px; }\n      [dir=\"rtl\"] .mdc-list-item .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail,\n      .mdc-list-item[dir=\"rtl\"] .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail {\n        margin-left: 20px;\n        margin-right: 0; }\n  .mdc-list--two-line .mdc-list-item {\n    height: 72px; }\n  .mdc-list--two-line.mdc-list--dense .mdc-list-item {\n    height: 60px; }\n\na.mdc-list-item {\n  color: inherit;\n  text-decoration: none; }\n\n.mdc-list-item.mdc-ripple-upgraded {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  position: relative;\n  left: -16px;\n  width: 100%;\n  padding: 0 16px;\n  overflow: hidden; }\n  .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):hover::before, .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):focus::before, .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 85ms;\n            transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-list-item.mdc-ripple-upgraded::before {\n    background-color: rgba(0, 0, 0, 0.06);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-list-item.mdc-ripple-upgraded::after {\n    background-color: rgba(0, 0, 0, 0.06);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-list-item.mdc-ripple-upgraded:focus {\n    outline: none; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded::before,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded::before {\n    background-color: rgba(255, 255, 255, 0.12);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded::after,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded::after {\n    background-color: rgba(255, 255, 255, 0.12);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n\n.mdc-list-divider {\n  height: 0;\n  margin: 0;\n  border: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\n  .mdc-list--theme-dark .mdc-list-divider,\n  .mdc-theme--dark .mdc-list-divider {\n    border-bottom-color: rgba(255, 255, 255, 0.2); }\n\n.mdc-list-divider--inset {\n  margin-left: 56px;\n  margin-right: 0;\n  width: calc(100% - 56px); }\n  [dir=\"rtl\"] .mdc-list-group .mdc-list-divider--inset,\n  .mdc-list-group[dir=\"rtl\"] .mdc-list-divider--inset {\n    margin-left: 0;\n    margin-right: 56px; }\n\n.mdc-list-group {\n  padding: 0 16px; }\n  .mdc-list-group__subheader {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    line-height: 1.5rem;\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n    margin: 0.75rem 0; }\n    .mdc-list-group__subheader--theme-dark,\n    .mdc-theme--dark .mdc-list-group__subheader {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n  .mdc-list-group .mdc-list {\n    padding: 0; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* postcss-bem-linter: define simple-menu */\n.mdc-simple-menu {\n  display: none;\n  position: absolute;\n  max-width: calc(100vw - 32px);\n  max-height: calc(100vh - 32px);\n  margin: 0;\n  padding: 0;\n  -webkit-transform: scale(0);\n          transform: scale(0);\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n  border-radius: 2px;\n  background-color: white;\n  white-space: nowrap;\n  opacity: 0;\n  overflow: hidden;\n  box-sizing: border-box;\n  will-change: transform, opacity;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  /* stylelint-disable plugin/selector-bem-pattern */\n  /* stylelint-enable plugin/selector-bem-pattern */\n  /* stylelint-disable plugin/selector-bem-pattern */\n  /* stylelint-disable selector-no-qualifying-type */\n  /* stylelint-enable selector-no-qualifying-type */\n  /* TODO(sgomes): Revisit when we have interactive lists. */\n  /* stylelint-enable plugin/selector-bem-pattern */ }\n  .mdc-simple-menu--theme-dark,\n  .mdc-theme--dark .mdc-simple-menu {\n    background-color: #424242; }\n  .mdc-simple-menu:focus {\n    outline: none; }\n  .mdc-simple-menu--open {\n    display: inline-block;\n    -webkit-transform: scale(1);\n            transform: scale(1);\n    opacity: 1; }\n  .mdc-simple-menu--animating {\n    display: inline-block;\n    -webkit-transition: opacity 0.2s cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 0.2s cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-simple-menu__items {\n    display: inline-block;\n    overflow-x: hidden;\n    overflow-y: auto;\n    box-sizing: border-box;\n    will-change: transform;\n    /* stylelint-disable plugin/selector-bem-pattern, selector-no-universal */\n    /* stylelint-enable plugin/selector-bem-pattern, selector-no-universal */ }\n    .mdc-simple-menu__items > * {\n      opacity: 0; }\n    .mdc-simple-menu__items > .mdc-list-item {\n      cursor: pointer; }\n    .mdc-simple-menu--animating .mdc-simple-menu__items {\n      overflow-y: hidden; }\n      .mdc-simple-menu--animating .mdc-simple-menu__items > * {\n        -webkit-transition-duration: 0.3s;\n                transition-duration: 0.3s;\n        -webkit-transition-property: opacity;\n        transition-property: opacity;\n        -webkit-transition-timing-function: cubic-bezier(0, 0, 0.2, 1);\n                transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n    .mdc-simple-menu--open .mdc-simple-menu__items > * {\n      opacity: 1;\n      will-change: opacity; }\n  [dir=\"rtl\"] .mdc-simple-menu {\n    -webkit-transform-origin: top right;\n            transform-origin: top right; }\n  .mdc-simple-menu--open-from-top-left {\n    -webkit-transform-origin: top left !important;\n            transform-origin: top left !important; }\n  .mdc-simple-menu--open-from-top-right {\n    -webkit-transform-origin: top right !important;\n            transform-origin: top right !important; }\n  .mdc-simple-menu--open-from-bottom-left {\n    -webkit-transform-origin: bottom left !important;\n            transform-origin: bottom left !important; }\n  .mdc-simple-menu--open-from-bottom-right {\n    -webkit-transform-origin: bottom right !important;\n            transform-origin: bottom right !important; }\n  .mdc-simple-menu .mdc-list-group,\n  .mdc-simple-menu .mdc-list {\n    padding: 0; }\n  .mdc-simple-menu .mdc-list-item {\n    position: relative;\n    padding: 0 16px;\n    outline: none;\n    color: inherit;\n    text-decoration: none;\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    line-height: 1.5rem; }\n    .mdc-simple-menu--theme-dark.mdc-simple-menu .mdc-list-item,\n    .mdc-theme--dark .mdc-simple-menu .mdc-list-item {\n      color: white; }\n  .mdc-simple-menu--theme-dark.mdc-simple-menu .mdc-list-divider,\n  .mdc-theme--dark .mdc-simple-menu .mdc-list-divider {\n    border-color: rgba(255, 255, 255, 0.12); }\n  .mdc-simple-menu .mdc-list-item__start-detail {\n    color: rgba(0, 0, 0, 0.54); }\n    .mdc-simple-menu--theme-dark.mdc-simple-menu .mdc-list-item__start-detail,\n    .mdc-theme--dark .mdc-simple-menu .mdc-list-item__start-detail {\n      color: rgba(255, 255, 255, 0.54); }\n  .mdc-simple-menu--selected.mdc-list-item,\n  .mdc-simple-menu--selected.mdc-list-item .mdc-list-item__start-detail {\n    color: #3f51b5;\n    color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-simple-menu .mdc-list-item::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    -webkit-transition: opacity 120ms cubic-bezier(0, 0, 0.2, 1);\n    transition: opacity 120ms cubic-bezier(0, 0, 0.2, 1);\n    border-radius: inherit;\n    background: currentColor;\n    content: \"\";\n    opacity: 0; }\n  .mdc-simple-menu .mdc-list-item:focus::before {\n    opacity: .12; }\n  .mdc-simple-menu .mdc-list-item:active::before {\n    /*\n      Slightly darker value for visual distinction.\n      This allows a full base that has distinct modes.\n      Progressive enhancement with ripples will provide complete button spec alignment.\n    */\n    opacity: .18; }\n\n/* postcss-bem-linter: end */\n.mdc-menu-anchor {\n  position: relative;\n  overflow: visible; }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n.mdc-radio {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  display: inline-block;\n  position: relative;\n  box-sizing: border-box;\n  width: 40px;\n  height: 40px;\n  -webkit-box-flex: 0;\n      -ms-flex: 0 0 40px;\n          flex: 0 0 40px;\n  padding: 10px;\n  cursor: pointer;\n  will-change: opacity, transform, border-color, background-color, color; }\n  .mdc-radio:not(.mdc-ripple-upgraded):hover::before, .mdc-radio:not(.mdc-ripple-upgraded):focus::before, .mdc-radio:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 85ms;\n            transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-radio::before {\n    background-color: rgba(63, 81, 181, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-radio::before {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }\n  .mdc-radio.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-radio.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-radio.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-radio.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-radio::after {\n    background-color: rgba(63, 81, 181, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-radio::after {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }\n  .mdc-radio.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-radio:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-radio.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-radio.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-radio.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-radio::before, .mdc-radio::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%; }\n  .mdc-radio.mdc-ripple-upgraded .mdc-radio__background::before {\n    content: none; }\n  .mdc-radio__background {\n    display: inline-block;\n    position: absolute;\n    width: 50%;\n    height: 50%;\n    box-sizing: border-box; }\n    .mdc-radio__background::before {\n      background-color: #3f51b5;\n      background-color: var(--mdc-theme-primary, #3f51b5);\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      -webkit-transform: scale(0, 0);\n              transform: scale(0, 0);\n      -webkit-transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 120ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      border-radius: 50%;\n      content: \"\";\n      opacity: 0;\n      pointer-events: none; }\n  .mdc-radio__outer-circle {\n    border-color: rgba(0, 0, 0, 0.54);\n    border-color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    -webkit-transition: border-color 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: border-color 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    border-width: 2px;\n    border-style: solid;\n    border-radius: 50%;\n    box-sizing: border-box; }\n    .mdc-radio--theme-dark .mdc-radio__outer-circle,\n    .mdc-theme--dark .mdc-radio__outer-circle {\n      border-color: rgba(255, 255, 255, 0.7);\n      border-color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n  .mdc-radio__inner-circle {\n    background-color: rgba(0, 0, 0, 0.54);\n    background-color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    -webkit-transform: scale(0, 0);\n            transform: scale(0, 0);\n    -webkit-transition: background-color 120ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: background-color 120ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: transform 120ms 0ms cubic-bezier(0.4, 0, 1, 1), background-color 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: transform 120ms 0ms cubic-bezier(0.4, 0, 1, 1), background-color 120ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    border-radius: 50%;\n    box-sizing: border-box; }\n    .mdc-radio--theme-dark .mdc-radio__inner-circle,\n    .mdc-theme--dark .mdc-radio__inner-circle {\n      background-color: rgba(255, 255, 255, 0.7);\n      background-color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n  .mdc-radio__native-control {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    cursor: inherit;\n    opacity: 0;\n    z-index: 1; }\n\n.mdc-radio__native-control:checked + .mdc-radio__background,\n.mdc-radio__native-control:disabled + .mdc-radio__background {\n  -webkit-transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__outer-circle,\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle {\n    -webkit-transition: border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__inner-circle,\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle {\n    -webkit-transition: background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n\n.mdc-radio--disabled {\n  cursor: default;\n  pointer-events: none; }\n\n.mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__outer-circle {\n  border-color: #3f51b5;\n  border-color: var(--mdc-theme-primary, #3f51b5); }\n\n.mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__inner-circle {\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5);\n  -webkit-transform: scale(0.5);\n          transform: scale(0.5);\n  -webkit-transition: background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n\n.mdc-radio__native-control:disabled + .mdc-radio__background,\nfieldset:disabled .mdc-radio__native-control + .mdc-radio__background,\n[aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background {\n  cursor: default; }\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle,\n  fieldset:disabled .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle,\n  [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle {\n    border-color: rgba(0, 0, 0, 0.26); }\n    .mdc-radio--theme-dark .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle,\n    .mdc-theme--dark .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle, .mdc-radio--theme-dark\n    fieldset:disabled .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle,\n    .mdc-theme--dark\n    fieldset:disabled .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle, .mdc-radio--theme-dark\n    [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle,\n    .mdc-theme--dark\n    [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle {\n      border-color: rgba(255, 255, 255, 0.3); }\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle,\n  fieldset:disabled .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle,\n  [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle {\n    background-color: rgba(0, 0, 0, 0.26); }\n    .mdc-radio--theme-dark .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle,\n    .mdc-theme--dark .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle, .mdc-radio--theme-dark\n    fieldset:disabled .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle,\n    .mdc-theme--dark\n    fieldset:disabled .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle, .mdc-radio--theme-dark\n    [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle,\n    .mdc-theme--dark\n    [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle {\n      background-color: rgba(255, 255, 255, 0.3); }\n\n.mdc-radio__native-control:focus + .mdc-radio__background::before {\n  -webkit-transform: scale(2, 2);\n          transform: scale(2, 2);\n  -webkit-transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: .26; }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n            transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    -webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n.mdc-ripple-surface {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  position: relative;\n  outline: none;\n  overflow: hidden; }\n  .mdc-ripple-surface:not(.mdc-ripple-upgraded):hover::before, .mdc-ripple-surface:not(.mdc-ripple-upgraded):focus::before, .mdc-ripple-surface:not(.mdc-ripple-upgraded):active::after {\n    -webkit-transition-duration: 85ms;\n            transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-ripple-surface::before {\n    background-color: rgba(0, 0, 0, 0.06);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-ripple-surface.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-ripple-surface.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-ripple-surface.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-ripple-surface.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-ripple-surface::after {\n    background-color: rgba(0, 0, 0, 0.06);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-ripple-surface.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-ripple-surface:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-ripple-surface.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-ripple-surface.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-ripple-surface.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-ripple-surface[data-mdc-ripple-is-unbounded] {\n    overflow: visible; }\n  .mdc-ripple-surface--primary::before, .mdc-ripple-surface--primary::after {\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-ripple-surface--primary::before {\n    background-color: rgba(63, 81, 181, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-ripple-surface--primary::before {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(16%)); } }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-ripple-surface--primary::after {\n    background-color: rgba(63, 81, 181, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-ripple-surface--primary::after {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(16%)); } }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-ripple-surface--primary:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-ripple-surface--accent::before, .mdc-ripple-surface--accent::after {\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-ripple-surface--accent::before {\n    background-color: rgba(255, 64, 129, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-ripple-surface--accent::before {\n        background-color: color(var(--mdc-theme-accent, #ff4081) a(16%)); } }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded--background-active-fill::before {\n    -webkit-transition-duration: 120ms;\n            transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform: scale(var(--mdc-ripple-fg-scale, 0));\n            transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-ripple-surface--accent::after {\n    background-color: rgba(255, 64, 129, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    -webkit-transition: opacity 250ms linear;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-ripple-surface--accent::after {\n        background-color: color(var(--mdc-theme-accent, #ff4081) a(16%)); } }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    opacity: 0; }\n  .mdc-ripple-surface--accent:not(.mdc-ripple-upgraded--unbounded)::after {\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    -webkit-transform: scale(0);\n            transform: scale(0);\n    -webkit-transform-origin: center center;\n            transform-origin: center center; }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded--foreground-activation::after {\n    -webkit-animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n            animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded--foreground-deactivation::after {\n    -webkit-transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n            transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    -webkit-animation: 250ms mdc-ripple-fg-opacity-out;\n            animation: 250ms mdc-ripple-fg-opacity-out; }\n\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n.mdc-select {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.75rem;\n  color: rgba(0, 0, 0, 0.87);\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  padding-left: 0;\n  padding-right: 24px;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  max-width: calc(100% - 24px);\n  height: 32px;\n  -webkit-transition: border-bottom-color 150ms 0ms cubic-bezier(0.4, 0, 1, 1), background-color 150ms 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: border-bottom-color 150ms 0ms cubic-bezier(0.4, 0, 1, 1), background-color 150ms 0ms cubic-bezier(0.4, 0, 1, 1);\n  border: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 0;\n  background: none;\n  background-repeat: no-repeat;\n  background-position: right center;\n  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%230%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.54%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n  font-family: Roboto, sans-serif;\n  font-size: .936rem;\n  cursor: pointer; }\n  [dir=\"rtl\"] .mdc-select, .mdc-select[dir=\"rtl\"] {\n    padding-left: 24px;\n    padding-right: 0; }\n  .mdc-select::-ms-expand {\n    display: none; }\n  .mdc-select:focus {\n    border-bottom-color: #3f51b5;\n    border-bottom-color: var(--mdc-theme-primary, #3f51b5);\n    outline: none;\n    background-color: rgba(0, 0, 0, 0.06); }\n  [dir=\"rtl\"] .mdc-select, .mdc-select[dir=\"rtl\"] {\n    background-position: left center; }\n  .mdc-select--theme-dark,\n  .mdc-theme--dark .mdc-select {\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white);\n    background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23ffffff%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.54%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.12); }\n    .mdc-select--theme-dark:focus,\n    .mdc-theme--dark .mdc-select:focus {\n      border-bottom-color: #3f51b5;\n      border-bottom-color: var(--mdc-theme-primary, #3f51b5);\n      background-color: rgba(255, 255, 255, 0.09); }\n  .mdc-select__menu {\n    position: fixed;\n    top: 0;\n    left: 0;\n    max-height: 100%;\n    -webkit-transform-origin: center center;\n            transform-origin: center center;\n    overflow-y: scroll;\n    z-index: 4; }\n  .mdc-select__selected-text {\n    -webkit-transition: opacity 125ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 125ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 125ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 125ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 125ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 125ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 125ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 125ms 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 125ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    white-space: nowrap;\n    overflow: hidden; }\n\n.mdc-select--open .mdc-select__selected-text {\n  -webkit-transform: translateY(8px);\n          transform: translateY(8px);\n  -webkit-transition: opacity 125ms 125ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 125ms 125ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 125ms 125ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 125ms 125ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 125ms 125ms cubic-bezier(0, 0, 0.2, 1), transform 125ms 125ms cubic-bezier(0, 0, 0.2, 1);\n  transition: opacity 125ms 125ms cubic-bezier(0, 0, 0.2, 1), transform 125ms 125ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 125ms 125ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: 0; }\n\n.mdc-select--disabled,\n.mdc-select[disabled] {\n  color: rgba(0, 0, 0, 0.38);\n  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));\n  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%230%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.38%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n  border-bottom-style: dotted;\n  cursor: default;\n  pointer-events: none;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none; }\n\n.mdc-select--theme-dark.mdc-select--disabled,\n.mdc-theme--dark .mdc-select--disabled {\n  color: rgba(255, 255, 255, 0.5);\n  color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5));\n  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23ffffff%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.38%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n  border-bottom: 1px dotted rgba(255, 255, 255, 0.38); }\n\n.mdc-select--theme-dark.mdc-select[disabled],\n.mdc-theme--dark .mdc-select[disabled] {\n  color: rgba(255, 255, 255, 0.5);\n  color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5));\n  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23ffffff%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.38%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n  border-bottom: 1px dotted rgba(255, 255, 255, 0.38); }\n\n.mdc-select__menu .mdc-list-item {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.75rem;\n  color: rgba(0, 0, 0, 0.54);\n  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); }\n  .mdc-select__menu .mdc-list-item[aria-selected=\"true\"] {\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }\n  .mdc-select--theme-dark .mdc-select__menu .mdc-list-item,\n  .mdc-theme--dark .mdc-select__menu .mdc-list-item {\n    color: rgba(255, 255, 255, 0.7);\n    color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n    .mdc-select--theme-dark .mdc-select__menu .mdc-list-item[aria-selected=\"true\"],\n    .mdc-theme--dark .mdc-select__menu .mdc-list-item[aria-selected=\"true\"] {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n\n.mdc-select__menu .mdc-list-group,\n.mdc-select__menu .mdc-list-group > .mdc-list-item:first-child {\n  margin-top: 12px; }\n\n.mdc-select__menu .mdc-list-group {\n  color: rgba(0, 0, 0, 0.38);\n  color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n  font-weight: normal; }\n  .mdc-select__menu .mdc-list-group .mdc-list-item {\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }\n\n.mdc-select--theme-dark .mdc-select__menu .mdc-list-group,\n.mdc-theme--dark .mdc-select__menu .mdc-list-group {\n  color: rgba(255, 255, 255, 0.5);\n  color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n  .mdc-select--theme-dark .mdc-select__menu .mdc-list-group .mdc-list-item,\n  .mdc-theme--dark .mdc-select__menu .mdc-list-group .mdc-list-item {\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white); }\n\n.mdc-multi-select {\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  width: 250px;\n  padding: 0;\n  border: 1px solid;\n  border-color: rgba(0, 0, 0, 0.38);\n  border-color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n  outline: none; }\n  .mdc-multi-select--theme-dark,\n  .mdc-theme--dark .mdc-multi-select {\n    border-color: rgba(255, 255, 255, 0.5);\n    border-color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n  .mdc-multi-select .mdc-list-group {\n    margin: 16px 0 0;\n    padding: 0 0 0 16px;\n    color: rgba(0, 0, 0, 0.38);\n    color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n    font-weight: normal; }\n    .mdc-multi-select .mdc-list-group--theme-dark,\n    .mdc-theme--dark .mdc-multi-select .mdc-list-group {\n      color: rgba(255, 255, 255, 0.5);\n      color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n    .mdc-multi-select .mdc-list-group:last-child {\n      margin-bottom: 16px; }\n    .mdc-multi-select .mdc-list-group .mdc-list-divider {\n      margin-left: -16px; }\n  .mdc-multi-select .mdc-list-item {\n    margin: 0 0 0 -16px;\n    padding: 0 16px;\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }\n    .mdc-multi-select .mdc-list-item--theme-dark,\n    .mdc-theme--dark .mdc-multi-select .mdc-list-item {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n    .mdc-multi-select .mdc-list-item:first-child {\n      margin-top: 12px; }\n    .mdc-multi-select .mdc-list-item:last-child {\n      margin-bottom: 8px; }\n  .mdc-multi-select .mdc-list-item:checked {\n    background-color: rgba(0, 0, 0, 0.12);\n    background-color: #fff;\n    background-color: var(--mdc-theme-background, #fff); }\n    .mdc-multi-select .mdc-list-item:checked--theme-dark,\n    .mdc-theme--dark .mdc-multi-select .mdc-list-item:checked {\n      background-color: white;\n      background-color: var(--mdc-theme-text-primary-on-dark, white); }\n\n.mdc-multi-select:focus .mdc-list-item:checked {\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-multi-select:focus .mdc-list-item:checked--theme-dark,\n  .mdc-theme--dark .mdc-multi-select:focus .mdc-list-item:checked {\n    background-color: white;\n    background-color: var(--mdc-theme-text-primary-on-dark, white); }\n\n.mdc-list-divider {\n  margin-bottom: 8px;\n  padding-top: 8px;\n  font-size: 0; }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* postcss-bem-linter: define snackbar */\n.mdc-snackbar {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: fixed;\n  bottom: 0;\n  left: 50%;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  -webkit-box-pack: start;\n      -ms-flex-pack: start;\n          justify-content: flex-start;\n  padding-right: 24px;\n  padding-left: 24px;\n  -webkit-transform: translate(0, 100%);\n          transform: translate(0, 100%);\n  -webkit-transition: -webkit-transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: -webkit-transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);\n  transition: transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1), -webkit-transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);\n  background-color: #323232;\n  will-change: transform;\n  pointer-events: none;\n  /* stylelint-disable plugin/selector-bem-pattern */\n  /* stylelint-enable plugin/selector-bem-pattern */ }\n  @media (max-width: 599px) {\n    .mdc-snackbar {\n      left: 0;\n      width: calc(100% - 48px); } }\n  @media (min-width: 600px) {\n    .mdc-snackbar {\n      min-width: 288px;\n      max-width: 568px;\n      -webkit-transform: translate(-50%, 100%);\n              transform: translate(-50%, 100%);\n      border-radius: 2px; } }\n  .mdc-snackbar--active {\n    -webkit-transform: translate(0, 0);\n            transform: translate(0, 0);\n    pointer-events: auto;\n    -webkit-transition: -webkit-transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: -webkit-transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1);\n    transition: transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1); }\n    @media (min-width: 600px) {\n      .mdc-snackbar--active {\n        -webkit-transform: translate(-50%, 0);\n                transform: translate(-50%, 0); } }\n  .mdc-snackbar--action-on-bottom {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column; }\n  .mdc-snackbar--action-on-bottom .mdc-snackbar__text {\n    margin-right: inherit; }\n  .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n    -webkit-box-pack: start;\n        -ms-flex-pack: start;\n            justify-content: flex-start;\n    margin-top: -12px;\n    margin-bottom: 8px;\n    margin-left: auto;\n    margin-right: 0; }\n    [dir=\"rtl\"] .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper, .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper[dir=\"rtl\"] {\n      margin-left: 0;\n      margin-right: auto; }\n  .mdc-snackbar__text {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 400;\n    letter-spacing: 0.04em;\n    line-height: 1.25rem;\n    margin-left: 0;\n    margin-right: auto;\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-align: center;\n        -ms-flex-align: center;\n            align-items: center;\n    height: 48px;\n    -webkit-transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n    color: white;\n    opacity: 0; }\n    [dir=\"rtl\"] .mdc-snackbar .mdc-snackbar__text,\n    .mdc-snackbar[dir=\"rtl\"] .mdc-snackbar__text {\n      margin-left: auto;\n      margin-right: 0; }\n  .mdc-snackbar--multiline .mdc-snackbar__text {\n    height: 80px; }\n  .mdc-snackbar--multiline.mdc-snackbar--action-on-bottom .mdc-snackbar__text {\n    margin: 0; }\n  .mdc-snackbar__action-button {\n    color: #ff4081;\n    color: var(--mdc-theme-accent, #ff4081);\n    margin-left: 0;\n    margin-right: -16px;\n    min-width: auto;\n    height: inherit;\n    -webkit-transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n    opacity: 0;\n    visibility: hidden; }\n    [dir=\"rtl\"] .mdc-snackbar .mdc-snackbar__action-button,\n    .mdc-snackbar[dir=\"rtl\"] .mdc-snackbar__action-button {\n      margin-left: -16px;\n      margin-right: 0; }\n    .mdc-snackbar__action-button::-moz-focus-inner {\n      border: 0; }\n    .mdc-snackbar__action-button:not([aria-hidden]) {\n      visibility: inherit; }\n  .mdc-snackbar--active .mdc-snackbar__text,\n  .mdc-snackbar--active .mdc-snackbar__action-button:not([aria-hidden]) {\n    -webkit-transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n    transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n    opacity: 1; }\n\n/* postcss-bem-linter: end */\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n.mdc-switch {\n  display: inline-block;\n  position: relative; }\n  .mdc-switch__native-control {\n    display: inline-block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 34px;\n    height: 14px;\n    cursor: pointer;\n    opacity: 0;\n    z-index: 2; }\n  .mdc-switch__background {\n    display: block;\n    position: relative;\n    width: 34px;\n    height: 14px;\n    border-radius: 7px;\n    outline: none;\n    background-color: transparent;\n    cursor: pointer;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none; }\n    .mdc-switch--theme-dark .mdc-switch__background,\n    .mdc-theme--dark .mdc-switch__background {\n      background-color: transparent; }\n    .mdc-switch__background::before {\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      -webkit-transition: opacity 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n      transition: opacity 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n      border-radius: 7px;\n      background-color: #000;\n      content: \"\";\n      opacity: .38; }\n      .mdc-switch--theme-dark .mdc-switch__background::before,\n      .mdc-theme--dark .mdc-switch__background::before {\n        background-color: #fff;\n        opacity: .3; }\n    .mdc-switch__background .mdc-switch__knob {\n      display: block;\n      position: absolute;\n      top: -3px;\n      left: 0;\n      width: 20px;\n      height: 20px;\n      -webkit-transform: translateX(0);\n              transform: translateX(0);\n      -webkit-transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n      transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n      transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n      transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n      border-radius: 10px;\n      background-color: #fafafa;\n      box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n      z-index: 1; }\n      .mdc-switch--theme-dark .mdc-switch__background .mdc-switch__knob,\n      .mdc-theme--dark .mdc-switch__background .mdc-switch__knob {\n        background-color: #bdbdbd; }\n      .mdc-switch__background .mdc-switch__knob::before {\n        position: absolute;\n        top: -14px;\n        left: -14px;\n        width: 48px;\n        height: 48px;\n        -webkit-transform: scale(0);\n                transform: scale(0);\n        -webkit-transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n        transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n        transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n        transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n        border-radius: 24px;\n        background-color: transparent;\n        content: \"\";\n        opacity: .2; }\n\n.mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before {\n  position: absolute;\n  width: 48px;\n  height: 48px;\n  -webkit-transform: scale(1);\n          transform: scale(1);\n  -webkit-transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 24px;\n  background-color: #9e9e9e; }\n  .mdc-switch--theme-dark .mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before,\n  .mdc-theme--dark .mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before {\n    background-color: #f1f1f1;\n    opacity: .14; }\n\n.mdc-switch__native-control:checked ~ .mdc-switch__background::before {\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5);\n  opacity: .5; }\n\n.mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob {\n  -webkit-transform: translateX(14px);\n          transform: translateX(14px);\n  -webkit-transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob::before {\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5);\n    opacity: .15; }\n    .mdc-switch--theme-dark .mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob::before,\n    .mdc-theme--dark .mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob::before {\n      background-color: #3f51b5;\n      background-color: var(--mdc-theme-primary, #3f51b5); }\n\n.mdc-switch__native-control:disabled {\n  cursor: initial; }\n\n.mdc-switch__native-control:disabled ~ .mdc-switch__background::before {\n  background-color: #000;\n  opacity: .12; }\n  .mdc-switch--theme-dark .mdc-switch__native-control:disabled ~ .mdc-switch__background::before,\n  .mdc-theme--dark .mdc-switch__native-control:disabled ~ .mdc-switch__background::before {\n    background-color: #fff;\n    opacity: .1; }\n\n.mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob {\n  background-color: #bdbdbd; }\n  .mdc-switch--theme-dark .mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob,\n  .mdc-theme--dark .mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob {\n    background-color: #424242; }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-textfield {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  letter-spacing: 0.04em;\n  display: inline-block;\n  margin-bottom: 8px;\n  will-change: opacity, transform, color; }\n  .mdc-textfield__input {\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n    padding: 0 0 8px;\n    border: none;\n    background: none;\n    font-size: inherit;\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none; }\n    .mdc-textfield__input::-webkit-input-placeholder {\n      color: rgba(0, 0, 0, 0.38);\n      color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n      -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      opacity: 1; }\n    .mdc-textfield__input::-moz-placeholder {\n      color: rgba(0, 0, 0, 0.38);\n      color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n      -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      opacity: 1; }\n    .mdc-textfield__input:-ms-input-placeholder {\n      color: rgba(0, 0, 0, 0.38);\n      color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n      -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      opacity: 1; }\n    .mdc-textfield__input::placeholder {\n      color: rgba(0, 0, 0, 0.38);\n      color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n      -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      opacity: 1; }\n    .mdc-textfield__input:focus {\n      outline: none; }\n      .mdc-textfield__input:focus::-webkit-input-placeholder {\n        color: rgba(0, 0, 0, 0.54);\n        color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); }\n      .mdc-textfield__input:focus::-moz-placeholder {\n        color: rgba(0, 0, 0, 0.54);\n        color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); }\n      .mdc-textfield__input:focus:-ms-input-placeholder {\n        color: rgba(0, 0, 0, 0.54);\n        color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); }\n      .mdc-textfield__input:focus::placeholder {\n        color: rgba(0, 0, 0, 0.54);\n        color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); }\n    .mdc-textfield__input:invalid {\n      box-shadow: none; }\n    .mdc-textfield__input--theme-dark,\n    .mdc-theme--dark .mdc-textfield__input {\n      color: white; }\n      .mdc-textfield__input--theme-dark::-webkit-input-placeholder,\n      .mdc-theme--dark .mdc-textfield__input::-webkit-input-placeholder {\n        color: rgba(255, 255, 255, 0.5);\n        color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n      .mdc-textfield__input--theme-dark::-moz-placeholder,\n      .mdc-theme--dark .mdc-textfield__input::-moz-placeholder {\n        color: rgba(255, 255, 255, 0.5);\n        color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n      .mdc-textfield__input--theme-dark:-ms-input-placeholder,\n      .mdc-theme--dark .mdc-textfield__input:-ms-input-placeholder {\n        color: rgba(255, 255, 255, 0.5);\n        color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n      .mdc-textfield__input--theme-dark::placeholder,\n      .mdc-theme--dark .mdc-textfield__input::placeholder {\n        color: rgba(255, 255, 255, 0.5);\n        color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n      .mdc-textfield__input--theme-dark:focus::-webkit-input-placeholder,\n      .mdc-theme--dark .mdc-textfield__input:focus::-webkit-input-placeholder {\n        color: rgba(255, 255, 255, 0.7);\n        color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n      .mdc-textfield__input--theme-dark:focus::-moz-placeholder,\n      .mdc-theme--dark .mdc-textfield__input:focus::-moz-placeholder {\n        color: rgba(255, 255, 255, 0.7);\n        color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n      .mdc-textfield__input--theme-dark:focus:-ms-input-placeholder,\n      .mdc-theme--dark .mdc-textfield__input:focus:-ms-input-placeholder {\n        color: rgba(255, 255, 255, 0.7);\n        color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n      .mdc-textfield__input--theme-dark:focus::placeholder,\n      .mdc-theme--dark .mdc-textfield__input:focus::placeholder {\n        color: rgba(255, 255, 255, 0.7);\n        color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n  .mdc-textfield__label {\n    color: rgba(0, 0, 0, 0.38);\n    color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n    position: absolute;\n    bottom: 8px;\n    left: 0;\n    -webkit-transform-origin: left top;\n            transform-origin: left top;\n    -webkit-transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), color 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: text; }\n    [dir=\"rtl\"] .mdc-textfield .mdc-textfield__label,\n    .mdc-textfield[dir=\"rtl\"] .mdc-textfield__label {\n      right: 0;\n      left: auto;\n      -webkit-transform-origin: right top;\n              transform-origin: right top; }\n    .mdc-textfield--theme-dark .mdc-textfield__label,\n    .mdc-theme--dark .mdc-textfield__label {\n      color: rgba(255, 255, 255, 0.5);\n      color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n    .mdc-textfield__label--float-above {\n      -webkit-transform: translateY(-100%) scale(0.75, 0.75);\n              transform: translateY(-100%) scale(0.75, 0.75);\n      cursor: auto; }\n\n.mdc-textfield__input:-webkit-autofill + .mdc-textfield__label {\n  -webkit-transform: translateY(-100%) scale(0.75, 0.75);\n          transform: translateY(-100%) scale(0.75, 0.75);\n  cursor: auto; }\n\n.mdc-textfield--upgraded:not(.mdc-textfield--fullwidth) {\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  position: relative;\n  box-sizing: border-box;\n  -webkit-box-align: end;\n      -ms-flex-align: end;\n          align-items: flex-end;\n  margin-top: 16px; }\n  .mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline) {\n    height: 48px; }\n    .mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 1px;\n      -webkit-transform: translateY(50%) scaleY(1);\n              transform: translateY(50%) scaleY(1);\n      -webkit-transform-origin: center bottom;\n              transform-origin: center bottom;\n      -webkit-transition: background-color 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      transition: background-color 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      transition: background-color 180ms cubic-bezier(0.4, 0, 0.2, 1), transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      transition: background-color 180ms cubic-bezier(0.4, 0, 0.2, 1), transform 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      background-color: rgba(0, 0, 0, 0.12);\n      content: \"\"; }\n      .mdc-textfield--theme-dark .mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after,\n      .mdc-theme--dark .mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after {\n        background-color: rgba(255, 255, 255, 0.12); }\n  .mdc-textfield--upgraded:not(.mdc-textfield--fullwidth) .mdc-textfield__label {\n    pointer-events: none; }\n\n.mdc-textfield--focused.mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after {\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5);\n  -webkit-transform: translateY(100%) scaleY(2);\n          transform: translateY(100%) scaleY(2);\n  -webkit-transition: -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1); }\n  .mdc-textfield--theme-dark.mdc-textfield--focused.mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after,\n  .mdc-theme--dark .mdc-textfield--focused.mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after {\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5);\n    -webkit-transform: translateY(100%) scaleY(2);\n            transform: translateY(100%) scaleY(2);\n    -webkit-transition: -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 180ms cubic-bezier(0.4, 0, 0.2, 1); }\n\n.mdc-textfield--focused .mdc-textfield__label {\n  color: #3f51b5;\n  color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-textfield--theme-dark .mdc-textfield--focused .mdc-textfield__label,\n  .mdc-theme--dark .mdc-textfield--focused .mdc-textfield__label {\n    color: #3f51b5;\n    color: var(--mdc-theme-primary, #3f51b5); }\n\n.mdc-textfield--dense {\n  margin-top: 12px;\n  margin-bottom: 4px;\n  font-size: .813rem; }\n  .mdc-textfield--dense .mdc-textfield__label--float-above {\n    -webkit-transform: translateY(calc(-100% - 2px)) scale(0.923, 0.923);\n            transform: translateY(calc(-100% - 2px)) scale(0.923, 0.923); }\n\n.mdc-textfield--invalid:not(.mdc-textfield--focused)::after {\n  background-color: #d50000; }\n\n.mdc-textfield--invalid:not(.mdc-textfield--focused) .mdc-textfield__label {\n  color: #d50000; }\n\n.mdc-textfield--theme-dark.mdc-textfield--invalid:not(.mdc-textfield--focused)::after,\n.mdc-theme--dark .mdc-textfield--invalid:not(.mdc-textfield--focused)::after {\n  background-color: #ff6e6e; }\n\n.mdc-textfield--theme-dark.mdc-textfield--invalid:not(.mdc-textfield--focused) .mdc-textfield__label,\n.mdc-theme--dark .mdc-textfield--invalid:not(.mdc-textfield--focused) .mdc-textfield__label {\n  color: #ff6e6e; }\n\n.mdc-textfield--disabled {\n  border-bottom: 1px dotted rgba(35, 31, 32, 0.26); }\n  .mdc-textfield--disabled::after {\n    display: none; }\n  .mdc-textfield--disabled .mdc-textfield__input {\n    padding-bottom: 7px; }\n  .mdc-textfield--theme-dark.mdc-textfield--disabled,\n  .mdc-theme--dark .mdc-textfield--disabled {\n    border-bottom: 1px dotted rgba(255, 255, 255, 0.3); }\n  .mdc-textfield--disabled .mdc-textfield__input,\n  .mdc-textfield--disabled .mdc-textfield__label,\n  .mdc-textfield--disabled + .mdc-textfield-helptext {\n    color: rgba(0, 0, 0, 0.38);\n    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }\n  .mdc-textfield--theme-dark .mdc-textfield--disabled .mdc-textfield__input,\n  .mdc-theme--dark .mdc-textfield--disabled .mdc-textfield__input, .mdc-textfield--theme-dark\n  .mdc-textfield--disabled .mdc-textfield__label,\n  .mdc-theme--dark\n  .mdc-textfield--disabled .mdc-textfield__label {\n    color: rgba(255, 255, 255, 0.5);\n    color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }\n  .mdc-textfield--theme-dark.mdc-textfield--disabled + .mdc-textfield-helptext,\n  .mdc-theme--dark .mdc-textfield--disabled + .mdc-textfield-helptext {\n    color: rgba(255, 255, 255, 0.5);\n    color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }\n  .mdc-textfield--disabled .mdc-textfield__label {\n    bottom: 7px;\n    cursor: default; }\n\n.mdc-textfield__input:required + .mdc-textfield__label::after {\n  margin-left: 1px;\n  content: \"*\"; }\n  .mdc-textfield--focused .mdc-textfield__input:required + .mdc-textfield__label::after {\n    color: #d50000; }\n  .mdc-textfield--focused .mdc-textfield--theme-dark .mdc-textfield__input:required + .mdc-textfield__label::after, .mdc-textfield--focused\n  .mdc-theme--dark .mdc-textfield__input:required + .mdc-textfield__label::after {\n    color: #ff6e6e; }\n\n.mdc-textfield--multiline {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  height: initial;\n  -webkit-transition: none;\n  transition: none; }\n  .mdc-textfield--multiline::after {\n    content: initial; }\n  .mdc-textfield--multiline .mdc-textfield__input {\n    padding: 4px;\n    -webkit-transition: border-color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    transition: border-color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    border: 1px solid rgba(0, 0, 0, 0.12);\n    border-radius: 2px; }\n    .mdc-textfield--theme-dark .mdc-textfield--multiline .mdc-textfield__input,\n    .mdc-theme--dark .mdc-textfield--multiline .mdc-textfield__input {\n      border-color: rgba(255, 255, 255, 0.12); }\n    .mdc-textfield--multiline .mdc-textfield__input:focus {\n      border-color: #3f51b5;\n      border-color: var(--mdc-theme-primary, #3f51b5); }\n    .mdc-textfield--multiline .mdc-textfield__input:invalid:not(:focus) {\n      border-color: #d50000; }\n    .mdc-textfield--theme-dark .mdc-textfield--multiline .mdc-textfield__input:invalid:not(:focus),\n    .mdc-theme--dark .mdc-textfield--multiline .mdc-textfield__input:invalid:not(:focus) {\n      border-color: #ff6e6e; }\n  .mdc-textfield--multiline .mdc-textfield__label {\n    top: 6px;\n    bottom: initial;\n    left: 4px; }\n    [dir=\"rtl\"] .mdc-textfield--multiline .mdc-textfield--multiline .mdc-textfield__label,\n    .mdc-textfield--multiline[dir=\"rtl\"] .mdc-textfield--multiline .mdc-textfield__label {\n      right: 4px;\n      left: auto; }\n    .mdc-textfield--multiline .mdc-textfield__label--float-above {\n      -webkit-transform: translateY(calc(-100% - 6px)) scale(0.923, 0.923);\n              transform: translateY(calc(-100% - 6px)) scale(0.923, 0.923); }\n  .mdc-textfield--multiline.mdc-textfield--disabled {\n    border-bottom: none; }\n    .mdc-textfield--multiline.mdc-textfield--disabled .mdc-textfield__input {\n      border: 1px dotted rgba(35, 31, 32, 0.26); }\n      .mdc-textfield--theme-dark .mdc-textfield--multiline.mdc-textfield--disabled .mdc-textfield__input,\n      .mdc-theme--dark .mdc-textfield--multiline.mdc-textfield--disabled .mdc-textfield__input {\n        border-color: rgba(255, 255, 255, 0.3); }\n\n.mdc-textfield--fullwidth {\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n  margin: 0;\n  border: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  outline: none; }\n  .mdc-textfield--fullwidth:not(.mdc-textfield--multiline) {\n    height: 56px; }\n  .mdc-textfield--fullwidth.mdc-textfield--multiline {\n    padding: 20px 0 0; }\n  .mdc-textfield--fullwidth.mdc-textfield--dense:not(.mdc-textfield--multiline) {\n    height: 48px; }\n  .mdc-textfield--fullwidth.mdc-textfield--dense.mdc-textfield--multiline {\n    padding: 16px 0 0; }\n  .mdc-textfield--fullwidth.mdc-textfield--disabled, .mdc-textfield--fullwidth.mdc-textfield--disabled.mdc-textfield--multiline {\n    border-bottom: 1px dotted rgba(0, 0, 0, 0.12); }\n  .mdc-textfield--fullwidth--theme-dark,\n  .mdc-theme--dark .mdc-textfield--fullwidth {\n    border-bottom: 1px solid rgba(255, 255, 255, 0.12); }\n    .mdc-textfield--fullwidth--theme-dark.mdc-textfield--disabled, .mdc-textfield--fullwidth--theme-dark.mdc-textfield--disabled.mdc-textfield--multiline,\n    .mdc-theme--dark .mdc-textfield--fullwidth.mdc-textfield--disabled,\n    .mdc-theme--dark .mdc-textfield--fullwidth.mdc-textfield--disabled.mdc-textfield--multiline {\n      border-bottom: 1px dotted rgba(255, 255, 255, 0.12); }\n  .mdc-textfield--fullwidth .mdc-textfield__input {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    resize: none;\n    border: none !important; }\n\n.mdc-textfield:not(.mdc-textfield--upgraded):not(.mdc-textfield--multiline) .mdc-textfield__input {\n  -webkit-transition: border-bottom-color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border-bottom-color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\n\n.mdc-textfield:not(.mdc-textfield--upgraded) .mdc-textfield__input:focus {\n  border-color: #3f51b5;\n  border-color: var(--mdc-theme-primary, #3f51b5); }\n\n.mdc-textfield:not(.mdc-textfield--upgraded) .mdc-textfield__input:disabled {\n  color: rgba(0, 0, 0, 0.38);\n  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));\n  border-style: dotted;\n  border-color: rgba(35, 31, 32, 0.26); }\n\n.mdc-textfield:not(.mdc-textfield--upgraded) .mdc-textfield__input:invalid:not(:focus) {\n  border-color: #d50000; }\n\n.mdc-textfield--theme-dark:not(.mdc-textfield--upgraded) .mdc-textfield__input:not(:focus),\n.mdc-theme--dark .mdc-textfield:not(.mdc-textfield--upgraded) .mdc-textfield__input:not(:focus) {\n  border-color: rgba(255, 255, 255, 0.12); }\n\n.mdc-textfield--theme-dark:not(.mdc-textfield--upgraded) .mdc-textfield__input:disabled,\n.mdc-theme--dark .mdc-textfield:not(.mdc-textfield--upgraded) .mdc-textfield__input:disabled {\n  color: rgba(255, 255, 255, 0.5);\n  color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5));\n  border-color: rgba(255, 255, 255, 0.3); }\n\n.mdc-textfield--theme-dark:not(.mdc-textfield--upgraded) .mdc-textfield__input:invalid:not(:focus),\n.mdc-theme--dark .mdc-textfield:not(.mdc-textfield--upgraded) .mdc-textfield__input:invalid:not(:focus) {\n  border-color: #ff6e6e; }\n\n.mdc-textfield-helptext {\n  color: rgba(0, 0, 0, 0.38);\n  color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n  margin: 0;\n  -webkit-transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  font-size: .75rem;\n  opacity: 0;\n  will-change: opacity; }\n  .mdc-textfield-helptext--theme-dark,\n  .mdc-theme--dark .mdc-textfield-helptext {\n    color: rgba(255, 255, 255, 0.5);\n    color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n  .mdc-textfield + .mdc-textfield-helptext {\n    margin-bottom: 8px; }\n  .mdc-textfield--dense + .mdc-textfield-helptext {\n    margin-bottom: 4px; }\n  .mdc-textfield--focused + .mdc-textfield-helptext:not(.mdc-textfield-helptext--validation-msg) {\n    opacity: 1; }\n\n.mdc-textfield-helptext--persistent {\n  -webkit-transition: none;\n  transition: none;\n  opacity: 1;\n  will-change: initial; }\n\n.mdc-textfield--invalid + .mdc-textfield-helptext--validation-msg {\n  color: #d50000;\n  opacity: 1; }\n\n.mdc-textfield--theme-dark.mdc-textfield--invalid + .mdc-textfield-helptext--validation-msg,\n.mdc-theme--dark .mdc-textfield--invalid + .mdc-textfield-helptext--validation-msg {\n  color: #ff6e6e; }\n\n.mdc-form-field > .mdc-textfield + label {\n  -ms-flex-item-align: start;\n      align-self: flex-start; }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n:root {\n  --mdc-theme-primary: #3f51b5;\n  --mdc-theme-accent: #ff4081;\n  --mdc-theme-background: #fff;\n  --mdc-theme-text-primary-on-primary: white;\n  --mdc-theme-text-secondary-on-primary: rgba(255, 255, 255, 0.7);\n  --mdc-theme-text-hint-on-primary: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-disabled-on-primary: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-icon-on-primary: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-primary-on-accent: white;\n  --mdc-theme-text-secondary-on-accent: rgba(255, 255, 255, 0.7);\n  --mdc-theme-text-hint-on-accent: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-disabled-on-accent: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-icon-on-accent: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-primary-on-background: rgba(0, 0, 0, 0.87);\n  --mdc-theme-text-secondary-on-background: rgba(0, 0, 0, 0.54);\n  --mdc-theme-text-hint-on-background: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-disabled-on-background: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-icon-on-background: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-primary-on-light: rgba(0, 0, 0, 0.87);\n  --mdc-theme-text-secondary-on-light: rgba(0, 0, 0, 0.54);\n  --mdc-theme-text-hint-on-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-disabled-on-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-icon-on-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-primary-on-dark: white;\n  --mdc-theme-text-secondary-on-dark: rgba(255, 255, 255, 0.7);\n  --mdc-theme-text-hint-on-dark: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-disabled-on-dark: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-icon-on-dark: rgba(255, 255, 255, 0.5); }\n\n/* Special case, so that .mdc-theme--background changes background color, not text color. */\n.mdc-theme--background {\n  background-color: #fff;\n  background-color: var(--mdc-theme-background, #fff); }\n\n.mdc-theme--primary {\n  color: #3f51b5 !important;\n  color: var(--mdc-theme-primary, #3f51b5) !important; }\n\n.mdc-theme--accent {\n  color: #ff4081 !important;\n  color: var(--mdc-theme-accent, #ff4081) !important; }\n\n.mdc-theme--text-primary-on-primary {\n  color: white !important;\n  color: var(--mdc-theme-text-primary-on-primary, white) !important; }\n\n.mdc-theme--text-secondary-on-primary {\n  color: rgba(255, 255, 255, 0.7) !important;\n  color: var(--mdc-theme-text-secondary-on-primary, rgba(255, 255, 255, 0.7)) !important; }\n\n.mdc-theme--text-hint-on-primary {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-hint-on-primary, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-disabled-on-primary {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-disabled-on-primary, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-icon-on-primary {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-icon-on-primary, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-primary-on-accent {\n  color: white !important;\n  color: var(--mdc-theme-text-primary-on-accent, white) !important; }\n\n.mdc-theme--text-secondary-on-accent {\n  color: rgba(255, 255, 255, 0.7) !important;\n  color: var(--mdc-theme-text-secondary-on-accent, rgba(255, 255, 255, 0.7)) !important; }\n\n.mdc-theme--text-hint-on-accent {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-hint-on-accent, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-disabled-on-accent {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-disabled-on-accent, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-icon-on-accent {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-icon-on-accent, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-primary-on-background {\n  color: rgba(0, 0, 0, 0.87) !important;\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)) !important; }\n\n.mdc-theme--text-secondary-on-background {\n  color: rgba(0, 0, 0, 0.54) !important;\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)) !important; }\n\n.mdc-theme--text-hint-on-background {\n  color: rgba(0, 0, 0, 0.38) !important;\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-disabled-on-background {\n  color: rgba(0, 0, 0, 0.38) !important;\n  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-icon-on-background {\n  color: rgba(0, 0, 0, 0.38) !important;\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-primary-on-light {\n  color: rgba(0, 0, 0, 0.87) !important;\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)) !important; }\n\n.mdc-theme--text-secondary-on-light {\n  color: rgba(0, 0, 0, 0.54) !important;\n  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)) !important; }\n\n.mdc-theme--text-hint-on-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-disabled-on-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-icon-on-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  color: var(--mdc-theme-text-icon-on-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-primary-on-dark {\n  color: white !important;\n  color: var(--mdc-theme-text-primary-on-dark, white) !important; }\n\n.mdc-theme--text-secondary-on-dark {\n  color: rgba(255, 255, 255, 0.7) !important;\n  color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)) !important; }\n\n.mdc-theme--text-hint-on-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-disabled-on-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-icon-on-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-icon-on-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n/* CSS rules for using primary and accent as background colors. */\n.mdc-theme--primary-bg {\n  background-color: #3f51b5 !important;\n  background-color: var(--mdc-theme-primary, #3f51b5) !important; }\n\n.mdc-theme--accent-bg {\n  background-color: #ff4081 !important;\n  background-color: var(--mdc-theme-accent, #ff4081) !important; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-toolbar {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  position: relative;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n      -ms-flex-direction: column;\n          flex-direction: column;\n  -webkit-box-pack: justify;\n      -ms-flex-pack: justify;\n          justify-content: space-between;\n  width: 100%;\n  box-sizing: border-box;\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5);\n  color: white;\n  color: var(--mdc-theme-text-primary-on-primary, white); }\n  .mdc-toolbar__row {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    position: relative;\n    width: 100%;\n    height: 64px;\n    padding: 20px 28px;\n    box-sizing: border-box; }\n    @media (max-width: 599px) {\n      .mdc-toolbar__row {\n        height: 56px;\n        padding: 16px; } }\n  .mdc-toolbar__section {\n    display: -webkit-inline-box;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    -webkit-box-flex: 1;\n        -ms-flex: 1;\n            flex: 1;\n    -webkit-box-align: start;\n        -ms-flex-align: start;\n            align-items: flex-start;\n    -webkit-box-pack: center;\n        -ms-flex-pack: center;\n            justify-content: center;\n    z-index: 1;\n    overflow: hidden; }\n    .mdc-toolbar__section--align-start {\n      -webkit-box-pack: start;\n          -ms-flex-pack: start;\n              justify-content: flex-start;\n      -webkit-box-ordinal-group: 0;\n          -ms-flex-order: -1;\n              order: -1; }\n    .mdc-toolbar__section--align-end {\n      -webkit-box-pack: end;\n          -ms-flex-pack: end;\n              justify-content: flex-end;\n      -webkit-box-ordinal-group: 2;\n          -ms-flex-order: 1;\n              order: 1; }\n  .mdc-toolbar__title {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 1.25rem;\n    font-weight: 500;\n    letter-spacing: 0.02em;\n    line-height: 2rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    margin: 0;\n    line-height: 1.5rem; }\n\n.mdc-toolbar--fixed {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-toolbar-fixed-adjust {\n  margin-top: 64px; }\n  @media (max-width: 599px) {\n    .mdc-toolbar-fixed-adjust {\n      margin-top: 56px; } }\n\n.mdc-toolbar__section--shrink-to-fit {\n  -webkit-box-flex: 0;\n      -ms-flex: none;\n          flex: none; }\n\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-typography {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased; }\n\n.mdc-typography--display4 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 7rem;\n  font-weight: 300;\n  letter-spacing: -0.04em;\n  line-height: 7rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--display4 {\n  margin: -1rem 0 3.5rem -0.085em; }\n\n.mdc-typography--display3 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 3.5rem;\n  font-weight: 400;\n  letter-spacing: -0.02em;\n  line-height: 3.5rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--display3 {\n  margin: -8px 0 64px -0.07em; }\n\n.mdc-typography--display2 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 2.813rem;\n  font-weight: 400;\n  letter-spacing: normal;\n  line-height: 3rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--display2 {\n  margin: -0.5rem 0 4rem -0.07em; }\n\n.mdc-typography--display1 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 2.125rem;\n  font-weight: 400;\n  letter-spacing: normal;\n  line-height: 2.5rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--display1 {\n  margin: -0.5rem 0 4rem -0.07em; }\n\n.mdc-typography--headline {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1.5rem;\n  font-weight: 400;\n  letter-spacing: normal;\n  line-height: 2rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--headline {\n  margin: -0.5rem 0 1rem -0.06em; }\n\n.mdc-typography--title {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1.25rem;\n  font-weight: 500;\n  letter-spacing: 0.02em;\n  line-height: 2rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--title {\n  margin: -0.5rem 0 1rem -0.05em; }\n\n.mdc-typography--subheading2 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.75rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--subheading2 {\n  margin: -0.5rem 0 1rem -0.06em; }\n\n.mdc-typography--subheading1 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.938rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.5rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--subheading1 {\n  margin: -0.313rem 0 0.813rem -0.06em; }\n\n.mdc-typography--body2 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  line-height: 1.5rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--body2 {\n  margin: -0.25rem 0 0.75rem 0; }\n\n.mdc-typography--body1 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.25rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--body1 {\n  margin: -0.25rem 0 0.75rem 0; }\n\n.mdc-typography--caption {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.75rem;\n  font-weight: 400;\n  letter-spacing: 0.08em;\n  line-height: 1.25rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--caption {\n  margin: -0.5rem 0 1rem -0.04em; }\n", "", {"version":3,"sources":["/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/animation/mdc-animation.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-animation/_mixins.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-animation/_variables.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-elevation/_variables.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/elevation/_mixins.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-theme/_constants.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-theme/_functions.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/theme/_variables.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-ripple/_keyframes.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-theme/_variables.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/theme/_mixins.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-typography/_variables.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/button/mdc-button.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/ripple/_mixins.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/typography/_mixins.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/card/mdc-card.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-checkbox/node_modules/@material/rtl/_mixins.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-checkbox/_variables.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-checkbox/_keyframes.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/animation/_mixins.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/checkbox/mdc-checkbox.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/material-components-web.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/typography/_variables.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/dialog/mdc-dialog.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-drawer/slidable/_mixins.css","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-drawer/slidable/_variables.css","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-drawer/persistent/mdc-persistent-drawer.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-drawer/_mixins.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-drawer/permanent/mdc-permanent-drawer.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-drawer/temporary/mdc-temporary-drawer.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-elevation/_mixins.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/elevation/mdc-elevation.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/fab/mdc-fab.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/form-field/mdc-form-field.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/grid-list/mdc-grid-list.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/icon-toggle/mdc-icon-toggle.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/layout-grid/mdc-layout-grid.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-layout-grid/_mixins.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-layout-grid/_variables.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/list/mdc-list.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-menu/simple/mdc-simple-menu.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/menu/mdc-menu.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/radio/mdc-radio.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/ripple/mdc-ripple.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-ripple/_mixins.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/select/mdc-select.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/snackbar/mdc-snackbar.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-snackbar/_variables.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/switch/mdc-switch.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-switch/_variables.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/textfield/mdc-textfield.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-theme/_mixins.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/theme/mdc-theme.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/toolbar/mdc-toolbar.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/material-components-web/node_modules/@material/typography/mdc-typography.scss","/Users/traviskaufman/dev/material-components-web/packages/material-components-web/packages/mdc-typography/_mixins.scss"],"names":[],"mappings":"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AAA;IAHO;MCed,yBAAqC;MACrC,wDAAoE,EDb7D;MCekB;QDlBX;UCmBZ,YAAW;UACX,wBC3BM,EFUD,EAAA;IAHO;MCed,yBAAqC;MACrC,wDAAoE,EDb7D;MCekB;QDlBX;UCmBZ,YAAW;UACX,wBC3BM,EFUD,EAAA;IAHO;MCed,yBAAqC;MACrC,wDAAoE,EDb7D;MCekB;QDlBX;UCmBZ,YAAW;UACX,wBC3BM,EFUD,EAAA,EAAA;EAQL;IC+DF,6BDhEc;QCgEd,kBDhEc;YCgEd,SDhEc,EAGX;EAFD;IC+DF,6BDhEc;QCgEd,kBDhEc;YCgEd,SDhEc,EAGX;EAFD;IC+DF,6BDhEc;QCgEd,kBDhEc;YCgEd,SDhEc,EAGX;EAFD;IC+DF,6BDhEc;QCgEd,kBDhEc;YCgEd,SDhEc,EAGX;EAFD;IC+DF,6BDhEc;QCgEd,kBDhEc;YCgEd,SDhEc,EAGX;EAFD;IC+DF,6BDhEc;QCgEd,kBDhEc;YCgEd,SDhEc,EAGX;EAFD;IC+DF,6BDhEc;QCgEd,kBDhEc;YCgEd,SDhEc,EAGX;EAFD;IC+DF,6BDhEc;QCgEd,kBDhEc;YCgEd,SDhEc,EAGX;EAFD;IC+DF,8BDhEc;QCgEd,kBDhEc;YCgEd,SDhEc,EAGX;EAFD;IC+DF,8BDhEc;QCgEd,mBDhEc;YCgEd,UDhEc,EAGX;EAFD;IC+DF,8BDhEc;QCgEd,mBDhEc;YCgEd,UDhEc,EAGX;EAFD;IC+DF,8BDhEc;QCgEd,mBDhEc;YCgEd,UDhEc,EAGX;EAIH;IC8DE,2BAAsB;QAAtB,uBAAsB,ED5DvB;IC8D0B;MDhE3B;QCiEI,2BAAiB;YAAjB,kBAAiB,ED/DpB,EAAA;EAED;ICkEE,4BAAkB;QAAlB,mBAAkB,EDhEnB;EAED;ICkEE,yBAAoB;QAApB,qBAAoB,EDhErB;ICkE0B;MDpE3B;QCqEI,yBAAe;YAAf,gBAAe,EDnElB,EAAA;;A/BzCH;;;;;;;;;;;EAWE;ACTF;;;GAGG;AASH;;;GAGG;AAQH;;;GAGG;AC1BH;;;EAGE;AACoC,gBAAgB;AACjB,eAAe;AACd,WAAW;AAEjD,+EAA+E;AAK/E,0DAA0D;AAkB1D,sDAAsD;ACjCtD,gGAA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;;;;;;;GAiCG;AC7CH,mEAAmE;AAEnE,yEAAyE;AWFzE,mEAAmE;AAEnE,yEAAyE;A4BMzE;EpChBE,gCHH6C;EGI7C,mCAAkC;EAClC,oCAAmC;EoCmBjC,gBvCmCe;EuCnCf,uBvCsCqB;EuCnCvB,sBAAqB;EACrB,mBAAkB;EAClB,uCAAsC,EAuEvC;EArEC;IxCbE,2BDAmB;ICCnB,mEAAiG;IwCejG,iBAAgB;IAChB,aAAY;IACZ,iBAAgB;IAChB,mBAAkB;IAClB,yBAAgB;OAAhB,sBAAgB;YAAhB,iBAAgB,EAiCjB;IAxCD;MxCbE,2BDEgB;MCDhB,gEAAiG;MwCwB/F,6DhD1CqE;MgD0CrE,qDhD1CqE;MgD2CrE,WAAU,EACX;IAdH;MxCbE,2BDEgB;MCDhB,gEAAiG;MwCwB/F,6DhD1CqE;MgD0CrE,qDhD1CqE;MgD2CrE,WAAU,EACX;IAdH;MxCbE,2BDEgB;MCDhB,gEAAiG;MwCwB/F,6DhD1CqE;MgD0CrE,qDhD1CqE;MgD2CrE,WAAU,EACX;IAdH;MxCbE,2BDEgB;MCDhB,gEAAiG;MwCwB/F,6DhD1CqE;MgD0CrE,qDhD1CqE;MgD2CrE,WAAU,EACX;IAdH;MAiBI,cAAa,EAKd;MAtBH;QxCbE,2BDCqB;QCArB,qEAAiG,EwCiC9F;MArBL;QxCbE,2BDCqB;QCArB,qEAAiG,EwCiC9F;MArBL;QxCbE,2BDCqB;QCArB,qEAAiG,EwCiC9F;MArBL;QxCbE,2BDCqB;QCArB,qEAAiG,EwCiC9F;IArBL;MA0BI,iBAAgB,EACjB;IxCmBjB;;MwChBkB,aAAY,ExCmBb;MAHjB;;QA3DgB,gCDSgB;QCRhB,oEAAiG,EwC8C9F;MxCYnB;;QA3DgB,gCDSgB;QCRhB,oEAAiG,EwC8C9F;MxCYnB;;QA3DgB,gCDSgB;QCRhB,oEAAiG,EwC8C9F;MxCYnB;;QA3DgB,gCDSgB;QCRhB,oEAAiG,EwC8C9F;MxCYnB;;QA3DgB,gCDQqB;QCPrB,yEAAiG,EwCkD9F;MxCQnB;;QA3DgB,gCDQqB;QCPrB,yEAAiG,EwCkD9F;MxCQnB;;QA3DgB,gCDQqB;QCPrB,yEAAiG,EwCkD9F;MxCQnB;;QA3DgB,gCDQqB;QCPrB,yEAAiG,EwCkD9F;EAIL;IxCvDE,2BDEgB;ICDhB,gEAAiG;IwCyDjG,mBAAkB;IAClB,YAAW;IACX,QAAO;IACP,mCAA0B;YAA1B,2BAA0B;IAC1B,mHhD/EuE;IgD+EvE,2GhD/EuE;IgD+EvE,mGhD/EuE;IgD+EvE,yJhD/EuE;IgDgFvE,aAAY,EAkBb;I7Bo+QC;;M6Bl/QE,SAAQ;MACR,WAAU;MACV,oCAA2B;cAA3B,4BAA2B,ElClC1B;INeC;;MAlDJ,gCDSgB;MCRhB,oEAAiG,EAoD5F;IwCwBL;MACE,uDAA4C;cAA5C,+CAA4C;MAC5C,aAAY,EACb;;AAKL;EAGI,uDAA4C;UAA5C,+CAA4C;EAC5C,aAAY,EACb;;AAIH;EACE,4BAAoB;EAApB,4BAAoB;EAApB,qBAAoB;EACpB,mBAAkB;EAClB,uBAAsB;EACtB,uBAAqB;MAArB,oBAAqB;UAArB,sBAAqB;EACrB,iBAAgB,EA0BjB;EA/BD;IAQI,aAAY,EAkBb;IA1BH;MAWM,mBAAkB;MAClB,UAAS;MACT,QAAO;MACP,YAAW;MACX,YAAW;MACX,6CAAoC;cAApC,qCAAoC;MACpC,wCAA+B;cAA/B,gCAA+B;MAC/B,8HhDjIqE;MgDiIrE,sHhDjIqE;MgDiIrE,8GhDjIqE;MgDiIrE,oKhDjIqE;MgDkIrE,sCA1HqC;MA2HrC,YAAW,EAKZ;MxCrEG;;QwCmEA,4CA7HkC,ExC6DjC;EwCyCT;IA6BI,qBAAoB,EACrB;;AAGH;ExC/HI,0BHZuB;EGavB,oDAAiG;EwCkIjG,8CAAqC;UAArC,sCAAqC;EACrC,yEhDrJuE;EgDqJvE,iEhDrJuE;EgDqJvE,yDhDrJuE;EgDqJvE,+GhDrJuE,EgDkKxE;ExCtGK;;IA3CJ,0BHZuB;IGavB,oDAAiG;IwCkIjG,8CAAqC;YAArC,sCAAqC;IACrC,yEhDrJuE;IgDqJvE,iEhDrJuE;IgDqJvE,yDhDrJuE;IgDqJvE,+GhDrJuE,EQ+DlE;;AwCiFT;ExC/HI,eHZuB;EGavB,yCAAiG,EwCwJlG;ExCvGK;;IAlDJ,eHZuB;IGavB,yCAAiG,EAoD5F;;AwCuGT;EACE,iBAAgB;EAChB,mBAAkB;EAClB,mBAAkB,EAMnB;EATD;IAOI,qEAA0D;YAA1D,6DAA0D,EAC3D;;AAGH;EAGM,0BArLgC,EAsLjC;;AAJL;EAOM,eAzLgC,EA0LjC;;AxCpIG;;EwC0IA,0BA/L6B,EAgM9B;;AxC3IC;;EwC8IA,eAnM6B,EAoM9B;;AAKP;EAUE,iDAhNmD,EAiPpD;EA3CD;IAEI,cAAa,EACd;EAHH;IAOI,oBAAmB,EACpB;ExC5JK;;IwCiKJ,mDAlN8C,ExCoDzC;EwCiJT;;;IxC/LI,2BDGoB;ICFpB,oEAAiG,EwCmNlG;ExClKK;;;;;IAlDJ,gCDUoB;ICTpB,wEAAiG,EAoD5F;EAVD;;IA3CJ,gCDUoB;ICTpB,wEAAiG,EwCiOhG;EAnCL;IAwCI,YAAW;IACX,gBAAe,EAChB;;AAGH;EACE,iBAAgB;EAChB,aAAY,EAWb;EAbgC;IAK7B,eA5PkC,EA6PnC;EAN8B;;IAU3B,eAhQ+B,EAiQhC;;AAIL;EAKE,qBAAa;EAAb,qBAAa;EAAb,cAAa;EACb,gBAAe;EACf,yBAAgB;EAAhB,iBAAgB,EA+DjB;EAtED;IAUI,iBAAgB,EACjB;EAXH;IAgBI,aAfiB;IAgBjB,oEhD7RuE;IgD6RvE,4DhD7RuE;IgD8RvE,sCAtRuC;IAuRvC,mBAAkB,EAmBnB;IxC/OK;;MwC+NF,wCAzRoC,ExC6DjC;IwCsMT;MxC3PI,sBHZuB;MGavB,gDAAiG,EwCqRhG;IA3BL;MA8BM,sBApSgC,EAqSjC;IxCxOG;;MwC4OA,sBAxS6B,EAyS9B;EApCP;IAyCI,SAvCiC;IAwCjC,gBAAe;IACf,UA1CiB,EAuDlB;I7Bq5QC;;M6B/5QE,WA7Ce;MA8Cf,WAAU,ElCvQT;IkCwNP;MAsDM,qEAAyE;cAAzE,6DAAyE,EAC1E;EAvDL;IA2DI,oBAAmB,EASpB;IApEH;MA8DM,0CAhU+C,EAqUhD;MxC5QG;;QwC0QA,uCAlU0C,ExC2DzC;;AwC8QT;EACE,eAAc;EACd,YAAW;EACX,uBAAsB;EACtB,UAAS;EACT,aAAY;EACZ,6CAlVyC;EAmVzC,cAAa,EAkDd;EAzDD;IAYI,aAAY,EACb;EAbH;IAgBI,kBAAiB,EAClB;EAjBH;IAqBM,aAAY,EACb;EAtBL;IAyBM,kBAAiB,EAClB;EA1BL;IAgCM,8CA5WqC,EA6WtC;ExCzSlB;;IwC6SiB,mDAhXsC,ExCsErC;IAHlB;;;MwCkTqB,oDArXkC,EAsXnC;EA3CP;IAkDI,YAAW;IACX,aAAY;IACZ,WAAU;IACV,aAAY;IAEZ,wBAAuB,EACxB;;AAKH;EAEI,2EhDnZuE;EgDmZvE,mEhDnZuE;EgDoZvE,6CA5YuC,EA6YxC;;AAJH;ExChYI,sBHZuB;EGavB,gDAAiG,EwCwYhG;;AATL;ExChYI,2BDGoB;ECFpB,oEAAiG;EwC6Y/F,qBAAoB;EACpB,qCAtZ+C,EAuZhD;;AAhBL;EAmBM,sBA9ZgC,EA+ZjC;;AxCzVnB;;EwC+VsB,wCAAwB,EACzB;;AxChWrB;;EA3DkB,gCDUoB;ECTpB,wEAAiG;EwC+Z7F,uCAta0C,EAua3C;;AxCtWrB;;EwCyWsB,sBA9a6B,EA+a9B;;AASP;ExC9aI,2BDEgB;ECDhB,gEAAiG;EwCgbnG,UAAS;EACT,+DhDncyE;EgDmczE,uDhDncyE;EgDoczE,kBAAiB;EACjB,WAAU;EACV,qBAAoB,EAoBrB;ExC9YhB;;IA3DmB,gCDSgB;ICRhB,oEAAiG,EA6DhG;EwC8XH;IACE,mBAAkB,EACnB;EAED;IACE,mBAAkB,EACnB;EAED;IACE,WAAU,EACX;;AAKH;EACE,yBAAgB;EAAhB,iBAAgB;EAChB,WAAU;EACV,qBAAoB,EACrB;;AAID;EAEI,eAhekC;EAielC,WAAU,EACX;;AxC5aK;;EwCgbF,eAre+B,EAsehC;;AAML;EACE,2BAAsB;MAAtB,uBAAsB,EACvB;;A7CtfD;;;;;;;;;;;EAWE;ACTF;;;GAGG;AASH;;;GAGG;AAQH;;;GAGG;AG1BH;;;EAGE;AACoC,gBAAgB;AACjB,eAAe;AACd,WAAW;AAEjD,+EAA+E;AAK/E,0DAA0D;AAkB1D,sDAAsD;A0C/BtD;;;;GAIG;AAiBH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiCG;ACtDH;EAEI,6B7CEuB;E6CFvB,4B7CGsB;E6CHtB,6B7CIuB;E6CJvB,2C3CqBc;E2CrBd,gE3CsBqB;E2CtBrB,2D3CuBgB;E2CvBhB,+D3CwBoB;E2CxBpB,2D3CyBgB;E2CzBhB,0C3CqBc;E2CrBd,+D3CsBqB;E2CtBrB,0D3CuBgB;E2CvBhB,8D3CwBoB;E2CxBpB,0D3CyBgB;E2CzBhB,4D3CcmB;E2CdnB,8D3CeqB;E2CfrB,yD3CgBgB;E2ChBhB,6D3CiBoB;E2CjBpB,yD3CkBgB;E2ClBhB,uD3CcmB;E2CdnB,yD3CeqB;E2CfrB,oD3CgBgB;E2ChBhB,wD3CiBoB;E2CjBpB,oD3CkBgB;E2ClBhB,wC3CqBc;E2CrBd,6D3CsBqB;E2CtBrB,wD3CuBgB;E2CvBhB,4D3CwBoB;E2CxBpB,wD3CyBgB,E2CvBnB;;AAED,4FAA4F;AAC5F;EDSI,uB5CVuB;E4CWvB,oDAAiG,ECRpG;;AAIG;EDFA,0BAAoE;EACpE,oDAA4G,ECG3G;;AAFD;EDFA,0BAAoE;EACpE,mDAA4G,ECG3G;;AAFD;EDFA,wBAAoE;EACpE,kEAA4G,ECG3G;;AAFD;EDFA,2CAAoE;EACpE,uFAA4G,ECG3G;;AAFD;EDFA,2CAAoE;EACpE,kFAA4G,ECG3G;;AAFD;EDFA,2CAAoE;EACpE,sFAA4G,ECG3G;;AAFD;EDFA,2CAAoE;EACpE,kFAA4G,ECG3G;;AAFD;EDFA,wBAAoE;EACpE,iEAA4G,ECG3G;;AAFD;EDFA,2CAAoE;EACpE,sFAA4G,ECG3G;;AAFD;EDFA,2CAAoE;EACpE,iFAA4G,ECG3G;;AAFD;EDFA,2CAAoE;EACpE,qFAA4G,ECG3G;;AAFD;EDFA,2CAAoE;EACpE,iFAA4G,ECG3G;;AAFD;EDFA,sCAAoE;EACpE,mFAA4G,ECG3G;;AAFD;EDFA,sCAAoE;EACpE,qFAA4G,ECG3G;;AAFD;EDFA,sCAAoE;EACpE,gFAA4G,ECG3G;;AAFD;EDFA,sCAAoE;EACpE,oFAA4G,ECG3G;;AAFD;EDFA,sCAAoE;EACpE,gFAA4G,ECG3G;;AAFD;EDFA,sCAAoE;EACpE,8EAA4G,ECG3G;;AAFD;EDFA,sCAAoE;EACpE,gFAA4G,ECG3G;;AAFD;EDFA,sCAAoE;EACpE,2EAA4G,ECG3G;;AAFD;EDFA,sCAAoE;EACpE,+EAA4G,ECG3G;;AAFD;EDFA,sCAAoE;EACpE,2EAA4G,ECG3G;;AAFD;EDFA,wBAAoE;EACpE,+DAA4G,ECG3G;;AAFD;EDFA,2CAAoE;EACpE,oFAA4G,ECG3G;;AAFD;EDFA,2CAAoE;EACpE,+EAA4G,ECG3G;;AAFD;EDFA,2CAAoE;EACpE,mFAA4G,ECG3G;;AAFD;EDFA,2CAAoE;EACpE,+EAA4G,ECG3G;;AAIL,kEAAkE;AAEhE;EDVE,qCAAoE;EACpE,+DAA4G,ECW7G;;AAFD;EDVE,qCAAoE;EACpE,8DAA4G,ECW7G;;AjDiEH;;;;GAIG;AAGH;;GAEG;AAGH;;GAEG;ACtGH;;;GAGG;AAgBH;;;;;;;;;;;GAWG;AAOH;;;;GAIG;AY3CH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8CG;AAmBH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkDG;AAiBH;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AAQH;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AX/LH;;;;;;;;;;;EAWE;ACTF;;;GAGG;AASH;;;GAGG;AAQH;;;GAGG;AG1BH;;;EAGE;AACoC,gBAAgB;AACjB,eAAe;AACd,WAAW;AAEjD,+EAA+E;AAK/E,0DAA0D;AAkB1D,sDAAsD;AC/BtD;;;;GAIG;AAiBH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiCG;AC7CH,mEAAmE;AAEnE,yEAAyE;A0CAzE;EACE,qBAAa;EAAb,qBAAa;EAAb,cAAa;EACb,mBAAkB;EAClB,6BAAsB;EAAtB,8BAAsB;MAAtB,2BAAsB;UAAtB,uBAAsB;EACtB,0BAA8B;MAA9B,uBAA8B;UAA9B,+BAA8B;EAC9B,YAAW;EACX,uBAAsB;E3CDpB,0BHZuB;EGavB,oDAAiG;EADjG,aDOc;ECNd,uDAAiG,E2CgDpG;EA3CC;IACE,qBAAa;IAAb,qBAAa;IAAb,cAAa;IACb,mBAAkB;IAClB,YAAW;IACX,aAvByB;IAwBzB,mBAtB2B;IAuB3B,uBAAsB,EAOvB;IAJC;MATF;QAUI,aA5B8B;QA6B9B,cA3B2B,EA6B9B,EAAA;EAED;IACE,4BAAoB;IAApB,4BAAoB;IAApB,qBAAoB;IACpB,oBAAO;QAAP,YAAO;YAAP,QAAO;IACP,yBAAuB;QAAvB,sBAAuB;YAAvB,wBAAuB;IACvB,yBAAuB;QAAvB,sBAAuB;YAAvB,wBAAuB;IACvB,WAAU;IACV,iBAAgB,EAWjB;IATC;MACE,wBAA2B;UAA3B,qBAA2B;cAA3B,4BAA2B;MAC3B,6BAAS;UAAT,mBAAS;cAAT,UAAS,EACV;IAED;MACE,sBAAyB;UAAzB,mBAAyB;cAAzB,0BAAyB;MACzB,6BAAQ;UAAR,kBAAQ;cAAR,SAAQ,EACT;EAGH;IvCvDA,gCHH6C;IGI7C,mCAAkC;IAClC,oCAAmC;IAYnC,mBHmCoB;IGlCpB,iBAAa;IACb,uBHoCuB;IGnCvB,kBHiCmB;I0CQjB,iBAAgB;IAChB,wBAAuB;IACvB,oBAAmB;IACnB,UAAS;IACT,oBAAmB,EACpB;;AAGH;EACE,gBAAe;EACf,OAAM;EACN,QAAO;EACP,WAAU;EjD1DV,2HDXsC,EkDwEvC;;AAID;EACE,iBA5E2B,EAiF5B;EAHC;IAHF;MAII,iBA9EgC,EAgFnC,EAAA;;AAED;EACE,oBAAU;MAAV,eAAU;UAAV,WAAU,EACX;;A1C/ED,mEAAmE;AAEnE,yEAAyE;AAFzE,mEAAmE;AAEnE,yEAAyE;A2CVzE;ECAE,gC5CH6C;E4CI7C,mCAAkC;EAClC,oCAAmC,EDApC;;AAGC;ECLA,gC5CH6C;E4CI7C,mCAAkC;EAClC,oCAAmC;EAYnC,gB5CAiB;E4CCjB,iBAAa;EACb,wB5CCwB;E4CAxB,kB5CFmB,E2CRlB;;AAED;ECYA,gC5CHgC,E2CP/B;;AAND;ECLA,gC5CH6C;E4CI7C,mCAAkC;EAClC,oCAAmC;EAYnC,kB5COmB;E4CNnB,iBAAa;EACb,wB5CQwB;E4CPxB,oB5CKqB,E2CfpB;;AAED;ECYA,4B5CI4B,E2Cd3B;;AAND;ECLA,gC5CH6C;E4CI7C,mCAAkC;EAClC,oCAAmC;EAYnC,oB5CcqB;E4CbrB,iBAAa;EACb,uB5CewB;E4CdxB,kB5CYmB,E2CtBlB;;AAED;ECYA,+B5CW8B,E2CrB7B;;AAND;ECLA,gC5CH6C;E4CI7C,mCAAkC;EAClC,oCAAmC;EAYnC,oB5CqBqB;E4CpBrB,iBAAa;EACb,uB5CsBwB;E4CrBxB,oB5CmBqB,E2C7BpB;;AAED;ECYA,+B5CkB8B,E2C5B7B;;AAND;ECLA,gC5CH6C;E4CI7C,mCAAkC;EAClC,oCAAmC;EAYnC,kB5C4BmB;E4C3BnB,iBAAa;EACb,uB5C6BwB;E4C5BxB,kB5C0BmB,E2CpClB;;AAED;ECYA,+B5CyB8B,E2CnC7B;;AAND;ECLA,gC5CH6C;E4CI7C,mCAAkC;EAClC,oCAAmC;EAYnC,mB5CmCoB;E4ClCpB,iBAAa;EACb,uB5CoCuB;E4CnCvB,kB5CiCmB,E2C3ClB;;AAED;ECYA,+B5CgC8B,E2C1C7B;;AAND;ECLA,gC5CH6C;E4CI7C,mCAAkC;EAClC,oCAAmC;EAYnC,gB5C0CiB;E4CzCjB,iBAAa;EACb,uB5C2CuB;E4C1CvB,qB5CwCsB,E2ClDrB;;AAED;ECYA,+B5CuC8B,E2CjD7B;;AAND;ECLA,gC5CH6C;E4CI7C,mCAAkC;EAClC,oCAAmC;EAYnC,oB5CiDoB;E4ChDpB,iBAAa;EACb,uB5CkDuB;E4CjDvB,oB5C+CqB,E2CzDpB;;AAED;ECYA,qC5C8CmC,E2CxDlC;;AAND;ECLA,gC5CH6C;E4CI7C,mCAAkC;EAClC,oCAAmC;EAYnC,oB5CwDoB;E4CvDpB,iBAAa;EACb,uB5CyDuB;E4CxDvB,oB5CsDqB,E2ChEpB;;AAED;ECYA,6B5CqD4B,E2C/D3B;;AAND;ECLA,gC5CH6C;E4CI7C,mCAAkC;EAClC,oCAAmC;EAYnC,oB5C+DoB;E4C9DpB,iBAAa;EACb,uB5CgEuB;E4C/DvB,qB5C6DsB,E2CvErB;;AAED;ECYA,6B5C4D4B,E2CtE3B;;AAND;ECLA,gC5CH6C;E4CI7C,mCAAkC;EAClC,oCAAmC;EAYnC,mB5CsEmB;E4CrEnB,iBAAa;EACb,uB5CuEuB;E4CtEvB,qB5CoEsB,E2C9ErB;;AAED;ECYA,+B5CmE8B,E2C7E7B","file":"material-components-web.scss","sourcesContent":["//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./mixins\";\n\n.mdc-animation {\n  &-linear-out-slow-in {\n    @include mdc-animation-linear-out-slow-in;\n  }\n\n  &-fast-out-slow-in {\n    @include mdc-animation-fast-out-slow-in;\n  }\n\n  &-fast-out-linear-in {\n    @include mdc-animation-fast-out-linear-in;\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n@mixin mdc-animation-linear-out-slow-in {\n  animation-timing-function: $mdc-animation-linear-out-slow-in-timing-function;\n}\n\n@mixin mdc-animation-fast-out-slow-in {\n  animation-timing-function: $mdc-animation-fast-out-slow-in-timing-function;\n}\n\n@mixin mdc-animation-fast-out-linear-in {\n  animation-timing-function: $mdc-animation-fast-out-linear-in-timing-function;\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n$mdc-animation-linear-out-slow-in-timing-function: cubic-bezier(0, 0, .2, 1) !default;\n$mdc-animation-fast-out-slow-in-timing-function: cubic-bezier(.4, 0, .2, 1) !default;\n$mdc-animation-fast-out-linear-in-timing-function: cubic-bezier(.4, 0, 1, 1) !default;\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/variables\";\n\n$mdc-elevation-umbra-color: rgba(black, .2);\n$mdc-elevation-penumbra-color: rgba(black, .14);\n$mdc-elevation-ambient-color: rgba(black, .12);\n\n$mdc-elevation-umbra-map: (\n  0: \"0px 0px 0px 0px\",\n  1: \"0px 2px 1px -1px\",\n  2: \"0px 3px 1px -2px\",\n  3: \"0px 3px 3px -2px\",\n  4: \"0px 2px 4px -1px\",\n  5: \"0px 3px 5px -1px\",\n  6: \"0px 3px 5px -1px\",\n  7: \"0px 4px 5px -2px\",\n  8: \"0px 5px 5px -3px\",\n  9: \"0px 5px 6px -3px\",\n  10: \"0px 6px 6px -3px\",\n  11: \"0px 6px 7px -4px\",\n  12: \"0px 7px 8px -4px\",\n  13: \"0px 7px 8px -4px\",\n  14: \"0px 7px 9px -4px\",\n  15: \"0px 8px 9px -5px\",\n  16: \"0px 8px 10px -5px\",\n  17: \"0px 8px 11px -5px\",\n  18: \"0px 9px 11px -5px\",\n  19: \"0px 9px 12px -6px\",\n  20: \"0px 10px 13px -6px\",\n  21: \"0px 10px 13px -6px\",\n  22: \"0px 10px 14px -6px\",\n  23: \"0px 11px 14px -7px\",\n  24: \"0px 11px 15px -7px\"\n);\n\n$mdc-elevation-penumbra-map: (\n  0: \"0px 0px 0px 0px\",\n  1: \"0px 1px 1px 0px\",\n  2: \"0px 2px 2px 0px\",\n  3: \"0px 3px 4px 0px\",\n  4: \"0px 4px 5px 0px\",\n  5: \"0px 5px 8px 0px\",\n  6: \"0px 6px 10px 0px\",\n  7: \"0px 7px 10px 1px\",\n  8: \"0px 8px 10px 1px\",\n  9: \"0px 9px 12px 1px\",\n  10: \"0px 10px 14px 1px\",\n  11: \"0px 11px 15px 1px\",\n  12: \"0px 12px 17px 2px\",\n  13: \"0px 13px 19px 2px\",\n  14: \"0px 14px 21px 2px\",\n  15: \"0px 15px 22px 2px\",\n  16: \"0px 16px 24px 2px\",\n  17: \"0px 17px 26px 2px\",\n  18: \"0px 18px 28px 2px\",\n  19: \"0px 19px 29px 2px\",\n  20: \"0px 20px 31px 3px\",\n  21: \"0px 21px 33px 3px\",\n  22: \"0px 22px 35px 3px\",\n  23: \"0px 23px 36px 3px\",\n  24: \"0px 24px 38px 3px\"\n);\n\n$mdc-elevation-ambient-map: (\n  0: \"0px 0px 0px 0px\",\n  1: \"0px 1px 3px 0px\",\n  2: \"0px 1px 5px 0px\",\n  3: \"0px 1px 8px 0px\",\n  4: \"0px 1px 10px 0px\",\n  5: \"0px 1px 14px 0px\",\n  6: \"0px 1px 18px 0px\",\n  7: \"0px 2px 16px 1px\",\n  8: \"0px 3px 14px 2px\",\n  9: \"0px 3px 16px 2px\",\n  10: \"0px 4px 18px 3px\",\n  11: \"0px 4px 20px 3px\",\n  12: \"0px 5px 22px 4px\",\n  13: \"0px 5px 24px 4px\",\n  14: \"0px 5px 26px 4px\",\n  15: \"0px 6px 28px 5px\",\n  16: \"0px 6px 30px 5px\",\n  17: \"0px 6px 32px 5px\",\n  18: \"0px 7px 34px 6px\",\n  19: \"0px 7px 36px 6px\",\n  20: \"0px 8px 38px 7px\",\n  21: \"0px 8px 40px 7px\",\n  22: \"0px 8px 42px 7px\",\n  23: \"0px 9px 44px 8px\",\n  24: \"0px 9px 46px 8px\"\n);\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n$mdc-elevation-property: box-shadow !default;\n\n/**\n * The default duration value for elevation transitions.\n */\n$mdc-elevation-transition-duration: 280ms !default;\n\n/**\n * The default easing value for elevation transitions.\n */\n$mdc-elevation-transition-timing-function: $mdc-animation-fast-out-slow-in-timing-function !default;\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n@mixin mdc-elevation($z-value) {\n  @if type-of($z-value) != number or not unitless($z-value) {\n    @error \"$z-value must be a unitless number\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24\";\n  }\n\n  #{$mdc-elevation-property}:\n    #{map-get($mdc-elevation-umbra-map, $z-value)} $mdc-elevation-umbra-color,\n    #{map-get($mdc-elevation-penumbra-map, $z-value)} $mdc-elevation-penumbra-color,\n    #{map-get($mdc-elevation-ambient-map, $z-value)} $mdc-elevation-ambient-color;\n}\n\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n@function mdc-elevation-transition-rule(\n  $duration: $mdc-elevation-transition-duration,\n  $easing: $mdc-elevation-transition-timing-function) {\n  @return #{$mdc-elevation-property} #{$duration} #{$easing};\n}\n\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mdc-elevation-transition(\n  $duration: $mdc-elevation-transition-duration,\n  $easing: $mdc-elevation-transition-timing-function) {\n  transition: mdc-elevation-transition-rule($duration, $easing);\n  will-change: $mdc-elevation-property;\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n$mdc-theme-linear-channel-values:\n  0\n  .0003035269835488375\n  .000607053967097675\n  .0009105809506465125\n  .00121410793419535\n  .0015176349177441874\n  .001821161901293025\n  .0021246888848418626\n  .0024282158683907\n  .0027317428519395373\n  .003035269835488375\n  .003346535763899161\n  .003676507324047436\n  .004024717018496307\n  .004391442037410293\n  .004776953480693729\n  .005181516702338386\n  .005605391624202723\n  .006048833022857054\n  .006512090792594475\n  .006995410187265387\n  .007499032043226175\n  .008023192985384994\n  .008568125618069307\n  .009134058702220787\n  .00972121732023785\n  .010329823029626936\n  .010960094006488246\n  .011612245179743885\n  .012286488356915872\n  .012983032342173012\n  .013702083047289686\n  .014443843596092545\n  .01520851442291271\n  .01599629336550963\n  .016807375752887384\n  .017641954488384078\n  .018500220128379697\n  .019382360956935723\n  .0202885630566524\n  .021219010376003555\n  .022173884793387385\n  .02315336617811041\n  .024157632448504756\n  .02518685962736163\n  .026241221894849898\n  .027320891639074894\n  .028426039504420793\n  .0295568344378088\n  .030713443732993635\n  .03189603307301153\n  .033104766570885055\n  .03433980680868217\n  .03560131487502034\n  .03688945040110004\n  .0382043715953465\n  .03954623527673284\n  .04091519690685319\n  .042311410620809675\n  .043735029256973465\n  .04518620438567554\n  .046665086336880095\n  .04817182422688942\n  .04970656598412723\n  .05126945837404324\n  .052860647023180246\n  .05448027644244237\n  .05612849004960009\n  .05780543019106723\n  .0595112381629812\n  .06124605423161761\n  .06301001765316767\n  .06480326669290577\n  .06662593864377289\n  .06847816984440017\n  .07036009569659588\n  .07227185068231748\n  .07421356838014963\n  .07618538148130785\n  .07818742180518633\n  .08021982031446832\n  .0822827071298148\n  .08437621154414882\n  .08650046203654976\n  .08865558628577294\n  .09084171118340768\n  .09305896284668745\n  .0953074666309647\n  .09758734714186246\n  .09989872824711389\n  .10224173308810132\n  .10461648409110419\n  .10702310297826761\n  .10946171077829933\n  .1119324278369056\n  .11443537382697373\n  .11697066775851084\n  .11953842798834562\n  .12213877222960187\n  .12477181756095049\n  .12743768043564743\n  .1301364766903643\n  .13286832155381798\n  .13563332965520566\n  .13843161503245183\n  .14126329114027164\n  .14412847085805777\n  .14702726649759498\n  .14995978981060856\n  .15292615199615017\n  .1559264637078274\n  .1589608350608804\n  .162029375639111\n  .1651321945016676\n  .16826940018969075\n  .1714411007328226\n  .17464740365558504\n  .17788841598362912\n  .18116424424986022\n  .184474994500441\n  .18782077230067787\n  .19120168274079138\n  .1946178304415758\n  .19806931955994886\n  .20155625379439707\n  .20507873639031693\n  .20863687014525575\n  .21223075741405523\n  .21586050011389926\n  .2195261997292692\n  .2232279573168085\n  .22696587351009836\n  .23074004852434915\n  .23455058216100522\n  .238397573812271\n  .24228112246555486\n  .24620132670783548\n  .25015828472995344\n  .25415209433082675\n  .2581828529215958\n  .26225065752969623\n  .26635560480286247\n  .2704977910130658\n  .27467731206038465\n  .2788942634768104\n  .2831487404299921\n  .2874408377269175\n  .29177064981753587\n  .2961382707983211\n  .3005437944157765\n  .3049873140698863\n  .30946892281750854\n  .31398871337571754\n  .31854677812509186\n  .32314320911295075\n  .3277780980565422\n  .33245153634617935\n  .33716361504833037\n  .3419144249086609\n  .3467040563550296\n  .35153259950043936\n  .3564001441459435\n  .3613067797835095\n  .3662525955988395\n  .3712376804741491\n  .3762621229909065\n  .38132601143253014\n  .386429433787049\n  .39157247774972326\n  .39675523072562685\n  .4019777798321958\n  .4072402119017367\n  .41254261348390375\n  .4178850708481375\n  .4232676699860717\n  .4286904966139066\n  .43415363617474895\n  .4396571738409188\n  .44520119451622786\n  .45078578283822346\n  .45641102318040466\n  .4620769996544071\n  .467783796112159\n  .47353149614800955\n  .4793201831008268\n  .4851499400560704\n  .4910208498478356\n  .4969329950608704\n  .5028864580325687\n  .5088813208549338\n  .5149176653765214\n  .5209955732043543\n  .5271151257058131\n  .5332764040105052\n  .5394794890121072\n  .5457244613701866\n  .5520114015120001\n  .5583403896342679\n  .5647115057049292\n  .5711248294648731\n  .5775804404296506\n  .5840784178911641\n  .5906188409193369\n  .5972017883637634\n  .6038273388553378\n  .6104955708078648\n  .6172065624196511\n  .6239603916750761\n  .6307571363461468\n  .6375968739940326\n  .6444796819705821\n  .6514056374198242\n  .6583748172794485\n  .665387298282272\n  .6724431569576875\n  .6795424696330938\n  .6866853124353135\n  .6938717612919899\n  .7011018919329731\n  .7083757798916868\n  .7156935005064807\n  .7230551289219693\n  .7304607400903537\n  .7379104087727308\n  .7454042095403874\n  .7529422167760779\n  .7605245046752924\n  .768151147247507\n  .7758222183174236\n  .7835377915261935\n  .7912979403326302\n  .799102738014409\n  .8069522576692516\n  .8148465722161012\n  .8227857543962835\n  .8307698767746546\n  .83879901174074\n  .846873231509858\n  .8549926081242338\n  .8631572134541023\n  .8713671191987972\n  .8796223968878317\n  .8879231178819663\n  .8962693533742664\n  .9046611743911496\n  .9130986517934192\n  .9215818562772946\n  .9301108583754237\n  .938685728457888\n  .9473065367331999\n  .9559733532492861\n  .9646862478944651\n  .9734452903984125\n  .9822505503331171\n  .9911020971138298\n  1;\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./constants\";\n\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n@function mdc-theme-luminance($color) {\n  $red: nth($mdc-theme-linear-channel-values, red($color) + 1);\n  $green: nth($mdc-theme-linear-channel-values, green($color) + 1);\n  $blue: nth($mdc-theme-linear-channel-values, blue($color) + 1);\n\n  @return .2126 * $red + .7152 * $green + .0722 * $blue;\n}\n\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n@function mdc-theme-contrast($back, $front) {\n  $backLum: mdc-theme-luminance($back) + .05;\n  $foreLum: mdc-theme-luminance($front) + .05;\n\n  @return max($backLum, $foreLum) / min($backLum, $foreLum);\n}\n\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n@function mdc-theme-light-or-dark($color) {\n  $minimumContrast: 3.1;\n\n  $lightContrast: mdc-theme-contrast($color, white);\n  $darkContrast: mdc-theme-contrast($color, rgba(black, .87));\n\n  @if ($lightContrast < $minimumContrast) and ($darkContrast > $lightContrast) {\n    @return \"dark\";\n  }\n\n  @else {\n    @return \"light\";\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./functions\";\n\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n$mdc-theme-primary: #3f51b5 !default; /* Indigo 500 */\n$mdc-theme-accent: #ff4081 !default; /* Pink A200 */\n$mdc-theme-background: #fff !default; /* White */\n\n/* Which set of text colors to use for each main theme color (light or dark) */\n$mdc-theme-primary-tone: mdc-theme-light-or-dark($mdc-theme-primary);\n$mdc-theme-accent-tone: mdc-theme-light-or-dark($mdc-theme-accent);\n$mdc-theme-background-tone: mdc-theme-light-or-dark($mdc-theme-background);\n\n/* Text colors according to light vs dark and text type */\n$mdc-theme-text-colors: (\n  dark: (\n    primary: rgba(black, .87),\n    secondary: rgba(black, .54),\n    hint: rgba(black, .38),\n    disabled: rgba(black, .38),\n    icon: rgba(black, .38)\n  ),\n  light: (\n    primary: white,\n    secondary: rgba(white, .7),\n    hint: rgba(white, .5),\n    disabled: rgba(white, .5),\n    icon: rgba(white, .5)\n  )\n);\n\n/* Primary text colors for each of the theme colors */\n$mdc-theme-property-values: (\n  primary: $mdc-theme-primary,\n  accent: $mdc-theme-accent,\n  background: $mdc-theme-background,\n  text-primary-on-primary: map-get(map-get($mdc-theme-text-colors, $mdc-theme-primary-tone), primary),\n  text-secondary-on-primary: map-get(map-get($mdc-theme-text-colors, $mdc-theme-primary-tone), secondary),\n  text-hint-on-primary: map-get(map-get($mdc-theme-text-colors, $mdc-theme-primary-tone), hint),\n  text-disabled-on-primary: map-get(map-get($mdc-theme-text-colors, $mdc-theme-primary-tone), disabled),\n  text-icon-on-primary: map-get(map-get($mdc-theme-text-colors, $mdc-theme-primary-tone), icon),\n  text-primary-on-accent: map-get(map-get($mdc-theme-text-colors, $mdc-theme-accent-tone), primary),\n  text-secondary-on-accent: map-get(map-get($mdc-theme-text-colors, $mdc-theme-accent-tone), secondary),\n  text-hint-on-accent: map-get(map-get($mdc-theme-text-colors, $mdc-theme-accent-tone), hint),\n  text-disabled-on-accent: map-get(map-get($mdc-theme-text-colors, $mdc-theme-accent-tone), disabled),\n  text-icon-on-accent: map-get(map-get($mdc-theme-text-colors, $mdc-theme-accent-tone), icon),\n  text-primary-on-background: map-get(map-get($mdc-theme-text-colors, $mdc-theme-background-tone), primary),\n  text-secondary-on-background: map-get(map-get($mdc-theme-text-colors, $mdc-theme-background-tone), secondary),\n  text-hint-on-background: map-get(map-get($mdc-theme-text-colors, $mdc-theme-background-tone), hint),\n  text-disabled-on-background: map-get(map-get($mdc-theme-text-colors, $mdc-theme-background-tone), disabled),\n  text-icon-on-background: map-get(map-get($mdc-theme-text-colors, $mdc-theme-background-tone), icon),\n  text-primary-on-light: map-get(map-get($mdc-theme-text-colors, dark), primary),\n  text-secondary-on-light: map-get(map-get($mdc-theme-text-colors, dark), secondary),\n  text-hint-on-light: map-get(map-get($mdc-theme-text-colors, dark), hint),\n  text-disabled-on-light: map-get(map-get($mdc-theme-text-colors, dark), disabled),\n  text-icon-on-light: map-get(map-get($mdc-theme-text-colors, dark), icon),\n  text-primary-on-dark: map-get(map-get($mdc-theme-text-colors, light), primary),\n  text-secondary-on-dark: map-get(map-get($mdc-theme-text-colors, light), secondary),\n  text-hint-on-dark: map-get(map-get($mdc-theme-text-colors, light), hint),\n  text-disabled-on-dark: map-get(map-get($mdc-theme-text-colors, light), disabled),\n  text-icon-on-dark: map-get(map-get($mdc-theme-text-colors, light), icon)\n);\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n\n@import \"@material/animation/variables\";\n\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    // NOTE: For these keyframes, we do not need custom property fallbacks because they are only\n    // used in conjunction with `.mdc-ripple-upgraded`. Since MDCRippleFoundation checks to ensure\n    // that custom properties are supported within the browser before adding this class, we can\n    // safely use them without a fallback.\n    transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    animation-timing-function: $mdc-animation-fast-out-slow-in-timing-function;\n  }\n\n  to {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n  }\n}\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    animation-timing-function: linear;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    animation-timing-function: linear;\n  }\n\n  to {\n    opacity: 0;\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./functions\";\n\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n$mdc-theme-primary: #3f51b5 !default; /* Indigo 500 */\n$mdc-theme-accent: #ff4081 !default; /* Pink A200 */\n$mdc-theme-background: #fff !default; /* White */\n\n/* Which set of text colors to use for each main theme color (light or dark) */\n$mdc-theme-primary-tone: mdc-theme-light-or-dark($mdc-theme-primary);\n$mdc-theme-accent-tone: mdc-theme-light-or-dark($mdc-theme-accent);\n$mdc-theme-background-tone: mdc-theme-light-or-dark($mdc-theme-background);\n\n/* Text colors according to light vs dark and text type */\n$mdc-theme-text-colors: (\n  dark: (\n    primary: rgba(black, .87),\n    secondary: rgba(black, .54),\n    hint: rgba(black, .38),\n    disabled: rgba(black, .38),\n    icon: rgba(black, .38)\n  ),\n  light: (\n    primary: white,\n    secondary: rgba(white, .7),\n    hint: rgba(white, .5),\n    disabled: rgba(white, .5),\n    icon: rgba(white, .5)\n  )\n);\n\n/* Primary text colors for each of the theme colors */\n$mdc-theme-property-values: (\n  primary: $mdc-theme-primary,\n  accent: $mdc-theme-accent,\n  background: $mdc-theme-background,\n  text-primary-on-primary: map-get(map-get($mdc-theme-text-colors, $mdc-theme-primary-tone), primary),\n  text-secondary-on-primary: map-get(map-get($mdc-theme-text-colors, $mdc-theme-primary-tone), secondary),\n  text-hint-on-primary: map-get(map-get($mdc-theme-text-colors, $mdc-theme-primary-tone), hint),\n  text-disabled-on-primary: map-get(map-get($mdc-theme-text-colors, $mdc-theme-primary-tone), disabled),\n  text-icon-on-primary: map-get(map-get($mdc-theme-text-colors, $mdc-theme-primary-tone), icon),\n  text-primary-on-accent: map-get(map-get($mdc-theme-text-colors, $mdc-theme-accent-tone), primary),\n  text-secondary-on-accent: map-get(map-get($mdc-theme-text-colors, $mdc-theme-accent-tone), secondary),\n  text-hint-on-accent: map-get(map-get($mdc-theme-text-colors, $mdc-theme-accent-tone), hint),\n  text-disabled-on-accent: map-get(map-get($mdc-theme-text-colors, $mdc-theme-accent-tone), disabled),\n  text-icon-on-accent: map-get(map-get($mdc-theme-text-colors, $mdc-theme-accent-tone), icon),\n  text-primary-on-background: map-get(map-get($mdc-theme-text-colors, $mdc-theme-background-tone), primary),\n  text-secondary-on-background: map-get(map-get($mdc-theme-text-colors, $mdc-theme-background-tone), secondary),\n  text-hint-on-background: map-get(map-get($mdc-theme-text-colors, $mdc-theme-background-tone), hint),\n  text-disabled-on-background: map-get(map-get($mdc-theme-text-colors, $mdc-theme-background-tone), disabled),\n  text-icon-on-background: map-get(map-get($mdc-theme-text-colors, $mdc-theme-background-tone), icon),\n  text-primary-on-light: map-get(map-get($mdc-theme-text-colors, dark), primary),\n  text-secondary-on-light: map-get(map-get($mdc-theme-text-colors, dark), secondary),\n  text-hint-on-light: map-get(map-get($mdc-theme-text-colors, dark), hint),\n  text-disabled-on-light: map-get(map-get($mdc-theme-text-colors, dark), disabled),\n  text-icon-on-light: map-get(map-get($mdc-theme-text-colors, dark), icon),\n  text-primary-on-dark: map-get(map-get($mdc-theme-text-colors, light), primary),\n  text-secondary-on-dark: map-get(map-get($mdc-theme-text-colors, light), secondary),\n  text-hint-on-dark: map-get(map-get($mdc-theme-text-colors, light), hint),\n  text-disabled-on-dark: map-get(map-get($mdc-theme-text-colors, light), disabled),\n  text-icon-on-dark: map-get(map-get($mdc-theme-text-colors, light), icon)\n);\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n@mixin mdc-theme-prop($property, $style, $important: false) {\n  @if not map-has-key($mdc-theme-property-values, $style) {\n    @error \"Invalid style specified! Choose one of #{map-keys($mdc-theme-property-values)}\";\n  }\n\n  @if $important {\n    #{$property}: map-get($mdc-theme-property-values, $style) !important;\n    #{$property}: var(--mdc-theme-#{$style}, map-get($mdc-theme-property-values, $style)) !important;\n  }\n\n  @else {\n    #{$property}: map-get($mdc-theme-property-values, $style);\n    #{$property}: var(--mdc-theme-#{$style}, map-get($mdc-theme-property-values, $style));\n  }\n}\n\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n@mixin mdc-theme-dark($root-selector: null, $compound: false) {\n  @if ($root-selector) {\n    @at-root {\n      @if ($compound) {\n        #{$root-selector}--theme-dark#{&},\n        .mdc-theme--dark & {\n          @content;\n        }\n      }\n\n      @else {\n        #{$root-selector}--theme-dark &,\n        .mdc-theme--dark & {\n          @content;\n        }\n      }\n    }\n  }\n\n  @else {\n    &--theme-dark,\n    .mdc-theme--dark & {\n      @content;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n$mdc-typography-font-family: Roboto, sans-serif !default;\n\n$mdc-typography-font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900\n) !default;\n\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n\n$mdc-typography-styles: (\n  display4: (\n    font-size: 7rem, /* 112sp */\n    line-height: 7rem, /* 112sp */\n    font-weight: map-get($mdc-typography-font-weight-values, light),\n    letter-spacing: -.04em,\n    margin: -1rem 0 3.5rem -.085em /* -16sp 0 56sp -.085em */\n  ),\n  display3: (\n    font-size: 3.5rem, /* 56px */\n    line-height: 3.5rem, /* 56px */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: -.02em,\n    margin: -8px 0 64px -.07em\n  ),\n  display2: (\n    font-size: 2.813rem, /* 45px */\n    line-height: 3rem, /* 48px */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: normal,\n    margin: -.5rem 0 4rem -.07em /* -8sp 0 64sp -.07em */\n  ),\n  display1: (\n    font-size: 2.125rem, /* 34sp */\n    line-height: 2.5rem, /* 40sp */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: normal,\n    margin: -.5rem 0 4rem -.07em /* -8sp 0 64sp -.07em */\n  ),\n  headline: (\n    font-size: 1.5rem, /* 24sp */\n    line-height: 2rem, /* 32sp */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: normal,\n    margin: -.5rem 0 1rem -.06em /* -8sp 0 16sp -.06em */\n  ),\n  title: (\n    font-size: 1.25rem, /* 20sp */\n    line-height: 2rem, /* 32sp */\n    font-weight: map-get($mdc-typography-font-weight-values, medium),\n    letter-spacing: .02em,\n    margin: -.5rem 0 1rem -.05em /* -8sp 0 16sp -.05em */\n  ),\n  subheading2: (\n    font-size: 1rem, /* 16sp */\n    line-height: 1.75rem, /* 28sp */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: .04em,\n    margin: -.5rem 0 1rem -.06em /* -8sp 0 16sp -.06em */\n  ),\n  subheading1: (\n    font-size: .938rem, /* 15sp */\n    line-height: 1.5rem, /* 24sp */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: .04em,\n    margin: -.313rem 0 .813rem -.06em /* -5sp 0 13sp -.06em */\n  ),\n  body2: (\n    font-size: .875rem, /* 14sp */\n    line-height: 1.5rem, /* 24sp */\n    font-weight: map-get($mdc-typography-font-weight-values, medium),\n    letter-spacing: .04em,\n    margin: -.25rem 0 .75rem 0 /* -4sp 0 12sp 0 */\n  ),\n  body1: (\n    font-size: .875rem, /* 14sp */\n    line-height: 1.25rem, /* 20sp */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: .04em,\n    margin: -.25rem 0 .75rem 0 /* -4sp 0 12sp 0 */\n  ),\n  caption: (\n    font-size: .75rem, /* 12sp */\n    line-height: 1.25rem, /* 20sp */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: .08em,\n    margin: -.5rem 0 1rem -.04em /* -8sp 0 16sp -.04em */\n  )\n) !default;\n","//\n// Copyright 2016 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/variables\";\n@import \"@material/animation/functions\";\n@import \"@material/elevation/mixins\";\n@import \"@material/ripple/mixins\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n\n// postcss-bem-linter: define button\n\n.mdc-button {\n  @include mdc-ripple-base;\n  @include mdc-ripple-bg((pseudo: \"::before\"));\n  @include mdc-ripple-fg((pseudo: \"::after\"));\n  @include mdc-typography(body2);\n  @include mdc-theme-prop(color, text-primary-on-light);\n\n  display: inline-block;\n  position: relative;\n  min-width: 64px;\n  height: 36px;\n  padding: 0 16px;\n  border: none;\n  border-radius: 2px;\n  outline: none;\n  background: transparent;\n  font-size: 14px; // Override font to specifically be px as spec defined pt\n  font-weight: 500;\n  line-height: 36px; // Override line-height so text aligns centered\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  overflow: hidden;\n  vertical-align: middle;\n  user-select: none;\n  box-sizing: border-box;\n  -webkit-appearance: none;\n\n  &:not(.mdc-ripple-upgraded) {\n    -webkit-tap-highlight-color: rgba(black, .18);\n  }\n\n  @include mdc-theme-dark {\n    @include mdc-ripple-base;\n    @include mdc-ripple-bg((pseudo: \"::before\", base-color: white, opacity: .14));\n    @include mdc-ripple-fg((pseudo: \"::after\", base-color: white, opacity: .14));\n    @include mdc-theme-prop(color, text-primary-on-dark);\n\n    &:not(.mdc-ripple-upgraded) {\n      -webkit-tap-highlight-color: rgba(white, .18);\n    }\n  }\n\n  @each $theme-style in (primary, accent) {\n    &.mdc-button--#{$theme-style} {\n      @include mdc-ripple-base;\n      @include mdc-ripple-bg((pseudo: \"::before\", theme-style: $theme-style, opacity: .12));\n      @include mdc-ripple-fg((pseudo: \"::after\", theme-style: $theme-style, opacity: .12));\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  &:active {\n    outline: none;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &::-moz-focus-inner {\n    padding: 0;\n    border: 0;\n  }\n\n  &--dense {\n    height: 32px;\n    font-size: .8125rem; // 13sp\n    line-height: 32px;\n  }\n\n  // TODO(cristobalchao): Disable ink wash on hover and alter elevation instead for raised surfaces.\n  &--raised {\n    @include mdc-elevation(2);\n    @include mdc-elevation-transition;\n\n    min-width: 88px;\n\n    &:active {\n      @include mdc-elevation(8);\n    }\n\n    @each $theme-style in (primary, accent) {\n      &.mdc-button--#{$theme-style} {\n        @include mdc-ripple-base;\n        @include mdc-ripple-bg((pseudo: \"::before\", base-color: white, opacity: .14));\n        @include mdc-ripple-fg((pseudo: \"::after\", base-color: white, opacity: .14));\n      }\n    }\n\n    @include mdc-theme-dark(\".mdc-button\") {\n      @include mdc-theme-prop(background-color, primary);\n\n      // postcss-bem-linter: ignore\n      &::before {\n        // We are explicitly not fully adhering to Material Design here.\n        // This should be the 700-shade when active instead of a black shade.\n        // Due to the complexity involved in adhering fully it is being ignored.\n        // Instead re-using the existing architecture for shading works just fine.\n        color: black;\n      }\n    }\n  }\n\n  &--primary {\n    @include mdc-theme-prop(color, primary);\n\n    @include mdc-theme-dark(\".mdc-button\") {\n      @include mdc-theme-prop(color, primary);\n    }\n\n    // postcss-bem-linter: ignore\n    &.mdc-button--raised {\n      @include mdc-theme-prop(background-color, primary);\n      @include mdc-theme-prop(color, text-primary-on-primary);\n\n      // postcss-bem-linter: ignore\n      &::before {\n        color: black;\n      }\n    }\n  }\n\n  &--accent {\n    @include mdc-theme-prop(color, accent);\n\n    @include mdc-theme-dark(\".mdc-button\") {\n      @include mdc-theme-prop(color, accent);\n    }\n\n    // postcss-bem-linter: ignore\n    &.mdc-button--raised {\n      @include mdc-theme-prop(background-color, accent);\n      @include mdc-theme-prop(color, text-primary-on-accent);\n\n      // postcss-bem-linter: ignore\n      &::before {\n        color: black;\n      }\n    }\n  }\n\n  &--compact {\n    padding: 0 8px;\n  }\n\n  fieldset:disabled &,\n  &:disabled {\n    color: rgba(0, 0, 0, .26);\n    cursor: default;\n    pointer-events: none;\n\n    @include mdc-theme-dark(\".mdc-button\") {\n      color: rgba(255, 255, 255, .3);\n    }\n  }\n\n  fieldset:disabled &--raised,\n  &--raised:disabled {\n    @include mdc-elevation(0);\n\n    background-color: rgba(0, 0, 0, .12);\n    pointer-events: none;\n\n    @include mdc-theme-dark(\".mdc-button\") {\n      background-color: rgba(255, 255, 255, .12);\n    }\n  }\n}\n\n// postcss-bem-linter: end\n","//\n// Copyright 2016 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/variables\";\n@import \"@material/theme/variables\";\n@import \"./keyframes\";\n\n@function mdc-ripple-default-config_() {\n  @return (\n    pseudo: null,\n    radius: 100%,\n    base-color: black,\n    opacity: .06,\n    theme-style: null\n  );\n}\n\n@mixin mdc-ripple-base() {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n\n  &:not(.mdc-ripple-upgraded) {\n    &:hover::before,\n    &:focus::before,\n    &:active::after {\n      transition-duration: 85ms;\n      opacity: .6;\n    }\n  }\n}\n\n@mixin mdc-ripple-color_($config) {\n  $base-color: map-get($config, base-color);\n  $opacity: map-get($config, opacity);\n  $theme-style: map-get($config, theme-style);\n\n  // stylelint-disable at-rule-empty-line-before, block-closing-brace-newline-after\n  @if ($theme-style) {\n    $theme-value: map-get($mdc-theme-property-values, $theme-style);\n    $css-var: $theme-value;\n    $css-var: var(--mdc-theme-#{$theme-style}, $theme-value);\n\n    background-color: rgba($theme-value, $opacity);\n\n    // See: https://drafts.csswg.org/css-color/#modifying-colors\n    // While this is currently unsupported as of now, it will begin to work by default as browsers\n    // begin to implement the CSS 4 color spec.\n    @supports (background-color: color(green a(10%))) {\n      background-color: color(#{$css-var} a(#{percentage($opacity)}));\n    }\n  } @else {\n    background-color: rgba($base-color, $opacity);\n  }\n\n  // stylelint-enable at-rule-empty-line-before, block-closing-brace-newline-after\n}\n\n@mixin mdc-ripple-bg-base_($config) {\n  $radius: map-get($config, radius);\n\n  @include mdc-ripple-color_($config);\n\n  position: absolute;\n  top: calc(50% - #{$radius});\n  left: calc(50% - #{$radius});\n  width: $radius * 2;\n  height: $radius * 2;\n  transition: opacity 250ms linear;\n  border-radius: 50%;\n  opacity: 0;\n  pointer-events: none;\n}\n\n@mixin mdc-ripple-bg($config: ()) {\n  $config: map-merge(mdc-ripple-default-config_(), $config);\n  $pseudo: map-get($config, pseudo);\n  $radius: map-get($config, radius);\n\n  // stylelint-disable at-rule-empty-line-before, block-closing-brace-newline-after\n  @if ($pseudo) {\n    &#{$pseudo} {\n      @include mdc-ripple-bg-base_($config);\n\n      content: \"\";\n    }\n  } @else {\n    @include mdc-ripple-bg-base_($config);\n  }\n  // stylelint-enable at-rule-empty-line-before, block-closing-brace-newline-after\n\n  &.mdc-ripple-upgraded#{$pseudo} {\n    top: calc(50% - #{$radius});\n    left: calc(50% - #{$radius});\n    width: $radius * 2;\n    height: $radius * 2;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0));\n  }\n\n  &.mdc-ripple-upgraded--background-focused#{$pseudo} {\n    opacity: .99999;\n  }\n\n  &.mdc-ripple-upgraded--background-active-fill#{$pseudo} {\n    transition-duration: 120ms;\n    opacity: 1;\n  }\n\n  &.mdc-ripple-upgraded--unbounded#{$pseudo} {\n    top: calc(50% - #{$radius / 2});\n    top: var(--mdc-ripple-top, calc(50% - #{$radius / 2}));\n    left: calc(50% - #{$radius / 2});\n    left: var(--mdc-ripple-left, calc(50% - #{$radius / 2}));\n    width: $radius;\n    width: var(--mdc-ripple-fg-size, $radius);\n    height: $radius;\n    height: var(--mdc-ripple-fg-size, $radius);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0));\n  }\n}\n\n@mixin mdc-ripple-fg-base_($config) {\n  $radius: map-get($config, radius);\n\n  @include mdc-ripple-color_($config);\n\n  position: absolute;\n  top: calc(50% - #{$radius});\n  left: calc(50% - #{$radius});\n  width: $radius * 2;\n  height: $radius * 2;\n  transition: opacity 250ms linear;\n  border-radius: 50%;\n  opacity: 0;\n  pointer-events: none;\n}\n\n@mixin mdc-ripple-fg($config: ()) {\n  $config: map-merge(mdc-ripple-default-config_(), $config);\n  $pseudo: map-get($config, pseudo);\n  $radius: map-get($config, radius);\n\n  // stylelint-disable at-rule-empty-line-before, block-closing-brace-newline-after\n  @if ($pseudo) {\n    &#{$pseudo} {\n      @include mdc-ripple-fg-base_($config);\n\n      content: \"\";\n    }\n  } @else {\n    @include mdc-ripple-fg-base_($config);\n  }\n  // stylelint-enable at-rule-empty-line-before, block-closing-brace-newline-after\n\n  &.mdc-ripple-upgraded {\n    &#{$pseudo} {\n      top: 0;\n      left: 0;\n      width: $radius;\n      width: var(--mdc-ripple-fg-size, $radius);\n      height: $radius;\n      height: var(--mdc-ripple-fg-size, $radius);\n      transform: scale(0);\n      transform-origin: center center;\n      opacity: 0;\n    }\n  }\n\n  &:not(.mdc-ripple-upgraded--unbounded)#{$pseudo} {\n    transform-origin: center center;\n  }\n\n  &.mdc-ripple-upgraded--unbounded#{$pseudo} {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: $radius;\n    width: var(--mdc-ripple-fg-size, $radius);\n    height: $radius;\n    height: var(--mdc-ripple-fg-size, $radius);\n    transform: scale(0);\n    transform-origin: center center;\n  }\n\n  &.mdc-ripple-upgraded--foreground-activation#{$pseudo} {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n  }\n\n  &.mdc-ripple-upgraded--foreground-deactivation#{$pseudo} {\n    // Retain transform from mdc-ripple-fg-radius-in activation\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out;\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n@mixin mdc-typography-base {\n  font-family: $mdc-typography-font-family;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n@mixin mdc-typography($style) {\n  $style-props: map-get($mdc-typography-styles, $style);\n\n  @if not map-has-key($mdc-typography-styles, $style) {\n    @error \"Invalid style specified! Choose one of #{map-keys($mdc-typography-styles)}\";\n  }\n\n  @include mdc-typography-base;\n\n  font-size: map-get($style-props, font-size);\n  font-weight: #{map-get($style-props, font-weight)};\n  letter-spacing: map-get($style-props, letter-spacing);\n  line-height: map-get($style-props, line-height);\n}\n\n@mixin mdc-typography-adjust-margin($style) {\n  margin: map-get(map-get($mdc-typography-styles, $style), margin);\n}\n","// \n// Copyright 2016 Google Inc. All Rights Reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n//      http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/elevation/mixins\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n\n// postcss-bem-linter: define card\n.mdc-card {\n  @include mdc-elevation(2);\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: 0;\n  box-sizing: border-box;\n\n  &__primary {\n    padding: 16px;\n\n    // Add extra space before large title.\n    .mdc-card__title--large {\n      padding-top: 8px;\n    }\n\n    // Add extra padding if this is the last block.\n    &:last-child {\n      padding-bottom: 24px;\n    }\n  }\n\n  &__supporting-text {\n    padding: 8px 16px;\n    box-sizing: border-box;\n\n    @include mdc-typography(body1);\n    @include mdc-theme-prop(color, text-primary-on-background);\n\n    @include mdc-theme-dark(\".mdc-card\") {\n      @include mdc-theme-prop(color, text-primary-on-dark);\n    }\n\n    // Remove top padding if immediately preceded by a primary block.\n    .mdc-card__primary + & {\n      margin-top: -8px;\n      padding-top: 0;\n    }\n\n    // Add extra padding if this is the last block.\n    &:last-child {\n      padding-bottom: 24px;\n    }\n  }\n\n  &__actions {\n    display: flex;\n    padding: 8px;\n    box-sizing: border-box;\n\n    // Adjust text color for dark theme.\n    @include mdc-theme-dark(\".mdc-card\") {\n      @include mdc-theme-prop(color, text-primary-on-dark);\n    }\n\n    // Tweak button paddings and margins when they're used as actions\n    .mdc-card__action {\n      margin: 0 8px 0 0;\n    }\n\n    .mdc-card__action:last-child {\n      margin-right: 0;\n    }\n\n    // Vertical actions (one per line)\n    &--vertical {\n      flex-flow: column;\n      align-items: flex-start;\n\n      .mdc-card__action {\n        margin: 0 0 4px;\n      }\n\n      .mdc-card__action:last-child {\n        margin-bottom: 0;\n      }\n    }\n  }\n\n  &__media {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    padding: 16px;\n    box-sizing: border-box;\n  }\n\n  &__media-item {\n    display: inline-block;\n    width: auto;\n    height: 80px;\n    margin: 16px 0 0;\n    padding: 0;\n\n    @each $mult, $name in (1.5: \"1dot5\", 2: \"2\", 3: \"3\") {\n      // postcss-bem-linter: ignore\n      &--#{$name}x {\n        width: auto;\n        height: $mult * 80px;\n      }\n    }\n  }\n\n  &__title {\n    @include mdc-typography(body2);\n    @include mdc-theme-prop(color, text-primary-on-background);\n\n    // Adjust text color for dark theme.\n    @include mdc-theme-dark(\".mdc-card\") {\n      @include mdc-theme-prop(color, text-primary-on-dark);\n    }\n\n    margin: -.063rem 0; // -1sp 0\n  }\n\n  &__title--large {\n    @include mdc-typography(headline);\n\n    margin: 0;\n  }\n\n  &__subtitle {\n    @include mdc-typography(body1);\n    @include mdc-theme-prop(color, text-primary-on-background);\n\n    // Adjust text color for dark theme.\n    @include mdc-theme-dark(\".mdc-card\") {\n      @include mdc-theme-prop(color, text-primary-on-dark);\n    }\n\n    margin: -.063rem 0; // -1sp 0\n  }\n\n  &__horizontal-block {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-between;\n    padding: 0 16px 0 0;\n    box-sizing: border-box;\n\n    // postcss-bem-linter: ignore\n    .mdc-card__actions--vertical {\n      margin: 16px;\n    }\n\n    .mdc-card__media-item {\n      margin-left: 16px;\n    }\n\n    // postcss-bem-linter: ignore\n    .mdc-card__media-item--3x {\n      margin-bottom: 16px;\n    }\n  }\n}\n\n// postcss-bem-linter: end\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n@mixin mdc-rtl($root-selector: null) {\n  @if ($root-selector) {\n    @at-root {\n      [dir=\"rtl\"] #{$root-selector} &,\n      #{$root-selector}[dir=\"rtl\"] & {\n        @content;\n      }\n    }\n  }\n\n  @else {\n    [dir=\"rtl\"] &,\n    &[dir=\"rtl\"] {\n      @content;\n    }\n  }\n}\n\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n@mixin mdc-rtl-reflexive-box($base-property, $default-direction, $value, $root-selector: null) {\n  @if (index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction #{default-direction}. Please specifiy either right or left\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include mdc-rtl-reflexive-property($base-property, $left-value, $right-value, $root-selector);\n}\n\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n@mixin mdc-rtl-reflexive-property($base-property, $left-value, $right-value, $root-selector: null) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include mdc-rtl-reflexive_($prop-left, $left-value, $prop-right, $right-value, $root-selector);\n}\n\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n@mixin mdc-rtl-reflexive-position($pos, $value, $root-selector: null) {\n  @if (index((right, left), $pos) == null) {\n    @error \"Invalid position #{pos}. Please specifiy either right or left\";\n  }\n\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($pos == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include mdc-rtl-reflexive_(left, $left-value, right, $right-value, $root-selector);\n}\n\n@mixin mdc-rtl-reflexive_(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $root-selector: null\n) {\n  #{$left-property}: $left-value;\n  #{$right-property}: $right-value;\n\n  @include mdc-rtl($root-selector) {\n    #{$left-property}: $right-value;\n    #{$right-property}: $left-value;\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n$mdc-checkbox-mark-color: white !default;\n$mdc-checkbox-border-color: rgba(black, .54) !default;\n$mdc-checkbox-border-color-dark: white !default;\n$mdc-checkbox-disabled-color: rgba(black, .26) !default;\n$mdc-checkbox-disabled-color-dark: rgba(white, .3) !default;\n\n$mdc-checkbox-touch-area: 40px;\n$mdc-checkbox-size: 18px;\n$mdc-checkbox-ui-pct: percentage($mdc-checkbox-size / $mdc-checkbox-touch-area);\n$mdc-checkbox-mark-stroke-size: 2/15 * $mdc-checkbox-size;\n$mdc-checkbox-border-width: 2px;\n$mdc-checkbox-transition-duration: 90ms;\n$mdc-checkbox-item-spacing: 4px;\n\n/* Manual calculation done on SVG */\n$_mdc-checkbox-mark-path-length: 29.7833385;\n$_mdc-checkbox-indeterminate-checked-easing-function: cubic-bezier(.14, 0, 0, 1);\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/theme/mixins\";\n@import \"./variables\";\n\n@keyframes mdc-checkbox-fade-in-background {\n  0% {\n    border-color: $mdc-checkbox-border-color;\n    background-color: transparent;\n  }\n\n  50% {\n    @include mdc-theme-prop(border-color, primary);\n    @include mdc-theme-prop(background-color, primary);\n  }\n}\n\n@keyframes mdc-checkbox-fade-out-background {\n  0%,\n  80% {\n    @include mdc-theme-prop(border-color, primary);\n    @include mdc-theme-prop(background-color, primary);\n  }\n\n  100% {\n    border-color: $mdc-checkbox-border-color;\n    background-color: transparent;\n  }\n}\n\n@keyframes mdc-checkbox-fade-in-background-dark {\n  0% {\n    border-color: $mdc-checkbox-border-color-dark;\n    background-color: transparent;\n  }\n\n  50% {\n    @include mdc-theme-prop(border-color, primary);\n    @include mdc-theme-prop(background-color, primary);\n  }\n}\n\n@keyframes mdc-checkbox-fade-out-background-dark {\n  0%,\n  80% {\n    @include mdc-theme-prop(border-color, primary);\n    @include mdc-theme-prop(background-color, primary);\n  }\n\n  100% {\n    border-color: $mdc-checkbox-border-color-dark;\n    background-color: transparent;\n  }\n}\n\n@keyframes mdc-checkbox-unchecked-checked-checkmark-path {\n  0%,\n  50% {\n    stroke-dashoffset: $_mdc-checkbox-mark-path-length;\n  }\n\n  50% {\n    @include mdc-animation-linear-out-slow-in;\n  }\n\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n\n@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {\n  0%,\n  68.2% {\n    transform: scaleX(0);\n  }\n\n  68.2% {\n    animation-timing-function: cubic-bezier(0, 0, 0, 1);\n  }\n\n  100% {\n    transform: scaleX(1);\n  }\n}\n\n@keyframes mdc-checkbox-checked-unchecked-checkmark-path {\n  from {\n    @include mdc-animation-fast-out-linear-in;\n\n    opacity: 1;\n    stroke-dashoffset: 0;\n  }\n\n  to {\n    opacity: 0;\n    stroke-dashoffset: $_mdc-checkbox-mark-path-length * -1;\n  }\n}\n\n@keyframes mdc-checkbox-checked-indeterminate-checkmark {\n  from {\n    transform: rotate(0deg);\n    opacity: 1;\n\n    @include mdc-animation-linear-out-slow-in;\n  }\n\n  to {\n    transform: rotate(45deg);\n    opacity: 0;\n  }\n}\n\n@keyframes mdc-checkbox-indeterminate-checked-checkmark {\n  from {\n    transform: rotate(45deg);\n    opacity: 0;\n    animation-timing-function: $_mdc-checkbox-indeterminate-checked-easing-function;\n  }\n\n  to {\n    transform: rotate(360deg);\n    opacity: 1;\n  }\n}\n\n@keyframes mdc-checkbox-checked-indeterminate-mixedmark {\n  from {\n    transform: rotate(-45deg);\n    opacity: 0;\n\n    @include mdc-animation-linear-out-slow-in;\n  }\n\n  to {\n    transform: rotate(0deg);\n    opacity: 1;\n  }\n}\n\n@keyframes mdc-checkbox-indeterminate-checked-mixedmark {\n  from {\n    transform: rotate(0deg);\n    opacity: 1;\n    animation-timing-function: $_mdc-checkbox-indeterminate-checked-easing-function;\n  }\n\n  to {\n    transform: rotate(315deg);\n    opacity: 0;\n  }\n}\n\n@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {\n  0% {\n    transform: scaleX(1);\n    opacity: 1;\n    animation-timing-function: linear;\n  }\n\n  32.8%,\n  100% {\n    transform: scaleX(0);\n    opacity: 0;\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n@mixin mdc-animation-linear-out-slow-in {\n  animation-timing-function: $mdc-animation-linear-out-slow-in-timing-function;\n}\n\n@mixin mdc-animation-fast-out-slow-in {\n  animation-timing-function: $mdc-animation-fast-out-slow-in-timing-function;\n}\n\n@mixin mdc-animation-fast-out-linear-in {\n  animation-timing-function: $mdc-animation-fast-out-linear-in-timing-function;\n}\n","//\n// Copyright 2016 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/functions\";\n@import \"@material/animation/mixins\";\n@import \"@material/ripple/mixins\";\n@import \"@material/rtl/mixins\";\n@import \"./variables\";\n@import \"./keyframes\";\n\n@function mdc-checkbox-transition($property, $timing-function, $delay: 0ms, $duration: $mdc-checkbox-transition-duration) {\n  @return $property $duration $timing-function $delay;\n}\n\n@function mdc-checkbox-transition-enter($property, $delay: 0ms, $duration: $mdc-checkbox-transition-duration) {\n  @return mdc-animation-enter($property, $duration, $delay);\n}\n\n@function mdc-checkbox-transition-exit($property, $delay: 0ms, $duration: $mdc-checkbox-transition-duration) {\n  @return mdc-animation-exit($property, $duration, $delay);\n}\n\n@mixin mdc-checkbox-cover-element {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n\n// postcss-bem-linter: define checkbox\n.mdc-checkbox {\n  @include mdc-ripple-base;\n  @include mdc-ripple-bg((pseudo: \"::before\", theme-style: primary, opacity: .14));\n  @include mdc-ripple-fg((pseudo: \"::after\", theme-style: primary, opacity: .14));\n\n  display: inline-block;\n  position: relative;\n  box-sizing: content-box;\n  width: $mdc-checkbox-size;\n  height: $mdc-checkbox-size;\n  flex: 0 0 $mdc-checkbox-size;\n  padding: ($mdc-checkbox-touch-area - $mdc-checkbox-size) / 2;\n  line-height: 0;\n  white-space: nowrap;\n  cursor: pointer;\n  vertical-align: bottom;\n\n  &::before,\n  &::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  // stylelint-disable plugin/selector-bem-pattern\n  &.mdc-ripple-upgraded--unbounded {\n    .mdc-checkbox__background::before {\n      content: none;\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n\n  &__background {\n    @include mdc-checkbox-cover-element;\n    @include mdc-rtl-reflexive-position(\n      left, ($mdc-checkbox-touch-area - $mdc-checkbox-size) / 2, \".mdc-checkbox\");\n\n    display: inline-flex;\n    top: ($mdc-checkbox-touch-area - $mdc-checkbox-size) / 2;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    pointer-events: none;\n    width: $mdc-checkbox-ui-pct;\n    height: $mdc-checkbox-ui-pct;\n    transition:\n      mdc-checkbox-transition-exit(background-color),\n      mdc-checkbox-transition-exit(border-color);\n    border: $mdc-checkbox-border-width solid $mdc-checkbox-border-color;\n    border-radius: 2px;\n    background-color: transparent;\n    will-change: background-color, border-color;\n\n    @include mdc-theme-dark(\".mdc-checkbox\") {\n      border-color: $mdc-checkbox-border-color-dark;\n    }\n\n    // The frame's ::before element is used as a focus indicator for the checkbox\n    &::before {\n      @include mdc-checkbox-cover-element;\n\n      width: 100%;\n      height: 100%;\n      transform: scale(0, 0);\n      transition: mdc-checkbox-transition-exit(opacity), mdc-checkbox-transition-exit(transform);\n      border-radius: 50%;\n      content: \"\";\n      opacity: 0;\n      pointer-events: none;\n      will-change: opacity, transform;\n\n      @include mdc-theme-prop(background, primary);\n    }\n  }\n\n  &__native-control {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    cursor: inherit;\n    opacity: 0;\n  }\n\n  &__checkmark {\n    @include mdc-checkbox-cover-element;\n\n    width: 100%;\n    transition: mdc-checkbox-transition-exit(opacity, 0ms, $mdc-checkbox-transition-duration * 2);\n    opacity: 0;\n    fill: $mdc-checkbox-mark-color;\n\n    &__path {\n      transition:\n        mdc-checkbox-transition-exit(\n          stroke-dashoffset,\n          0ms,\n          $mdc-checkbox-transition-duration * 2\n        );\n      // !important is needed here because a stroke must be set as an attribute on the SVG in order\n      // for line animation to work properly.\n      stroke: $mdc-checkbox-mark-color !important;\n      stroke-width: $mdc-checkbox-mark-stroke-size * 1.3;\n      stroke-dashoffset: $_mdc-checkbox-mark-path-length;\n      stroke-dasharray: $_mdc-checkbox-mark-path-length;\n    }\n  }\n\n  &__mixedmark {\n    width: 100%;\n    height: floor($mdc-checkbox-mark-stroke-size);\n    transform: scaleX(0) rotate(0deg);\n    transition: mdc-checkbox-transition-exit(opacity), mdc-checkbox-transition-exit(transform);\n    background-color: $mdc-checkbox-mark-color;\n    opacity: 0;\n  }\n}\n\n.mdc-checkbox__native-control:focus {\n  ~ .mdc-checkbox__background::before {\n    transform: scale(2.75, 2.75);\n    transition:\n      mdc-checkbox-transition-enter(opacity, 0ms, 80ms),\n      mdc-checkbox-transition-enter(transform, 0ms, 80ms);\n    opacity: .26;\n  }\n}\n\n.mdc-checkbox__native-control:checked {\n  ~ .mdc-checkbox__background {\n    transition:\n      mdc-checkbox-transition-enter(border-color),\n      mdc-checkbox-transition-enter(background-color);\n\n    @include mdc-theme-prop(border-color, primary);\n    @include mdc-theme-prop(background-color, primary);\n\n    .mdc-checkbox__checkmark {\n      transition:\n        mdc-checkbox-transition-enter(opacity, 0ms, $mdc-checkbox-transition-duration * 2),\n        mdc-checkbox-transition-enter(transform, 0ms, $mdc-checkbox-transition-duration * 2);\n      opacity: 1;\n\n      &__path {\n        stroke-dashoffset: 0;\n      }\n    }\n\n    .mdc-checkbox__mixedmark {\n      transform: scaleX(1) rotate(-45deg);\n    }\n  }\n}\n\n.mdc-checkbox__native-control:indeterminate {\n  ~ .mdc-checkbox__background {\n    @include mdc-theme-prop(border-color, primary);\n    @include mdc-theme-prop(background-color, primary);\n\n    .mdc-checkbox__checkmark {\n      transform: rotate(45deg);\n      transition:\n        mdc-checkbox-transition-exit(opacity, 0ms, $mdc-checkbox-transition-duration),\n        mdc-checkbox-transition-exit(transform, 0ms, $mdc-checkbox-transition-duration);\n      opacity: 0;\n\n      &__path {\n        stroke-dashoffset: 0;\n      }\n    }\n\n    .mdc-checkbox__mixedmark {\n      transform: scaleX(1) rotate(0deg);\n      opacity: 1;\n    }\n  }\n}\n\n.mdc-checkbox__native-control:disabled,\nfieldset:disabled .mdc-checkbox__native-control,\n[aria-disabled=\"true\"] .mdc-checkbox__native-control {\n  cursor: default;\n\n  // postcss-bem-linter: ignore\n  ~ .mdc-checkbox__background {\n    border-color: $mdc-checkbox-disabled-color;\n\n    @include mdc-theme-dark(\".mdc-checkbox\") {\n      border-color: $mdc-checkbox-disabled-color-dark;\n    }\n  }\n\n  &:checked,\n  &:indeterminate {\n    ~ .mdc-checkbox__background {\n      border-color: transparent;\n      background-color: $mdc-checkbox-disabled-color;\n      // stylelint-disable selector-max-compound-selectors, selector-max-specificity\n      @include mdc-theme-dark(\".mdc-checkbox\") {\n        background-color: $mdc-checkbox-disabled-color-dark;\n      }\n      // stylelint-enable selector-max-compound-selectors, selector-max-specificity\n    }\n  }\n}\n\n.mdc-checkbox--upgraded {\n  .mdc-checkbox__background,\n  .mdc-checkbox__checkmark,\n  .mdc-checkbox__checkmark__path,\n  .mdc-checkbox__mixedmark {\n    // Due to the myriad of selector combos used to properly style a CSS-only checkbox, all of\n    // which have varying selector precedence and make use of transitions, it is cleaner and more\n    // efficient here to simply use !important, since the mdc-checkbox--anim-* classes will take\n    // over from here.\n    transition: none !important;\n  }\n}\n\n.mdc-checkbox--anim {\n  $_mdc-checkbox-indeterminate-change-duration: 500ms;\n\n  &-unchecked-checked,\n  &-unchecked-indeterminate {\n    .mdc-checkbox__background {\n      animation: mdc-checkbox-fade-in-background $mdc-checkbox-transition-duration * 2 linear;\n\n      @include mdc-theme-dark(\".mdc-checkbox\") {\n        animation-name: mdc-checkbox-fade-in-background-dark;\n      }\n    }\n  }\n\n  &-checked-unchecked,\n  &-indeterminate-unchecked {\n    .mdc-checkbox__background {\n      animation: mdc-checkbox-fade-out-background $mdc-checkbox-transition-duration * 2 linear;\n\n      @include mdc-theme-dark(\".mdc-checkbox\") {\n        animation-name: mdc-checkbox-fade-out-background-dark;\n      }\n    }\n  }\n\n  &-unchecked-checked {\n    .mdc-checkbox__checkmark__path {\n      // Instead of delaying the animation, we simply multiply its length by 2 and begin the\n      // animation at 50% in order to prevent a flash of styles applied to a checked checkmark\n      // as the background is fading in before the animation begins.\n      animation: $mdc-checkbox-transition-duration * 2 linear 0s mdc-checkbox-unchecked-checked-checkmark-path;\n      transition: none;\n    }\n  }\n\n  &-unchecked-indeterminate {\n    .mdc-checkbox__mixedmark {\n      animation: $mdc-checkbox-transition-duration linear 0s mdc-checkbox-unchecked-indeterminate-mixedmark;\n      transition: none;\n    }\n  }\n\n  &-checked-unchecked {\n    .mdc-checkbox__checkmark__path {\n      animation: $mdc-checkbox-transition-duration linear 0s mdc-checkbox-checked-unchecked-checkmark-path;\n      transition: none;\n    }\n  }\n\n  &-checked-indeterminate {\n    .mdc-checkbox__checkmark {\n      animation: $mdc-checkbox-transition-duration linear 0s mdc-checkbox-checked-indeterminate-checkmark;\n      transition: none;\n    }\n\n    .mdc-checkbox__mixedmark {\n      animation: $mdc-checkbox-transition-duration linear 0s mdc-checkbox-checked-indeterminate-mixedmark;\n      transition: none;\n    }\n  }\n\n  &-indeterminate-checked {\n    .mdc-checkbox__checkmark {\n      animation: $_mdc-checkbox-indeterminate-change-duration linear 0s mdc-checkbox-indeterminate-checked-checkmark;\n      transition: none;\n    }\n\n    .mdc-checkbox__mixedmark {\n      animation: $_mdc-checkbox-indeterminate-change-duration linear 0s mdc-checkbox-indeterminate-checked-mixedmark;\n      transition: none;\n    }\n  }\n\n  &-indeterminate-unchecked {\n    .mdc-checkbox__mixedmark {\n      animation: $_mdc-checkbox-indeterminate-change-duration * .6 linear 0s mdc-checkbox-indeterminate-unchecked-mixedmark;\n      transition: none;\n    }\n  }\n}\n// postcss-bem-linter: end\n",".mdc-animation-linear-out-slow-in {\n  animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n\n.mdc-animation-fast-out-slow-in {\n  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n\n.mdc-animation-fast-out-linear-in {\n  animation-timing-function: cubic-bezier(0.4, 0, 1, 1); }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-button {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  line-height: 1.5rem;\n  color: rgba(0, 0, 0, 0.87);\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  display: inline-block;\n  position: relative;\n  min-width: 64px;\n  height: 36px;\n  padding: 0 16px;\n  border: none;\n  border-radius: 2px;\n  outline: none;\n  background: transparent;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 36px;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  overflow: hidden;\n  vertical-align: middle;\n  user-select: none;\n  box-sizing: border-box;\n  -webkit-appearance: none; }\n  .mdc-button:not(.mdc-ripple-upgraded):hover::before, .mdc-button:not(.mdc-ripple-upgraded):focus::before, .mdc-button:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-button::before {\n    background-color: rgba(0, 0, 0, 0.06);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-button.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-button.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-button.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-button.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-button::after {\n    background-color: rgba(0, 0, 0, 0.06);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-button.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-button:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-button.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-button.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-button.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-button:not(.mdc-ripple-upgraded) {\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0.18); }\n  .mdc-button--theme-dark,\n  .mdc-theme--dark .mdc-button {\n    --mdc-ripple-surface-width: 0;\n    --mdc-ripple-surface-height: 0;\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n    will-change: transform, opacity;\n    -webkit-tap-highlight-color: transparent;\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white); }\n    .mdc-button--theme-dark:not(.mdc-ripple-upgraded):hover::before, .mdc-button--theme-dark:not(.mdc-ripple-upgraded):focus::before, .mdc-button--theme-dark:not(.mdc-ripple-upgraded):active::after,\n    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):hover::before,\n    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):focus::before,\n    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded):active::after {\n      transition-duration: 85ms;\n      opacity: .6; }\n    .mdc-button--theme-dark::before,\n    .mdc-theme--dark .mdc-button::before {\n      background-color: rgba(255, 255, 255, 0.14);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded::before,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded::before {\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      transform: scale(0);\n      transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-button--theme-dark.mdc-ripple-upgraded--background-focused::before,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--background-focused::before {\n      opacity: .99999; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded--background-active-fill::before,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--background-active-fill::before {\n      transition-duration: 120ms;\n      opacity: 1; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded--unbounded::before,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--unbounded::before {\n      top: calc(50% - 50%);\n      top: var(--mdc-ripple-top, calc(50% - 50%));\n      left: calc(50% - 50%);\n      left: var(--mdc-ripple-left, calc(50% - 50%));\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      transform: scale(0);\n      transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-button--theme-dark::after,\n    .mdc-theme--dark .mdc-button::after {\n      background-color: rgba(255, 255, 255, 0.14);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded::after,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded::after {\n      top: 0;\n      left: 0;\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      transform: scale(0);\n      transform-origin: center center;\n      opacity: 0; }\n    .mdc-button--theme-dark:not(.mdc-ripple-upgraded--unbounded)::after,\n    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded--unbounded)::after {\n      transform-origin: center center; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded--unbounded::after,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--unbounded::after {\n      top: 0;\n      top: var(--mdc-ripple-top, 0);\n      left: 0;\n      left: var(--mdc-ripple-left, 0);\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      transform: scale(0);\n      transform-origin: center center; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded--foreground-activation::after,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--foreground-activation::after {\n      animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n    .mdc-button--theme-dark.mdc-ripple-upgraded--foreground-deactivation::after,\n    .mdc-theme--dark .mdc-button.mdc-ripple-upgraded--foreground-deactivation::after {\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n      animation: 250ms mdc-ripple-fg-opacity-out; }\n    .mdc-button--theme-dark:not(.mdc-ripple-upgraded),\n    .mdc-theme--dark .mdc-button:not(.mdc-ripple-upgraded) {\n      -webkit-tap-highlight-color: rgba(255, 255, 255, 0.18); }\n  .mdc-button.mdc-button--primary {\n    --mdc-ripple-surface-width: 0;\n    --mdc-ripple-surface-height: 0;\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n    will-change: transform, opacity;\n    -webkit-tap-highlight-color: transparent; }\n    .mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded):hover::before, .mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded):focus::before, .mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded):active::after {\n      transition-duration: 85ms;\n      opacity: .6; }\n    .mdc-button.mdc-button--primary::before {\n      background-color: rgba(63, 81, 181, 0.12);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n      @supports (background-color: color(green a(10%))) {\n        .mdc-button.mdc-button--primary::before {\n          background-color: color(var(--mdc-theme-primary, #3f51b5) a(12%)); } }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded::before {\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      transform: scale(0);\n      transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--background-focused::before {\n      opacity: .99999; }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--background-active-fill::before {\n      transition-duration: 120ms;\n      opacity: 1; }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--unbounded::before {\n      top: calc(50% - 50%);\n      top: var(--mdc-ripple-top, calc(50% - 50%));\n      left: calc(50% - 50%);\n      left: var(--mdc-ripple-left, calc(50% - 50%));\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      transform: scale(0);\n      transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-button.mdc-button--primary::after {\n      background-color: rgba(63, 81, 181, 0.12);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n      @supports (background-color: color(green a(10%))) {\n        .mdc-button.mdc-button--primary::after {\n          background-color: color(var(--mdc-theme-primary, #3f51b5) a(12%)); } }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded::after {\n      top: 0;\n      left: 0;\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      transform: scale(0);\n      transform-origin: center center;\n      opacity: 0; }\n    .mdc-button.mdc-button--primary:not(.mdc-ripple-upgraded--unbounded)::after {\n      transform-origin: center center; }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--unbounded::after {\n      top: 0;\n      top: var(--mdc-ripple-top, 0);\n      left: 0;\n      left: var(--mdc-ripple-left, 0);\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      transform: scale(0);\n      transform-origin: center center; }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--foreground-activation::after {\n      animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n    .mdc-button.mdc-button--primary.mdc-ripple-upgraded--foreground-deactivation::after {\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n      animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-button.mdc-button--accent {\n    --mdc-ripple-surface-width: 0;\n    --mdc-ripple-surface-height: 0;\n    --mdc-ripple-fg-size: 0;\n    --mdc-ripple-left: 0;\n    --mdc-ripple-top: 0;\n    --mdc-ripple-fg-scale: 1;\n    --mdc-ripple-fg-translate-end: 0;\n    --mdc-ripple-fg-translate-start: 0;\n    will-change: transform, opacity;\n    -webkit-tap-highlight-color: transparent; }\n    .mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded):hover::before, .mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded):focus::before, .mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded):active::after {\n      transition-duration: 85ms;\n      opacity: .6; }\n    .mdc-button.mdc-button--accent::before {\n      background-color: rgba(255, 64, 129, 0.12);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n      @supports (background-color: color(green a(10%))) {\n        .mdc-button.mdc-button--accent::before {\n          background-color: color(var(--mdc-theme-accent, #ff4081) a(12%)); } }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded::before {\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      transform: scale(0);\n      transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--background-focused::before {\n      opacity: .99999; }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--background-active-fill::before {\n      transition-duration: 120ms;\n      opacity: 1; }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--unbounded::before {\n      top: calc(50% - 50%);\n      top: var(--mdc-ripple-top, calc(50% - 50%));\n      left: calc(50% - 50%);\n      left: var(--mdc-ripple-left, calc(50% - 50%));\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      transform: scale(0);\n      transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-button.mdc-button--accent::after {\n      background-color: rgba(255, 64, 129, 0.12);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n      @supports (background-color: color(green a(10%))) {\n        .mdc-button.mdc-button--accent::after {\n          background-color: color(var(--mdc-theme-accent, #ff4081) a(12%)); } }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded::after {\n      top: 0;\n      left: 0;\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      transform: scale(0);\n      transform-origin: center center;\n      opacity: 0; }\n    .mdc-button.mdc-button--accent:not(.mdc-ripple-upgraded--unbounded)::after {\n      transform-origin: center center; }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--unbounded::after {\n      top: 0;\n      top: var(--mdc-ripple-top, 0);\n      left: 0;\n      left: var(--mdc-ripple-left, 0);\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      transform: scale(0);\n      transform-origin: center center; }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--foreground-activation::after {\n      animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n    .mdc-button.mdc-button--accent.mdc-ripple-upgraded--foreground-deactivation::after {\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n      animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-button:active {\n    outline: none; }\n  .mdc-button:hover {\n    cursor: pointer; }\n  .mdc-button::-moz-focus-inner {\n    padding: 0;\n    border: 0; }\n  .mdc-button--dense {\n    height: 32px;\n    font-size: .8125rem;\n    line-height: 32px; }\n  .mdc-button--raised {\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n    will-change: box-shadow;\n    min-width: 88px; }\n    .mdc-button--raised:active {\n      box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n    .mdc-button--raised.mdc-button--primary {\n      --mdc-ripple-surface-width: 0;\n      --mdc-ripple-surface-height: 0;\n      --mdc-ripple-fg-size: 0;\n      --mdc-ripple-left: 0;\n      --mdc-ripple-top: 0;\n      --mdc-ripple-fg-scale: 1;\n      --mdc-ripple-fg-translate-end: 0;\n      --mdc-ripple-fg-translate-start: 0;\n      will-change: transform, opacity;\n      -webkit-tap-highlight-color: transparent; }\n      .mdc-button--raised.mdc-button--primary:not(.mdc-ripple-upgraded):hover::before, .mdc-button--raised.mdc-button--primary:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised.mdc-button--primary:not(.mdc-ripple-upgraded):active::after {\n        transition-duration: 85ms;\n        opacity: .6; }\n      .mdc-button--raised.mdc-button--primary::before {\n        background-color: rgba(255, 255, 255, 0.14);\n        position: absolute;\n        top: calc(50% - 100%);\n        left: calc(50% - 100%);\n        width: 200%;\n        height: 200%;\n        transition: opacity 250ms linear;\n        border-radius: 50%;\n        opacity: 0;\n        pointer-events: none;\n        content: \"\"; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded::before {\n        top: calc(50% - 100%);\n        left: calc(50% - 100%);\n        width: 200%;\n        height: 200%;\n        transform: scale(0);\n        transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--background-focused::before {\n        opacity: .99999; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--background-active-fill::before {\n        transition-duration: 120ms;\n        opacity: 1; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--unbounded::before {\n        top: calc(50% - 50%);\n        top: var(--mdc-ripple-top, calc(50% - 50%));\n        left: calc(50% - 50%);\n        left: var(--mdc-ripple-left, calc(50% - 50%));\n        width: 100%;\n        width: var(--mdc-ripple-fg-size, 100%);\n        height: 100%;\n        height: var(--mdc-ripple-fg-size, 100%);\n        transform: scale(0);\n        transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n      .mdc-button--raised.mdc-button--primary::after {\n        background-color: rgba(255, 255, 255, 0.14);\n        position: absolute;\n        top: calc(50% - 100%);\n        left: calc(50% - 100%);\n        width: 200%;\n        height: 200%;\n        transition: opacity 250ms linear;\n        border-radius: 50%;\n        opacity: 0;\n        pointer-events: none;\n        content: \"\"; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded::after {\n        top: 0;\n        left: 0;\n        width: 100%;\n        width: var(--mdc-ripple-fg-size, 100%);\n        height: 100%;\n        height: var(--mdc-ripple-fg-size, 100%);\n        transform: scale(0);\n        transform-origin: center center;\n        opacity: 0; }\n      .mdc-button--raised.mdc-button--primary:not(.mdc-ripple-upgraded--unbounded)::after {\n        transform-origin: center center; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--unbounded::after {\n        top: 0;\n        top: var(--mdc-ripple-top, 0);\n        left: 0;\n        left: var(--mdc-ripple-left, 0);\n        width: 100%;\n        width: var(--mdc-ripple-fg-size, 100%);\n        height: 100%;\n        height: var(--mdc-ripple-fg-size, 100%);\n        transform: scale(0);\n        transform-origin: center center; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--foreground-activation::after {\n        animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n      .mdc-button--raised.mdc-button--primary.mdc-ripple-upgraded--foreground-deactivation::after {\n        transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n        animation: 250ms mdc-ripple-fg-opacity-out; }\n    .mdc-button--raised.mdc-button--accent {\n      --mdc-ripple-surface-width: 0;\n      --mdc-ripple-surface-height: 0;\n      --mdc-ripple-fg-size: 0;\n      --mdc-ripple-left: 0;\n      --mdc-ripple-top: 0;\n      --mdc-ripple-fg-scale: 1;\n      --mdc-ripple-fg-translate-end: 0;\n      --mdc-ripple-fg-translate-start: 0;\n      will-change: transform, opacity;\n      -webkit-tap-highlight-color: transparent; }\n      .mdc-button--raised.mdc-button--accent:not(.mdc-ripple-upgraded):hover::before, .mdc-button--raised.mdc-button--accent:not(.mdc-ripple-upgraded):focus::before, .mdc-button--raised.mdc-button--accent:not(.mdc-ripple-upgraded):active::after {\n        transition-duration: 85ms;\n        opacity: .6; }\n      .mdc-button--raised.mdc-button--accent::before {\n        background-color: rgba(255, 255, 255, 0.14);\n        position: absolute;\n        top: calc(50% - 100%);\n        left: calc(50% - 100%);\n        width: 200%;\n        height: 200%;\n        transition: opacity 250ms linear;\n        border-radius: 50%;\n        opacity: 0;\n        pointer-events: none;\n        content: \"\"; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded::before {\n        top: calc(50% - 100%);\n        left: calc(50% - 100%);\n        width: 200%;\n        height: 200%;\n        transform: scale(0);\n        transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--background-focused::before {\n        opacity: .99999; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--background-active-fill::before {\n        transition-duration: 120ms;\n        opacity: 1; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--unbounded::before {\n        top: calc(50% - 50%);\n        top: var(--mdc-ripple-top, calc(50% - 50%));\n        left: calc(50% - 50%);\n        left: var(--mdc-ripple-left, calc(50% - 50%));\n        width: 100%;\n        width: var(--mdc-ripple-fg-size, 100%);\n        height: 100%;\n        height: var(--mdc-ripple-fg-size, 100%);\n        transform: scale(0);\n        transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n      .mdc-button--raised.mdc-button--accent::after {\n        background-color: rgba(255, 255, 255, 0.14);\n        position: absolute;\n        top: calc(50% - 100%);\n        left: calc(50% - 100%);\n        width: 200%;\n        height: 200%;\n        transition: opacity 250ms linear;\n        border-radius: 50%;\n        opacity: 0;\n        pointer-events: none;\n        content: \"\"; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded::after {\n        top: 0;\n        left: 0;\n        width: 100%;\n        width: var(--mdc-ripple-fg-size, 100%);\n        height: 100%;\n        height: var(--mdc-ripple-fg-size, 100%);\n        transform: scale(0);\n        transform-origin: center center;\n        opacity: 0; }\n      .mdc-button--raised.mdc-button--accent:not(.mdc-ripple-upgraded--unbounded)::after {\n        transform-origin: center center; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--unbounded::after {\n        top: 0;\n        top: var(--mdc-ripple-top, 0);\n        left: 0;\n        left: var(--mdc-ripple-left, 0);\n        width: 100%;\n        width: var(--mdc-ripple-fg-size, 100%);\n        height: 100%;\n        height: var(--mdc-ripple-fg-size, 100%);\n        transform: scale(0);\n        transform-origin: center center; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--foreground-activation::after {\n        animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n      .mdc-button--raised.mdc-button--accent.mdc-ripple-upgraded--foreground-deactivation::after {\n        transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n        animation: 250ms mdc-ripple-fg-opacity-out; }\n    .mdc-button--theme-dark .mdc-button--raised,\n    .mdc-theme--dark .mdc-button--raised {\n      background-color: #3f51b5;\n      background-color: var(--mdc-theme-primary, #3f51b5); }\n      .mdc-button--theme-dark .mdc-button--raised::before,\n      .mdc-theme--dark .mdc-button--raised::before {\n        color: black; }\n  .mdc-button--primary {\n    color: #3f51b5;\n    color: var(--mdc-theme-primary, #3f51b5); }\n    .mdc-button--theme-dark .mdc-button--primary,\n    .mdc-theme--dark .mdc-button--primary {\n      color: #3f51b5;\n      color: var(--mdc-theme-primary, #3f51b5); }\n    .mdc-button--primary.mdc-button--raised {\n      background-color: #3f51b5;\n      background-color: var(--mdc-theme-primary, #3f51b5);\n      color: white;\n      color: var(--mdc-theme-text-primary-on-primary, white); }\n      .mdc-button--primary.mdc-button--raised::before {\n        color: black; }\n  .mdc-button--accent {\n    color: #ff4081;\n    color: var(--mdc-theme-accent, #ff4081); }\n    .mdc-button--theme-dark .mdc-button--accent,\n    .mdc-theme--dark .mdc-button--accent {\n      color: #ff4081;\n      color: var(--mdc-theme-accent, #ff4081); }\n    .mdc-button--accent.mdc-button--raised {\n      background-color: #ff4081;\n      background-color: var(--mdc-theme-accent, #ff4081);\n      color: white;\n      color: var(--mdc-theme-text-primary-on-accent, white); }\n      .mdc-button--accent.mdc-button--raised::before {\n        color: black; }\n  .mdc-button--compact {\n    padding: 0 8px; }\n  fieldset:disabled .mdc-button, .mdc-button:disabled {\n    color: rgba(0, 0, 0, 0.26);\n    cursor: default;\n    pointer-events: none; }\n    .mdc-button--theme-dark fieldset:disabled .mdc-button,\n    .mdc-theme--dark fieldset:disabled .mdc-button, .mdc-button--theme-dark .mdc-button:disabled,\n    .mdc-theme--dark .mdc-button:disabled {\n      color: rgba(255, 255, 255, 0.3); }\n  fieldset:disabled .mdc-button--raised, .mdc-button--raised:disabled {\n    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n    background-color: rgba(0, 0, 0, 0.12);\n    pointer-events: none; }\n    .mdc-button--theme-dark fieldset:disabled .mdc-button--raised,\n    .mdc-theme--dark fieldset:disabled .mdc-button--raised, .mdc-button--theme-dark .mdc-button--raised:disabled,\n    .mdc-theme--dark .mdc-button--raised:disabled {\n      background-color: rgba(255, 255, 255, 0.12); }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-card {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  padding: 0;\n  box-sizing: border-box; }\n  .mdc-card__primary {\n    padding: 16px; }\n    .mdc-card__primary .mdc-card__title--large {\n      padding-top: 8px; }\n    .mdc-card__primary:last-child {\n      padding-bottom: 24px; }\n  .mdc-card__supporting-text {\n    padding: 8px 16px;\n    box-sizing: border-box;\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 400;\n    letter-spacing: 0.04em;\n    line-height: 1.25rem;\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n    .mdc-card--theme-dark .mdc-card__supporting-text,\n    .mdc-theme--dark .mdc-card__supporting-text {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n    .mdc-card__primary + .mdc-card__supporting-text {\n      margin-top: -8px;\n      padding-top: 0; }\n    .mdc-card__supporting-text:last-child {\n      padding-bottom: 24px; }\n  .mdc-card__actions {\n    display: flex;\n    padding: 8px;\n    box-sizing: border-box; }\n    .mdc-card--theme-dark .mdc-card__actions,\n    .mdc-theme--dark .mdc-card__actions {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n    .mdc-card__actions .mdc-card__action {\n      margin: 0 8px 0 0; }\n    .mdc-card__actions .mdc-card__action:last-child {\n      margin-right: 0; }\n    .mdc-card__actions--vertical {\n      flex-flow: column;\n      align-items: flex-start; }\n      .mdc-card__actions--vertical .mdc-card__action {\n        margin: 0 0 4px; }\n      .mdc-card__actions--vertical .mdc-card__action:last-child {\n        margin-bottom: 0; }\n  .mdc-card__media {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    padding: 16px;\n    box-sizing: border-box; }\n  .mdc-card__media-item {\n    display: inline-block;\n    width: auto;\n    height: 80px;\n    margin: 16px 0 0;\n    padding: 0; }\n    .mdc-card__media-item--1dot5x {\n      width: auto;\n      height: 120px; }\n    .mdc-card__media-item--2x {\n      width: auto;\n      height: 160px; }\n    .mdc-card__media-item--3x {\n      width: auto;\n      height: 240px; }\n  .mdc-card__title {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    line-height: 1.5rem;\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n    margin: -.063rem 0; }\n    .mdc-card--theme-dark .mdc-card__title,\n    .mdc-theme--dark .mdc-card__title {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n  .mdc-card__title--large {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 1.5rem;\n    font-weight: 400;\n    letter-spacing: normal;\n    line-height: 2rem;\n    margin: 0; }\n  .mdc-card__subtitle {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 400;\n    letter-spacing: 0.04em;\n    line-height: 1.25rem;\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n    margin: -.063rem 0; }\n    .mdc-card--theme-dark .mdc-card__subtitle,\n    .mdc-theme--dark .mdc-card__subtitle {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n  .mdc-card__horizontal-block {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-between;\n    padding: 0 16px 0 0;\n    box-sizing: border-box; }\n    .mdc-card__horizontal-block .mdc-card__actions--vertical {\n      margin: 16px; }\n    .mdc-card__horizontal-block .mdc-card__media-item {\n      margin-left: 16px; }\n    .mdc-card__horizontal-block .mdc-card__media-item--3x {\n      margin-bottom: 16px; }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/* Manual calculation done on SVG */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* Manual calculation done on SVG */\n@keyframes mdc-checkbox-fade-in-background {\n  0% {\n    border-color: rgba(0, 0, 0, 0.54);\n    background-color: transparent; }\n  50% {\n    border-color: #3f51b5;\n    border-color: var(--mdc-theme-primary, #3f51b5);\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); } }\n\n@keyframes mdc-checkbox-fade-out-background {\n  0%,\n  80% {\n    border-color: #3f51b5;\n    border-color: var(--mdc-theme-primary, #3f51b5);\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); }\n  100% {\n    border-color: rgba(0, 0, 0, 0.54);\n    background-color: transparent; } }\n\n@keyframes mdc-checkbox-fade-in-background-dark {\n  0% {\n    border-color: white;\n    background-color: transparent; }\n  50% {\n    border-color: #3f51b5;\n    border-color: var(--mdc-theme-primary, #3f51b5);\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); } }\n\n@keyframes mdc-checkbox-fade-out-background-dark {\n  0%,\n  80% {\n    border-color: #3f51b5;\n    border-color: var(--mdc-theme-primary, #3f51b5);\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); }\n  100% {\n    border-color: white;\n    background-color: transparent; } }\n\n@keyframes mdc-checkbox-unchecked-checked-checkmark-path {\n  0%,\n  50% {\n    stroke-dashoffset: 29.78334; }\n  50% {\n    animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n  100% {\n    stroke-dashoffset: 0; } }\n\n@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {\n  0%,\n  68.2% {\n    transform: scaleX(0); }\n  68.2% {\n    animation-timing-function: cubic-bezier(0, 0, 0, 1); }\n  100% {\n    transform: scaleX(1); } }\n\n@keyframes mdc-checkbox-checked-unchecked-checkmark-path {\n  from {\n    animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\n    opacity: 1;\n    stroke-dashoffset: 0; }\n  to {\n    opacity: 0;\n    stroke-dashoffset: -29.78334; } }\n\n@keyframes mdc-checkbox-checked-indeterminate-checkmark {\n  from {\n    transform: rotate(0deg);\n    opacity: 1;\n    animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n  to {\n    transform: rotate(45deg);\n    opacity: 0; } }\n\n@keyframes mdc-checkbox-indeterminate-checked-checkmark {\n  from {\n    transform: rotate(45deg);\n    opacity: 0;\n    animation-timing-function: cubic-bezier(0.14, 0, 0, 1); }\n  to {\n    transform: rotate(360deg);\n    opacity: 1; } }\n\n@keyframes mdc-checkbox-checked-indeterminate-mixedmark {\n  from {\n    transform: rotate(-45deg);\n    opacity: 0;\n    animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n  to {\n    transform: rotate(0deg);\n    opacity: 1; } }\n\n@keyframes mdc-checkbox-indeterminate-checked-mixedmark {\n  from {\n    transform: rotate(0deg);\n    opacity: 1;\n    animation-timing-function: cubic-bezier(0.14, 0, 0, 1); }\n  to {\n    transform: rotate(315deg);\n    opacity: 0; } }\n\n@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {\n  0% {\n    transform: scaleX(1);\n    opacity: 1;\n    animation-timing-function: linear; }\n  32.8%,\n  100% {\n    transform: scaleX(0);\n    opacity: 0; } }\n\n.mdc-checkbox {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  display: inline-block;\n  position: relative;\n  box-sizing: content-box;\n  width: 18px;\n  height: 18px;\n  flex: 0 0 18px;\n  padding: 11px;\n  line-height: 0;\n  white-space: nowrap;\n  cursor: pointer;\n  vertical-align: bottom; }\n  .mdc-checkbox:not(.mdc-ripple-upgraded):hover::before, .mdc-checkbox:not(.mdc-ripple-upgraded):focus::before, .mdc-checkbox:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-checkbox::before {\n    background-color: rgba(63, 81, 181, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-checkbox::before {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }\n  .mdc-checkbox.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-checkbox.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-checkbox.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-checkbox.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-checkbox::after {\n    background-color: rgba(63, 81, 181, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-checkbox::after {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }\n  .mdc-checkbox.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-checkbox:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-checkbox.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-checkbox.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-checkbox.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-checkbox::before, .mdc-checkbox::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%; }\n  .mdc-checkbox.mdc-ripple-upgraded--unbounded .mdc-checkbox__background::before {\n    content: none; }\n  .mdc-checkbox__background {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    left: 11px;\n    right: initial;\n    display: inline-flex;\n    top: 11px;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    pointer-events: none;\n    width: 45%;\n    height: 45%;\n    transition: background-color 90ms 0ms cubic-bezier(0.4, 0, 1, 1), border-color 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    border: 2px solid rgba(0, 0, 0, 0.54);\n    border-radius: 2px;\n    background-color: transparent;\n    will-change: background-color, border-color; }\n    [dir=\"rtl\"] .mdc-checkbox .mdc-checkbox__background,\n    .mdc-checkbox[dir=\"rtl\"] .mdc-checkbox__background {\n      left: initial;\n      right: 11px; }\n    .mdc-checkbox--theme-dark .mdc-checkbox__background,\n    .mdc-theme--dark .mdc-checkbox__background {\n      border-color: white; }\n    .mdc-checkbox__background::before {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      transform: scale(0, 0);\n      transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      border-radius: 50%;\n      content: \"\";\n      opacity: 0;\n      pointer-events: none;\n      will-change: opacity, transform;\n      background: #3f51b5;\n      background: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-checkbox__native-control {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    cursor: inherit;\n    opacity: 0; }\n  .mdc-checkbox__checkmark {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    transition: opacity 180ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    opacity: 0;\n    fill: white; }\n    .mdc-checkbox__checkmark__path {\n      transition: stroke-dashoffset 180ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      stroke: white !important;\n      stroke-width: 3.12px;\n      stroke-dashoffset: 29.78334;\n      stroke-dasharray: 29.78334; }\n  .mdc-checkbox__mixedmark {\n    width: 100%;\n    height: 2px;\n    transform: scaleX(0) rotate(0deg);\n    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    background-color: white;\n    opacity: 0; }\n\n.mdc-checkbox__native-control:focus ~ .mdc-checkbox__background::before {\n  transform: scale(2.75, 2.75);\n  transition: opacity 80ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 80ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: .26; }\n\n.mdc-checkbox__native-control:checked ~ .mdc-checkbox__background {\n  transition: border-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 90ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  border-color: #3f51b5;\n  border-color: var(--mdc-theme-primary, #3f51b5);\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark {\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: 1; }\n    .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__checkmark__path {\n      stroke-dashoffset: 0; }\n  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background .mdc-checkbox__mixedmark {\n    transform: scaleX(1) rotate(-45deg); }\n\n.mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background {\n  border-color: #3f51b5;\n  border-color: var(--mdc-theme-primary, #3f51b5);\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark {\n    transform: rotate(45deg);\n    transition: opacity 90ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 90ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    opacity: 0; }\n    .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__checkmark__path {\n      stroke-dashoffset: 0; }\n  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background .mdc-checkbox__mixedmark {\n    transform: scaleX(1) rotate(0deg);\n    opacity: 1; }\n\n.mdc-checkbox__native-control:disabled,\nfieldset:disabled .mdc-checkbox__native-control,\n[aria-disabled=\"true\"] .mdc-checkbox__native-control {\n  cursor: default; }\n  .mdc-checkbox__native-control:disabled ~ .mdc-checkbox__background,\n  fieldset:disabled .mdc-checkbox__native-control ~ .mdc-checkbox__background,\n  [aria-disabled=\"true\"] .mdc-checkbox__native-control ~ .mdc-checkbox__background {\n    border-color: rgba(0, 0, 0, 0.26); }\n    .mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled ~ .mdc-checkbox__background,\n    .mdc-theme--dark .mdc-checkbox__native-control:disabled ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark\n    fieldset:disabled .mdc-checkbox__native-control ~ .mdc-checkbox__background,\n    .mdc-theme--dark\n    fieldset:disabled .mdc-checkbox__native-control ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark\n    [aria-disabled=\"true\"] .mdc-checkbox__native-control ~ .mdc-checkbox__background,\n    .mdc-theme--dark\n    [aria-disabled=\"true\"] .mdc-checkbox__native-control ~ .mdc-checkbox__background {\n      border-color: rgba(255, 255, 255, 0.3); }\n  .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background, .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background,\n  fieldset:disabled .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,\n  fieldset:disabled .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background,\n  [aria-disabled=\"true\"] .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,\n  [aria-disabled=\"true\"] .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background {\n    border-color: transparent;\n    background-color: rgba(0, 0, 0, 0.26); }\n    .mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background,\n    .mdc-theme--dark .mdc-checkbox__native-control:disabled:checked ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background,\n    .mdc-theme--dark .mdc-checkbox__native-control:disabled:indeterminate ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark\n    fieldset:disabled .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,\n    .mdc-theme--dark\n    fieldset:disabled .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark\n    fieldset:disabled .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background,\n    .mdc-theme--dark\n    fieldset:disabled .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark\n    [aria-disabled=\"true\"] .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,\n    .mdc-theme--dark\n    [aria-disabled=\"true\"] .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background, .mdc-checkbox--theme-dark\n    [aria-disabled=\"true\"] .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background,\n    .mdc-theme--dark\n    [aria-disabled=\"true\"] .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background {\n      background-color: rgba(255, 255, 255, 0.3); }\n\n.mdc-checkbox--upgraded .mdc-checkbox__background,\n.mdc-checkbox--upgraded .mdc-checkbox__checkmark,\n.mdc-checkbox--upgraded .mdc-checkbox__checkmark__path,\n.mdc-checkbox--upgraded .mdc-checkbox__mixedmark {\n  transition: none !important; }\n\n.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background, .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background {\n  animation: mdc-checkbox-fade-in-background 180ms linear; }\n  .mdc-checkbox--theme-dark .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,\n  .mdc-theme--dark .mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background, .mdc-checkbox--theme-dark .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,\n  .mdc-theme--dark .mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background {\n    animation-name: mdc-checkbox-fade-in-background-dark; }\n\n.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background, .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background {\n  animation: mdc-checkbox-fade-out-background 180ms linear; }\n  .mdc-checkbox--theme-dark .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,\n  .mdc-theme--dark .mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background, .mdc-checkbox--theme-dark .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background,\n  .mdc-theme--dark .mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background {\n    animation-name: mdc-checkbox-fade-out-background-dark; }\n\n.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark__path {\n  animation: 180ms linear 0s mdc-checkbox-unchecked-checked-checkmark-path;\n  transition: none; }\n\n.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark {\n  animation: 90ms linear 0s mdc-checkbox-unchecked-indeterminate-mixedmark;\n  transition: none; }\n\n.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark__path {\n  animation: 90ms linear 0s mdc-checkbox-checked-unchecked-checkmark-path;\n  transition: none; }\n\n.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark {\n  animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-checkmark;\n  transition: none; }\n\n.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark {\n  animation: 90ms linear 0s mdc-checkbox-checked-indeterminate-mixedmark;\n  transition: none; }\n\n.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark {\n  animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-checkmark;\n  transition: none; }\n\n.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark {\n  animation: 500ms linear 0s mdc-checkbox-indeterminate-checked-mixedmark;\n  transition: none; }\n\n.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark {\n  animation: 300ms linear 0s mdc-checkbox-indeterminate-unchecked-mixedmark;\n  transition: none; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n:root {\n  --mdc-dialog-dark-theme-bg-color: #303030; }\n\n.mdc-dialog {\n  display: flex;\n  position: fixed;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  z-index: -1; }\n  .mdc-dialog__surface {\n    display: inline-flex;\n    flex-direction: column;\n    box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n    width: calc(100% - 30px);\n    min-width: 640px;\n    max-width: 865px;\n    transform: translateY(150px) scale(0.8);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    border-radius: 2px;\n    background-color: #fff;\n    background-color: var(--mdc-theme-background, #fff);\n    opacity: 0; }\n    .mdc-dialog--theme-dark .mdc-dialog__surface,\n    .mdc-theme--dark .mdc-dialog__surface {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white);\n      background-color: #303030;\n      background-color: var(--mdc-dialog-dark-theme-bg-color, #303030); }\n    [dir=\"rtl\"] .mdc-dialog .mdc-dialog__surface,\n    .mdc-dialog[dir=\"rtl\"] .mdc-dialog__surface {\n      text-align: right; }\n  .mdc-dialog__backdrop {\n    display: flex;\n    position: fixed;\n    top: 0;\n    left: 0;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.87);\n    background-color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n    opacity: 0;\n    z-index: -1; }\n  .mdc-dialog__header {\n    display: flex;\n    align-items: center;\n    padding: 24px 24px 0; }\n    .mdc-dialog__header__empty {\n      padding: 0; }\n    [dir=\"rtl\"] .mdc-dialog .mdc-dialog__header,\n    .mdc-dialog[dir=\"rtl\"] .mdc-dialog__header {\n      text-align: right; }\n    .mdc-dialog__header__title {\n      flex: 1;\n      margin: 0;\n      font-family: Roboto, sans-serif;\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-font-smoothing: antialiased;\n      font-size: 1.25rem;\n      font-weight: 500;\n      letter-spacing: 0.02em;\n      line-height: 2rem; }\n  .mdc-dialog__body {\n    margin-top: 20px;\n    padding: 0 24px 24px;\n    color: rgba(0, 0, 0, 0.54);\n    color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 400;\n    letter-spacing: 0.04em;\n    line-height: 1.25rem; }\n    .mdc-dialog--theme-dark.mdc-dialog__body,\n    .mdc-theme--dark .mdc-dialog__body {\n      color: rgba(255, 255, 255, 0.7);\n      color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n    .mdc-dialog__body--scrollable {\n      max-height: 195px;\n      border-top: 1px solid rgba(0, 0, 0, 0.1);\n      border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n      overflow-y: scroll;\n      overflow-x: auto;\n      -webkit-overflow-scrolling: touch; }\n  .mdc-dialog__footer {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: flex-end;\n    padding: 8px; }\n  @media (max-width: 640px) {\n    .mdc-dialog {\n      min-width: 280px; }\n      .mdc-dialog__surface {\n        min-width: 280px; }\n      .mdc-dialog__body {\n        line-height: 24px; } }\n\n.mdc-dialog--open {\n  display: flex;\n  top: 0;\n  left: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  opacity: 1;\n  z-index: 2; }\n  .mdc-dialog--open .mdc-dialog__surface {\n    transform: translateY(0) scale(1);\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: 1; }\n  .mdc-dialog--open .mdc-dialog__backdrop {\n    transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .3; }\n\n.mdc-dialog-scroll-lock {\n  height: 100vh;\n  overflow: hidden; }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n:root {\n  --mdc-persistent-drawer-dark-theme-bg-color: #212121; }\n\n.mdc-persistent-drawer {\n  /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */\n  /* stylelint-disable selector-no-qualifying-type */\n  /* stylelint-enable selector-no-qualifying-type */\n  /* TODO(sgomes): Revisit when we have interactive lists. */\n  width: 0; }\n  .mdc-persistent-drawer__toolbar-spacer {\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    flex-shrink: 0;\n    align-items: flex-center;\n    height: 56px;\n    padding: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    box-sizing: border-box;\n    /* TODO(sgomes): replace with global breakpoints when we have them */ }\n    .mdc-persistent-drawer__toolbar-spacer--theme-dark .mdc-persistent-drawer__toolbar-spacer,\n    .mdc-theme--dark .mdc-persistent-drawer__toolbar-spacer {\n      border-bottom: 1px solid rgba(255, 255, 255, 0.12); }\n    @media (min-width: 600px) {\n      .mdc-persistent-drawer__toolbar-spacer {\n        height: 64px; } }\n  .mdc-persistent-drawer__header {\n    position: relative; }\n  .mdc-persistent-drawer__header::before {\n    display: block;\n    padding-top: 56.25%;\n    content: \"\"; }\n  .mdc-persistent-drawer__header-content {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    align-items: flex-end;\n    padding: 16px;\n    box-sizing: border-box; }\n  .mdc-persistent-drawer .mdc-list-group,\n  .mdc-persistent-drawer .mdc-list {\n    padding-right: 0;\n    padding-left: 0; }\n  .mdc-persistent-drawer .mdc-list-item {\n    position: relative;\n    padding: 0 16px;\n    outline: none;\n    color: inherit;\n    text-decoration: none;\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    line-height: 1.5rem; }\n  .mdc-persistent-drawer .mdc-list-item__start-detail {\n    color: rgba(0, 0, 0, 0.54); }\n    .mdc-persistent-drawer .mdc-list-item__start-detail--theme-dark .mdc-persistent-drawer .mdc-list-item__start-detail,\n    .mdc-theme--dark .mdc-persistent-drawer .mdc-list-item__start-detail {\n      color: rgba(255, 255, 255, 0.54); }\n  .mdc-persistent-drawer--selected.mdc-list-item,\n  .mdc-persistent-drawer--selected.mdc-list-item .mdc-list-item__start-detail {\n    color: #3f51b5;\n    color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-persistent-drawer .mdc-list-item::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    border-radius: inherit;\n    background: currentColor;\n    content: \"\";\n    opacity: 0; }\n  .mdc-persistent-drawer .mdc-list-item:focus::before {\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .12; }\n  .mdc-persistent-drawer .mdc-list-item:active::before {\n    /*\n      Slightly darker value for visual distinction.\n      This allows a full base that has distinct modes.\n      Progressive enhancement with ripples will provide complete button spec alignment.\n    */\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .18; }\n  .mdc-persistent-drawer .mdc-list-item:active:focus::before {\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  .mdc-persistent-drawer__drawer {\n    background: #fff;\n    background: var(--mdc-theme-background, #fff);\n    border-left: 0;\n    border-right: 1px solid #e4e4e4;\n    left: 0;\n    right: initial;\n    height: 100%;\n    transform: translateX(-107%);\n    transform: translateX(calc(-100% - 20px));\n    will-change: transform;\n    display: inline-flex;\n    flex-direction: column;\n    box-sizing: border-box;\n    overflow: hidden;\n    touch-action: none;\n    width: 240px; }\n    [dir=\"rtl\"] .mdc-persistent-drawer__drawer, .mdc-persistent-drawer__drawer[dir=\"rtl\"] {\n      border-left: 1px solid #e4e4e4;\n      border-right: 0; }\n    [dir=\"rtl\"] .mdc-persistent-drawer__drawer, .mdc-persistent-drawer__drawer[dir=\"rtl\"] {\n      left: initial;\n      right: 0; }\n    .mdc-persistent-drawer__drawer--theme-dark,\n    .mdc-theme--dark .mdc-persistent-drawer__drawer {\n      background-color: #212121;\n      background-color: var(--mdc-persistent-drawer-dark-theme-bg-color, #212121);\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white);\n      border-left: 0;\n      border-right: 1px solid rgba(255, 255, 255, 0.12); }\n      [dir=\"rtl\"] .mdc-persistent-drawer__drawer--theme-dark, .mdc-persistent-drawer__drawer--theme-dark[dir=\"rtl\"], [dir=\"rtl\"]\n      .mdc-theme--dark .mdc-persistent-drawer__drawer,\n      .mdc-theme--dark .mdc-persistent-drawer__drawer[dir=\"rtl\"] {\n        border-left: 1px solid rgba(255, 255, 255, 0.12);\n        border-right: 0; }\n    [dir=\"rtl\"] .mdc-persistent-drawer .mdc-persistent-drawer__drawer,\n    .mdc-persistent-drawer[dir=\"rtl\"] .mdc-persistent-drawer__drawer {\n      transform: translateX(107%);\n      transform: translateX(calc(100% + 20px)); }\n  .mdc-persistent-drawer--animating .mdc-persistent-drawer__drawer {\n    transition: transform 0.13s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-persistent-drawer--animating.mdc-persistent-drawer--open .mdc-persistent-drawer__drawer {\n    transition: transform 0.33s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-persistent-drawer--open {\n    width: 240px;\n    pointer-events: auto; }\n    .mdc-persistent-drawer--open .mdc-persistent-drawer__drawer {\n      transform: none; }\n    [dir=\"rtl\"] .mdc-persistent-drawer--open .mdc-persistent-drawer__drawer, .mdc-persistent-drawer--open[dir=\"rtl\"] .mdc-persistent-drawer__drawer {\n      transform: none; }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n:root {\n  --mdc-permanent-drawer-dark-theme-bg-color: #212121; }\n\n.mdc-permanent-drawer {\n  /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */\n  /* stylelint-disable selector-no-qualifying-type */\n  /* stylelint-enable selector-no-qualifying-type */\n  /* TODO(sgomes): Revisit when we have interactive lists. */\n  background: #fff;\n  background: var(--mdc-theme-background, #fff);\n  border-left: 0;\n  border-right: 1px solid #e4e4e4;\n  left: 0;\n  right: initial;\n  display: inline-flex;\n  flex-direction: column;\n  width: 240px;\n  height: 100%;\n  box-sizing: border-box;\n  overflow: hidden; }\n  .mdc-permanent-drawer__toolbar-spacer {\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    flex-shrink: 0;\n    align-items: flex-center;\n    height: 56px;\n    padding: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    box-sizing: border-box;\n    /* TODO(sgomes): replace with global breakpoints when we have them */ }\n    .mdc-permanent-drawer__toolbar-spacer--theme-dark .mdc-permanent-drawer__toolbar-spacer,\n    .mdc-theme--dark .mdc-permanent-drawer__toolbar-spacer {\n      border-bottom: 1px solid rgba(255, 255, 255, 0.12); }\n    @media (min-width: 600px) {\n      .mdc-permanent-drawer__toolbar-spacer {\n        height: 64px; } }\n  .mdc-permanent-drawer__header {\n    position: relative; }\n  .mdc-permanent-drawer__header::before {\n    display: block;\n    padding-top: 56.25%;\n    content: \"\"; }\n  .mdc-permanent-drawer__header-content {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    align-items: flex-end;\n    padding: 16px;\n    box-sizing: border-box; }\n  .mdc-permanent-drawer .mdc-list-group,\n  .mdc-permanent-drawer .mdc-list {\n    padding-right: 0;\n    padding-left: 0; }\n  .mdc-permanent-drawer .mdc-list-item {\n    position: relative;\n    padding: 0 16px;\n    outline: none;\n    color: inherit;\n    text-decoration: none;\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    line-height: 1.5rem; }\n  .mdc-permanent-drawer .mdc-list-item__start-detail {\n    color: rgba(0, 0, 0, 0.54); }\n    .mdc-permanent-drawer .mdc-list-item__start-detail--theme-dark .mdc-permanent-drawer .mdc-list-item__start-detail,\n    .mdc-theme--dark .mdc-permanent-drawer .mdc-list-item__start-detail {\n      color: rgba(255, 255, 255, 0.54); }\n  .mdc-permanent-drawer--selected.mdc-list-item,\n  .mdc-permanent-drawer--selected.mdc-list-item .mdc-list-item__start-detail {\n    color: #3f51b5;\n    color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-permanent-drawer .mdc-list-item::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    border-radius: inherit;\n    background: currentColor;\n    content: \"\";\n    opacity: 0; }\n  .mdc-permanent-drawer .mdc-list-item:focus::before {\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .12; }\n  .mdc-permanent-drawer .mdc-list-item:active::before {\n    /*\n      Slightly darker value for visual distinction.\n      This allows a full base that has distinct modes.\n      Progressive enhancement with ripples will provide complete button spec alignment.\n    */\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .18; }\n  .mdc-permanent-drawer .mdc-list-item:active:focus::before {\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  [dir=\"rtl\"] .mdc-permanent-drawer, .mdc-permanent-drawer[dir=\"rtl\"] {\n    border-left: 1px solid #e4e4e4;\n    border-right: 0; }\n  [dir=\"rtl\"] .mdc-permanent-drawer, .mdc-permanent-drawer[dir=\"rtl\"] {\n    left: initial;\n    right: 0; }\n  .mdc-permanent-drawer--theme-dark,\n  .mdc-theme--dark .mdc-permanent-drawer {\n    background-color: #212121;\n    background-color: var(--mdc-permanent-drawer-dark-theme-bg-color, #212121);\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white);\n    border-left: 0;\n    border-right: 1px solid rgba(255, 255, 255, 0.12); }\n    [dir=\"rtl\"] .mdc-permanent-drawer--theme-dark, .mdc-permanent-drawer--theme-dark[dir=\"rtl\"], [dir=\"rtl\"]\n    .mdc-theme--dark .mdc-permanent-drawer,\n    .mdc-theme--dark .mdc-permanent-drawer[dir=\"rtl\"] {\n      border-left: 1px solid rgba(255, 255, 255, 0.12);\n      border-right: 0; }\n  .mdc-permanent-drawer--floating {\n    background: none;\n    border-left: 0;\n    border-right: none; }\n    [dir=\"rtl\"] .mdc-permanent-drawer--floating, .mdc-permanent-drawer--floating[dir=\"rtl\"] {\n      border-left: none;\n      border-right: 0; }\n    .mdc-permanent-drawer--floating--theme-dark,\n    .mdc-theme--dark .mdc-permanent-drawer--floating {\n      background: none;\n      border-left: 0;\n      border-right: none; }\n      [dir=\"rtl\"] .mdc-permanent-drawer--floating--theme-dark, .mdc-permanent-drawer--floating--theme-dark[dir=\"rtl\"], [dir=\"rtl\"]\n      .mdc-theme--dark .mdc-permanent-drawer--floating,\n      .mdc-theme--dark .mdc-permanent-drawer--floating[dir=\"rtl\"] {\n        border-left: none;\n        border-right: 0; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n.mdc-temporary-drawer {\n  /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */\n  /* stylelint-disable selector-no-qualifying-type */\n  /* stylelint-enable selector-no-qualifying-type */\n  /* TODO(sgomes): Revisit when we have interactive lists. */\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  pointer-events: none;\n  box-sizing: border-box;\n  contain: strict;\n  z-index: 3;\n  /* Shaded background */ }\n  .mdc-temporary-drawer__toolbar-spacer {\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    flex-shrink: 0;\n    align-items: flex-center;\n    height: 56px;\n    padding: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n    box-sizing: border-box;\n    /* TODO(sgomes): replace with global breakpoints when we have them */ }\n    .mdc-temporary-drawer__toolbar-spacer--theme-dark .mdc-temporary-drawer__toolbar-spacer,\n    .mdc-theme--dark .mdc-temporary-drawer__toolbar-spacer {\n      border-bottom: 1px solid rgba(255, 255, 255, 0.12); }\n    @media (min-width: 600px) {\n      .mdc-temporary-drawer__toolbar-spacer {\n        height: 64px; } }\n  .mdc-temporary-drawer__header {\n    position: relative; }\n  .mdc-temporary-drawer__header::before {\n    display: block;\n    padding-top: 56.25%;\n    content: \"\"; }\n  .mdc-temporary-drawer__header-content {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    align-items: flex-end;\n    padding: 16px;\n    box-sizing: border-box; }\n  .mdc-temporary-drawer .mdc-list-group,\n  .mdc-temporary-drawer .mdc-list {\n    padding-right: 0;\n    padding-left: 0; }\n  .mdc-temporary-drawer .mdc-list-item {\n    position: relative;\n    padding: 0 16px;\n    outline: none;\n    color: inherit;\n    text-decoration: none;\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    line-height: 1.5rem; }\n  .mdc-temporary-drawer .mdc-list-item__start-detail {\n    color: rgba(0, 0, 0, 0.54); }\n    .mdc-temporary-drawer .mdc-list-item__start-detail--theme-dark .mdc-temporary-drawer .mdc-list-item__start-detail,\n    .mdc-theme--dark .mdc-temporary-drawer .mdc-list-item__start-detail {\n      color: rgba(255, 255, 255, 0.54); }\n  .mdc-temporary-drawer--selected.mdc-list-item,\n  .mdc-temporary-drawer--selected.mdc-list-item .mdc-list-item__start-detail {\n    color: #3f51b5;\n    color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-temporary-drawer .mdc-list-item::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    border-radius: inherit;\n    background: currentColor;\n    content: \"\";\n    opacity: 0; }\n  .mdc-temporary-drawer .mdc-list-item:focus::before {\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .12; }\n  .mdc-temporary-drawer .mdc-list-item:active::before {\n    /*\n      Slightly darker value for visual distinction.\n      This allows a full base that has distinct modes.\n      Progressive enhancement with ripples will provide complete button spec alignment.\n    */\n    transition: opacity 180ms 0ms cubic-bezier(0, 0, 0.2, 1);\n    opacity: .18; }\n  .mdc-temporary-drawer .mdc-list-item:active:focus::before {\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  .mdc-temporary-drawer::before {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.6);\n    content: \"\";\n    opacity: 0;\n    opacity: var(--mdc-temporary-drawer-opacity, 0);\n    will-change: opacity;\n    box-sizing: border-box; }\n  .mdc-temporary-drawer__drawer {\n    background: #fff;\n    background: var(--mdc-theme-background, #fff);\n    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n    left: 0;\n    right: initial;\n    height: 100%;\n    transform: translateX(-107%);\n    transform: translateX(calc(-100% - 20px));\n    will-change: transform;\n    display: flex;\n    position: absolute;\n    flex-direction: column;\n    width: calc(100% - 56px);\n    max-width: 280px;\n    box-sizing: border-box;\n    overflow: hidden;\n    touch-action: none;\n    /* TODO(sgomes): replace with global breakpoints when we have them */ }\n    [dir=\"rtl\"] .mdc-temporary-drawer__drawer, .mdc-temporary-drawer__drawer[dir=\"rtl\"] {\n      left: initial;\n      right: 0; }\n    .mdc-temporary-drawer--theme-dark .mdc-temporary-drawer__drawer,\n    .mdc-theme--dark .mdc-temporary-drawer__drawer {\n      background: #303030;\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n    [dir=\"rtl\"] .mdc-temporary-drawer__drawer .mdc-temporary-drawer__drawer,\n    .mdc-temporary-drawer__drawer[dir=\"rtl\"] .mdc-temporary-drawer__drawer {\n      transform: translateX(107%);\n      transform: translateX(calc(100% + 20px)); }\n    @media (min-width: 600px) {\n      .mdc-temporary-drawer__drawer {\n        width: calc(100% - 64px);\n        max-width: 320px; } }\n  .mdc-temporary-drawer__content {\n    flex-grow: 1;\n    margin: 0;\n    overflow-x: hidden;\n    overflow-y: auto;\n    box-sizing: border-box;\n    -webkit-overflow-scrolling: touch;\n    touch-action: pan-y; }\n  .mdc-temporary-drawer__footer {\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n    flex-shrink: 0; }\n  .mdc-temporary-drawer--animating::before {\n    transition: opacity 0.3s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-temporary-drawer--animating.mdc-temporary-drawer--open .mdc-temporary-drawer__drawer {\n    transition: transform 0.33s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-temporary-drawer--animating .mdc-temporary-drawer__drawer {\n    transition: transform 0.13s 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-temporary-drawer--open {\n    pointer-events: auto; }\n    .mdc-temporary-drawer--open::before {\n      opacity: 1;\n      opacity: var(--mdc-temporary-drawer-opacity, 1); }\n    .mdc-temporary-drawer--open .mdc-temporary-drawer__drawer {\n      transform: none; }\n    [dir=\"rtl\"] .mdc-temporary-drawer--open .mdc-temporary-drawer__drawer, .mdc-temporary-drawer--open[dir=\"rtl\"] .mdc-temporary-drawer__drawer {\n      transform: none; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n.mdc-elevation--z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation--z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\n\n.mdc-elevation-transition {\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  will-change: box-shadow; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n.mdc-fab {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  display: inline-flex;\n  position: relative;\n  justify-content: center;\n  width: 56px;\n  height: 56px;\n  padding: 0;\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  user-select: none;\n  box-sizing: border-box;\n  fill: currentColor;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  overflow: hidden;\n  background-color: #ff4081;\n  background-color: var(--mdc-theme-accent, #ff4081);\n  color: white;\n  color: var(--mdc-theme-text-primary-on-accent, white);\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n  .mdc-fab:not(.mdc-ripple-upgraded):hover::before, .mdc-fab:not(.mdc-ripple-upgraded):focus::before, .mdc-fab:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-fab::before {\n    background-color: rgba(255, 255, 255, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-fab.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-fab.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-fab.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-fab.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-fab::after {\n    background-color: rgba(255, 255, 255, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-fab.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-fab:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-fab.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-fab.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-fab.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-fab:not(.mdc-ripple-upgraded) {\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0.18); }\n  .mdc-fab--mini {\n    width: 40px;\n    height: 40px; }\n  .mdc-fab--plain {\n    background-color: white;\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }\n    .mdc-fab--plain::before {\n      background-color: rgba(0, 0, 0, 0.06);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n    .mdc-fab--plain.mdc-ripple-upgraded::before {\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      transform: scale(0);\n      transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-fab--plain.mdc-ripple-upgraded--background-focused::before {\n      opacity: .99999; }\n    .mdc-fab--plain.mdc-ripple-upgraded--background-active-fill::before {\n      transition-duration: 120ms;\n      opacity: 1; }\n    .mdc-fab--plain.mdc-ripple-upgraded--unbounded::before {\n      top: calc(50% - 50%);\n      top: var(--mdc-ripple-top, calc(50% - 50%));\n      left: calc(50% - 50%);\n      left: var(--mdc-ripple-left, calc(50% - 50%));\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      transform: scale(0);\n      transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n    .mdc-fab--plain::after {\n      background-color: rgba(0, 0, 0, 0.06);\n      position: absolute;\n      top: calc(50% - 100%);\n      left: calc(50% - 100%);\n      width: 200%;\n      height: 200%;\n      transition: opacity 250ms linear;\n      border-radius: 50%;\n      opacity: 0;\n      pointer-events: none;\n      content: \"\"; }\n    .mdc-fab--plain.mdc-ripple-upgraded::after {\n      top: 0;\n      left: 0;\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      transform: scale(0);\n      transform-origin: center center;\n      opacity: 0; }\n    .mdc-fab--plain:not(.mdc-ripple-upgraded--unbounded)::after {\n      transform-origin: center center; }\n    .mdc-fab--plain.mdc-ripple-upgraded--unbounded::after {\n      top: 0;\n      top: var(--mdc-ripple-top, 0);\n      left: 0;\n      left: var(--mdc-ripple-left, 0);\n      width: 100%;\n      width: var(--mdc-ripple-fg-size, 100%);\n      height: 100%;\n      height: var(--mdc-ripple-fg-size, 100%);\n      transform: scale(0);\n      transform-origin: center center; }\n    .mdc-fab--plain.mdc-ripple-upgraded--foreground-activation::after {\n      animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n    .mdc-fab--plain.mdc-ripple-upgraded--foreground-deactivation::after {\n      transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n      animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-fab:active, .mdc-fab:focus {\n    outline: none; }\n  .mdc-fab:active {\n    box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\n  .mdc-fab:hover {\n    cursor: pointer; }\n  .mdc-fab::-moz-focus-inner {\n    padding: 0;\n    border: 0; }\n  .mdc-fab > svg {\n    width: 100%; }\n  fieldset:disabled .mdc-fab, .mdc-fab:disabled {\n    background-color: rgba(0, 0, 0, 0.12);\n    color: rgba(0, 0, 0, 0.26);\n    cursor: default;\n    pointer-events: none; }\n\n.mdc-fab__icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%; }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* stylelint-disable selector-no-type */\n.mdc-form-field {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.25rem;\n  color: rgba(0, 0, 0, 0.87);\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  display: inline-flex;\n  align-items: center;\n  vertical-align: middle; }\n  .mdc-form-field--theme-dark,\n  .mdc-theme--dark .mdc-form-field {\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white); }\n  .mdc-form-field > label {\n    order: 0;\n    margin-right: auto;\n    padding-left: 4px; }\n  [dir=\"rtl\"] .mdc-form-field > label, .mdc-form-field[dir=\"rtl\"] > label {\n    margin-left: auto;\n    padding-right: 4px; }\n\n.mdc-form-field--align-end > label {\n  order: -1;\n  margin-left: auto;\n  padding-right: 4px; }\n\n[dir=\"rtl\"] .mdc-form-field--align-end > label, .mdc-form-field--align-end[dir=\"rtl\"] > label {\n  margin-right: auto;\n  padding-left: 4px; }\n\n/* stylelint-enable selector-no-type */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-grid-list .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 1); }\n\n.mdc-grid-list .mdc-grid-tile {\n  margin: 2px 0;\n  padding: 0 2px; }\n  .mdc-grid-list .mdc-grid-tile__secondary {\n    left: 2px;\n    width: calc(100% - 4px); }\n\n.mdc-grid-list .mdc-grid-list__tiles {\n  margin: 2px auto; }\n\n.mdc-grid-list__tiles {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0; }\n\n.mdc-grid-list--tile-gutter-1 .mdc-grid-tile {\n  margin: 0.5px 0;\n  padding: 0 0.5px; }\n  .mdc-grid-list--tile-gutter-1 .mdc-grid-tile__secondary {\n    left: 0.5px;\n    width: calc(100% - 1px); }\n\n.mdc-grid-list--tile-gutter-1 .mdc-grid-list__tiles {\n  margin: 0.5px auto; }\n\n.mdc-grid-list--tile-aspect-16x9 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 1.77778); }\n\n.mdc-grid-list--tile-aspect-3x2 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 1.5); }\n\n.mdc-grid-list--tile-aspect-2x3 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 0.66667); }\n\n.mdc-grid-list--tile-aspect-4x3 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 1.33333); }\n\n.mdc-grid-list--tile-aspect-3x4 .mdc-grid-tile__primary {\n  padding-bottom: calc(100% / 0.75); }\n\n.mdc-grid-list--twoline-caption .mdc-grid-tile__secondary {\n  height: 68px; }\n\n.mdc-grid-list--header-caption .mdc-grid-tile__secondary {\n  top: 0;\n  bottom: auto; }\n\n.mdc-grid-list--with-icon-align-start .mdc-grid-tile__secondary {\n  padding-left: 56px;\n  padding-right: 8px; }\n  [dir=\"rtl\"] .mdc-grid-list .mdc-grid-list--with-icon-align-start .mdc-grid-tile__secondary,\n  .mdc-grid-list[dir=\"rtl\"] .mdc-grid-list--with-icon-align-start .mdc-grid-tile__secondary {\n    padding-left: 8px;\n    padding-right: 56px; }\n\n.mdc-grid-list--with-icon-align-start .mdc-grid-tile__icon {\n  left: 16px;\n  right: initial;\n  font-size: 24px; }\n  [dir=\"rtl\"] .mdc-grid-list .mdc-grid-list--with-icon-align-start .mdc-grid-tile__icon,\n  .mdc-grid-list[dir=\"rtl\"] .mdc-grid-list--with-icon-align-start .mdc-grid-tile__icon {\n    left: initial;\n    right: 16px; }\n\n.mdc-grid-list--with-icon-align-end .mdc-grid-tile__secondary {\n  padding-left: 16px;\n  padding-right: 56px; }\n  [dir=\"rtl\"] .mdc-grid-list .mdc-grid-list--with-icon-align-end .mdc-grid-tile__secondary,\n  .mdc-grid-list[dir=\"rtl\"] .mdc-grid-list--with-icon-align-end .mdc-grid-tile__secondary {\n    padding-left: 56px;\n    padding-right: 16px; }\n\n.mdc-grid-list--with-icon-align-end .mdc-grid-tile__icon {\n  left: initial;\n  right: 16px;\n  font-size: 24px; }\n  [dir=\"rtl\"] .mdc-grid-list .mdc-grid-list--with-icon-align-end .mdc-grid-tile__icon,\n  .mdc-grid-list[dir=\"rtl\"] .mdc-grid-list--with-icon-align-end .mdc-grid-tile__icon {\n    left: 16px;\n    right: initial; }\n\n.mdc-grid-tile {\n  display: block;\n  position: relative;\n  width: var(--mdc-grid-list-tile-width, 200px); }\n  .mdc-grid-tile__primary {\n    position: relative;\n    height: 0;\n    background-color: #fff;\n    background-color: var(--mdc-theme-background, #fff);\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)); }\n    .mdc-grid-tile__primary-content {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: cover; }\n  .mdc-grid-tile__secondary {\n    position: absolute;\n    box-sizing: border-box;\n    bottom: 0;\n    height: 48px;\n    padding: 16px;\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5);\n    color: white;\n    color: var(--mdc-theme-text-primary-on-primary, white); }\n  .mdc-grid-tile__title {\n    display: block;\n    margin: 0;\n    padding: 0;\n    font-size: 1rem;\n    font-weight: 500;\n    line-height: 1rem;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden; }\n  .mdc-grid-tile__support-text {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 400;\n    letter-spacing: 0.04em;\n    line-height: 1.25rem;\n    display: block;\n    margin: 0;\n    margin-top: 4px;\n    padding: 0; }\n  .mdc-grid-tile__icon {\n    position: absolute;\n    top: calc(50% - 24px / 2);\n    font-size: 0; }\n\n/** postcss-bem-linter: define icon-toggle */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n.mdc-icon-toggle {\n  color: rgba(0, 0, 0, 0.54);\n  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  will-change: initial;\n  display: flex;\n  position: relative;\n  box-sizing: border-box;\n  align-items: center;\n  justify-content: center;\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n  outline: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  user-select: none; }\n  .mdc-icon-toggle:not(.mdc-ripple-upgraded):hover::before, .mdc-icon-toggle:not(.mdc-ripple-upgraded):focus::before, .mdc-icon-toggle:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-icon-toggle::before {\n    background-color: rgba(0, 0, 0, 0.062);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-icon-toggle.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle::after {\n    background-color: rgba(0, 0, 0, 0.062);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-icon-toggle.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-icon-toggle:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle::before,\n  .mdc-theme--dark .mdc-icon-toggle::before {\n    background-color: rgba(255, 255, 255, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded::before,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--unbounded::before,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle::after,\n  .mdc-theme--dark .mdc-icon-toggle::after {\n    background-color: rgba(255, 255, 255, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded::after,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle:not(.mdc-ripple-upgraded--unbounded)::after,\n  .mdc-theme--dark .mdc-icon-toggle:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after,\n  .mdc-theme--dark .mdc-icon-toggle.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-icon-toggle::after {\n    position: absolute;\n    border-radius: 50%;\n    content: \"\";\n    opacity: 0;\n    pointer-events: none; }\n  .mdc-icon-toggle--theme-dark,\n  .mdc-theme--dark .mdc-icon-toggle {\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white); }\n\n.mdc-icon-toggle--primary {\n  color: #3f51b5;\n  color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-icon-toggle--primary::before {\n    background-color: rgba(63, 81, 181, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-icon-toggle--primary::before {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle--primary::after {\n    background-color: rgba(63, 81, 181, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-icon-toggle--primary::after {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-icon-toggle--primary:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-icon-toggle--primary.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n\n.mdc-icon-toggle--accent {\n  color: #ff4081;\n  color: var(--mdc-theme-accent, #ff4081); }\n  .mdc-icon-toggle--accent::before {\n    background-color: rgba(255, 64, 129, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-icon-toggle--accent::before {\n        background-color: color(var(--mdc-theme-accent, #ff4081) a(14%)); } }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-icon-toggle--accent::after {\n    background-color: rgba(255, 64, 129, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-icon-toggle--accent::after {\n        background-color: color(var(--mdc-theme-accent, #ff4081) a(14%)); } }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-icon-toggle--accent:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-icon-toggle--accent.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n\n.mdc-icon-toggle--disabled {\n  color: rgba(0, 0, 0, 0.38);\n  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));\n  pointer-events: none; }\n  .mdc-icon-toggle--theme-dark.mdc-icon-toggle--disabled,\n  .mdc-theme--dark .mdc-icon-toggle--disabled {\n    color: rgba(255, 255, 255, 0.5);\n    color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }\n\n/** postcss-bem-linter: end */\n.mdc-layout-grid {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: stretch;\n  margin: 0 auto;\n  box-sizing: border-box;\n  padding: 8px;\n  padding: calc(var(--mdc-layout-grid-margin, 16px) - var(--mdc-layout-grid-gutter, 16px) / 2); }\n  @supports (display: grid) {\n    .mdc-layout-grid {\n      display: grid;\n      grid-gap: 16px;\n      grid-gap: var(--mdc-layout-grid-gutter, 16px);\n      padding: 16px;\n      padding: var(--mdc-layout-grid-margin, 16px); }\n      @media (min-width: 840px) {\n        .mdc-layout-grid {\n          grid-template-columns: repeat(12, minmax(0, 1fr)); } }\n      @media (min-width: 480px) and (max-width: 839px) {\n        .mdc-layout-grid {\n          grid-template-columns: repeat(8, minmax(0, 1fr)); } }\n      @media (max-width: 479px) {\n        .mdc-layout-grid {\n          grid-template-columns: repeat(4, minmax(0, 1fr)); } } }\n\n.mdc-layout-grid__cell {\n  margin: 8px;\n  margin: calc(var(--mdc-layout-grid-gutter, 16px) / 2);\n  box-sizing: border-box; }\n  @supports (display: grid) {\n    .mdc-layout-grid__cell {\n      margin: 0; } }\n  @media (min-width: 840px) {\n    .mdc-layout-grid__cell {\n      width: calc(33.33333% - 16px);\n      width: calc(33.33333% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell {\n          width: auto;\n          grid-column-end: span 4; } } }\n  @media (min-width: 480px) and (max-width: 839px) {\n    .mdc-layout-grid__cell {\n      width: calc(50% - 16px);\n      width: calc(50% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell {\n          width: auto;\n          grid-column-end: span 4; } } }\n  @media (max-width: 479px) {\n    .mdc-layout-grid__cell {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell {\n          width: auto;\n          grid-column-end: span 4; } } }\n  @media (min-width: 840px) {\n    .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-desktop.mdc-layout-grid__cell--span-1-desktop {\n      width: calc(8.33333% - 16px);\n      width: calc(8.33333% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-desktop.mdc-layout-grid__cell--span-1-desktop {\n          width: auto;\n          grid-column-end: span 1; } }\n    .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-desktop.mdc-layout-grid__cell--span-2-desktop {\n      width: calc(16.66667% - 16px);\n      width: calc(16.66667% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-desktop.mdc-layout-grid__cell--span-2-desktop {\n          width: auto;\n          grid-column-end: span 2; } }\n    .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-desktop.mdc-layout-grid__cell--span-3-desktop {\n      width: calc(25% - 16px);\n      width: calc(25% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-desktop.mdc-layout-grid__cell--span-3-desktop {\n          width: auto;\n          grid-column-end: span 3; } }\n    .mdc-layout-grid__cell--span-4, .mdc-layout-grid__cell--span-4-desktop.mdc-layout-grid__cell--span-4-desktop {\n      width: calc(33.33333% - 16px);\n      width: calc(33.33333% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-4, .mdc-layout-grid__cell--span-4-desktop.mdc-layout-grid__cell--span-4-desktop {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-desktop.mdc-layout-grid__cell--span-5-desktop {\n      width: calc(41.66667% - 16px);\n      width: calc(41.66667% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-desktop.mdc-layout-grid__cell--span-5-desktop {\n          width: auto;\n          grid-column-end: span 5; } }\n    .mdc-layout-grid__cell--span-6, .mdc-layout-grid__cell--span-6-desktop.mdc-layout-grid__cell--span-6-desktop {\n      width: calc(50% - 16px);\n      width: calc(50% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-6, .mdc-layout-grid__cell--span-6-desktop.mdc-layout-grid__cell--span-6-desktop {\n          width: auto;\n          grid-column-end: span 6; } }\n    .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-desktop.mdc-layout-grid__cell--span-7-desktop {\n      width: calc(58.33333% - 16px);\n      width: calc(58.33333% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-desktop.mdc-layout-grid__cell--span-7-desktop {\n          width: auto;\n          grid-column-end: span 7; } }\n    .mdc-layout-grid__cell--span-8, .mdc-layout-grid__cell--span-8-desktop.mdc-layout-grid__cell--span-8-desktop {\n      width: calc(66.66667% - 16px);\n      width: calc(66.66667% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-8, .mdc-layout-grid__cell--span-8-desktop.mdc-layout-grid__cell--span-8-desktop {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-desktop.mdc-layout-grid__cell--span-9-desktop {\n      width: calc(75% - 16px);\n      width: calc(75% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-desktop.mdc-layout-grid__cell--span-9-desktop {\n          width: auto;\n          grid-column-end: span 9; } }\n    .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-desktop.mdc-layout-grid__cell--span-10-desktop {\n      width: calc(83.33333% - 16px);\n      width: calc(83.33333% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-desktop.mdc-layout-grid__cell--span-10-desktop {\n          width: auto;\n          grid-column-end: span 10; } }\n    .mdc-layout-grid__cell--span-11, .mdc-layout-grid__cell--span-11-desktop.mdc-layout-grid__cell--span-11-desktop {\n      width: calc(91.66667% - 16px);\n      width: calc(91.66667% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-11, .mdc-layout-grid__cell--span-11-desktop.mdc-layout-grid__cell--span-11-desktop {\n          width: auto;\n          grid-column-end: span 11; } }\n    .mdc-layout-grid__cell--span-12, .mdc-layout-grid__cell--span-12-desktop.mdc-layout-grid__cell--span-12-desktop {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-12, .mdc-layout-grid__cell--span-12-desktop.mdc-layout-grid__cell--span-12-desktop {\n          width: auto;\n          grid-column-end: span 12; } } }\n  @media (min-width: 480px) and (max-width: 839px) {\n    .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-tablet.mdc-layout-grid__cell--span-1-tablet {\n      width: calc(12.5% - 16px);\n      width: calc(12.5% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-tablet.mdc-layout-grid__cell--span-1-tablet {\n          width: auto;\n          grid-column-end: span 1; } }\n    .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-tablet.mdc-layout-grid__cell--span-2-tablet {\n      width: calc(25% - 16px);\n      width: calc(25% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-tablet.mdc-layout-grid__cell--span-2-tablet {\n          width: auto;\n          grid-column-end: span 2; } }\n    .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-tablet.mdc-layout-grid__cell--span-3-tablet {\n      width: calc(37.5% - 16px);\n      width: calc(37.5% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-tablet.mdc-layout-grid__cell--span-3-tablet {\n          width: auto;\n          grid-column-end: span 3; } }\n    .mdc-layout-grid__cell--span-4, .mdc-layout-grid__cell--span-4-tablet.mdc-layout-grid__cell--span-4-tablet {\n      width: calc(50% - 16px);\n      width: calc(50% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-4, .mdc-layout-grid__cell--span-4-tablet.mdc-layout-grid__cell--span-4-tablet {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-tablet.mdc-layout-grid__cell--span-5-tablet {\n      width: calc(62.5% - 16px);\n      width: calc(62.5% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-tablet.mdc-layout-grid__cell--span-5-tablet {\n          width: auto;\n          grid-column-end: span 5; } }\n    .mdc-layout-grid__cell--span-6, .mdc-layout-grid__cell--span-6-tablet.mdc-layout-grid__cell--span-6-tablet {\n      width: calc(75% - 16px);\n      width: calc(75% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-6, .mdc-layout-grid__cell--span-6-tablet.mdc-layout-grid__cell--span-6-tablet {\n          width: auto;\n          grid-column-end: span 6; } }\n    .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-tablet.mdc-layout-grid__cell--span-7-tablet {\n      width: calc(87.5% - 16px);\n      width: calc(87.5% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-tablet.mdc-layout-grid__cell--span-7-tablet {\n          width: auto;\n          grid-column-end: span 7; } }\n    .mdc-layout-grid__cell--span-8, .mdc-layout-grid__cell--span-8-tablet.mdc-layout-grid__cell--span-8-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-8, .mdc-layout-grid__cell--span-8-tablet.mdc-layout-grid__cell--span-8-tablet {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-tablet.mdc-layout-grid__cell--span-9-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-tablet.mdc-layout-grid__cell--span-9-tablet {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-tablet.mdc-layout-grid__cell--span-10-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-tablet.mdc-layout-grid__cell--span-10-tablet {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-11, .mdc-layout-grid__cell--span-11-tablet.mdc-layout-grid__cell--span-11-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-11, .mdc-layout-grid__cell--span-11-tablet.mdc-layout-grid__cell--span-11-tablet {\n          width: auto;\n          grid-column-end: span 8; } }\n    .mdc-layout-grid__cell--span-12, .mdc-layout-grid__cell--span-12-tablet.mdc-layout-grid__cell--span-12-tablet {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-12, .mdc-layout-grid__cell--span-12-tablet.mdc-layout-grid__cell--span-12-tablet {\n          width: auto;\n          grid-column-end: span 8; } } }\n  @media (max-width: 479px) {\n    .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-phone.mdc-layout-grid__cell--span-1-phone {\n      width: calc(25% - 16px);\n      width: calc(25% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-1, .mdc-layout-grid__cell--span-1-phone.mdc-layout-grid__cell--span-1-phone {\n          width: auto;\n          grid-column-end: span 1; } }\n    .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-phone.mdc-layout-grid__cell--span-2-phone {\n      width: calc(50% - 16px);\n      width: calc(50% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-2, .mdc-layout-grid__cell--span-2-phone.mdc-layout-grid__cell--span-2-phone {\n          width: auto;\n          grid-column-end: span 2; } }\n    .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-phone.mdc-layout-grid__cell--span-3-phone {\n      width: calc(75% - 16px);\n      width: calc(75% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-3, .mdc-layout-grid__cell--span-3-phone.mdc-layout-grid__cell--span-3-phone {\n          width: auto;\n          grid-column-end: span 3; } }\n    .mdc-layout-grid__cell--span-4, .mdc-layout-grid__cell--span-4-phone.mdc-layout-grid__cell--span-4-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-4, .mdc-layout-grid__cell--span-4-phone.mdc-layout-grid__cell--span-4-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-phone.mdc-layout-grid__cell--span-5-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-5, .mdc-layout-grid__cell--span-5-phone.mdc-layout-grid__cell--span-5-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-6, .mdc-layout-grid__cell--span-6-phone.mdc-layout-grid__cell--span-6-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-6, .mdc-layout-grid__cell--span-6-phone.mdc-layout-grid__cell--span-6-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-phone.mdc-layout-grid__cell--span-7-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-7, .mdc-layout-grid__cell--span-7-phone.mdc-layout-grid__cell--span-7-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-8, .mdc-layout-grid__cell--span-8-phone.mdc-layout-grid__cell--span-8-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-8, .mdc-layout-grid__cell--span-8-phone.mdc-layout-grid__cell--span-8-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-phone.mdc-layout-grid__cell--span-9-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-9, .mdc-layout-grid__cell--span-9-phone.mdc-layout-grid__cell--span-9-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-phone.mdc-layout-grid__cell--span-10-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-10, .mdc-layout-grid__cell--span-10-phone.mdc-layout-grid__cell--span-10-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-11, .mdc-layout-grid__cell--span-11-phone.mdc-layout-grid__cell--span-11-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-11, .mdc-layout-grid__cell--span-11-phone.mdc-layout-grid__cell--span-11-phone {\n          width: auto;\n          grid-column-end: span 4; } }\n    .mdc-layout-grid__cell--span-12, .mdc-layout-grid__cell--span-12-phone.mdc-layout-grid__cell--span-12-phone {\n      width: calc(100% - 16px);\n      width: calc(100% - var(--mdc-layout-grid-gutter, 16px)); }\n      @supports (display: grid) {\n        .mdc-layout-grid__cell--span-12, .mdc-layout-grid__cell--span-12-phone.mdc-layout-grid__cell--span-12-phone {\n          width: auto;\n          grid-column-end: span 4; } } }\n  .mdc-layout-grid__cell--order-1 {\n    order: 1; }\n  .mdc-layout-grid__cell--order-2 {\n    order: 2; }\n  .mdc-layout-grid__cell--order-3 {\n    order: 3; }\n  .mdc-layout-grid__cell--order-4 {\n    order: 4; }\n  .mdc-layout-grid__cell--order-5 {\n    order: 5; }\n  .mdc-layout-grid__cell--order-6 {\n    order: 6; }\n  .mdc-layout-grid__cell--order-7 {\n    order: 7; }\n  .mdc-layout-grid__cell--order-8 {\n    order: 8; }\n  .mdc-layout-grid__cell--order-9 {\n    order: 9; }\n  .mdc-layout-grid__cell--order-10 {\n    order: 10; }\n  .mdc-layout-grid__cell--order-11 {\n    order: 11; }\n  .mdc-layout-grid__cell--order-12 {\n    order: 12; }\n  .mdc-layout-grid__cell--align-top {\n    align-self: flex-start; }\n    @supports (display: grid) {\n      .mdc-layout-grid__cell--align-top {\n        align-self: start; } }\n  .mdc-layout-grid__cell--align-middle {\n    align-self: center; }\n  .mdc-layout-grid__cell--align-bottom {\n    align-self: flex-end; }\n    @supports (display: grid) {\n      .mdc-layout-grid__cell--align-bottom {\n        align-self: end; } }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-list {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.75rem;\n  color: rgba(0, 0, 0, 0.87);\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n  margin: 0;\n  padding: 8px 16px 0;\n  line-height: 1.5rem;\n  list-style-type: none; }\n  .mdc-list--theme-dark,\n  .mdc-theme--dark .mdc-list {\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white); }\n\n.mdc-list--dense {\n  padding-top: 4px;\n  font-size: .812rem; }\n\n.mdc-list-item {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  height: 48px; }\n  .mdc-list-item__start-detail {\n    width: 24px;\n    height: 24px;\n    margin-left: 0;\n    margin-right: 32px; }\n    [dir=\"rtl\"] .mdc-list-item .mdc-list-item__start-detail,\n    .mdc-list-item[dir=\"rtl\"] .mdc-list-item__start-detail {\n      margin-left: 32px;\n      margin-right: 0; }\n  .mdc-list-item__end-detail {\n    width: 24px;\n    height: 24px;\n    margin-left: auto;\n    margin-right: 16px; }\n    [dir=\"rtl\"] .mdc-list-item .mdc-list-item__end-detail,\n    .mdc-list-item[dir=\"rtl\"] .mdc-list-item__end-detail {\n      margin-left: 16px;\n      margin-right: auto; }\n  .mdc-list-item__text {\n    display: inline-flex;\n    flex-direction: column; }\n    .mdc-list-item__text__secondary {\n      font-family: Roboto, sans-serif;\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-font-smoothing: antialiased;\n      font-size: 0.875rem;\n      font-weight: 400;\n      letter-spacing: 0.04em;\n      line-height: 1.25rem;\n      color: rgba(0, 0, 0, 0.54);\n      color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)); }\n      .mdc-list-item__text__secondary--theme-dark,\n      .mdc-theme--dark .mdc-list-item__text__secondary {\n        color: rgba(255, 255, 255, 0.7);\n        color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n      .mdc-list--dense .mdc-list-item__text__secondary {\n        font-size: inherit; }\n  .mdc-list--dense .mdc-list-item {\n    height: 40px; }\n    .mdc-list--dense .mdc-list-item__start-detail {\n      width: 20px;\n      height: 20px;\n      margin-left: 0;\n      margin-right: 36px; }\n      [dir=\"rtl\"] .mdc-list-item .mdc-list--dense .mdc-list-item__start-detail,\n      .mdc-list-item[dir=\"rtl\"] .mdc-list--dense .mdc-list-item__start-detail {\n        margin-left: 36px;\n        margin-right: 0; }\n    .mdc-list--dense .mdc-list-item__end-detail {\n      width: 20px;\n      height: 20px; }\n  .mdc-list--avatar-list .mdc-list-item {\n    height: 56px; }\n    .mdc-list--avatar-list .mdc-list-item__start-detail {\n      width: 40px;\n      height: 40px;\n      margin-left: 0;\n      margin-right: 16px;\n      border-radius: 50%; }\n      [dir=\"rtl\"] .mdc-list-item .mdc-list--avatar-list .mdc-list-item__start-detail,\n      .mdc-list-item[dir=\"rtl\"] .mdc-list--avatar-list .mdc-list-item__start-detail {\n        margin-left: 16px;\n        margin-right: 0; }\n  .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item {\n    height: 48px; }\n    .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail {\n      width: 36px;\n      height: 36px;\n      margin-left: 0;\n      margin-right: 20px; }\n      [dir=\"rtl\"] .mdc-list-item .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail,\n      .mdc-list-item[dir=\"rtl\"] .mdc-list-item .mdc-list--avatar-list.mdc-list--dense .mdc-list__item__start-detail {\n        margin-left: 20px;\n        margin-right: 0; }\n  .mdc-list--two-line .mdc-list-item {\n    height: 72px; }\n  .mdc-list--two-line.mdc-list--dense .mdc-list-item {\n    height: 60px; }\n\na.mdc-list-item {\n  color: inherit;\n  text-decoration: none; }\n\n.mdc-list-item.mdc-ripple-upgraded {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  position: relative;\n  left: -16px;\n  width: 100%;\n  padding: 0 16px;\n  overflow: hidden; }\n  .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):hover::before, .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):focus::before, .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-list-item.mdc-ripple-upgraded::before {\n    background-color: rgba(0, 0, 0, 0.06);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-list-item.mdc-ripple-upgraded::after {\n    background-color: rgba(0, 0, 0, 0.06);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-list-item.mdc-ripple-upgraded:focus {\n    outline: none; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded::before,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded::before {\n    background-color: rgba(255, 255, 255, 0.12);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded::after,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded::after {\n    background-color: rgba(255, 255, 255, 0.12);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-list--theme-dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after,\n  .mdc-theme--dark .mdc-list-item.mdc-ripple-upgraded.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n\n.mdc-list-divider {\n  height: 0;\n  margin: 0;\n  border: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\n  .mdc-list--theme-dark .mdc-list-divider,\n  .mdc-theme--dark .mdc-list-divider {\n    border-bottom-color: rgba(255, 255, 255, 0.2); }\n\n.mdc-list-divider--inset {\n  margin-left: 56px;\n  margin-right: 0;\n  width: calc(100% - 56px); }\n  [dir=\"rtl\"] .mdc-list-group .mdc-list-divider--inset,\n  .mdc-list-group[dir=\"rtl\"] .mdc-list-divider--inset {\n    margin-left: 0;\n    margin-right: 56px; }\n\n.mdc-list-group {\n  padding: 0 16px; }\n  .mdc-list-group__subheader {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    line-height: 1.5rem;\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n    margin: 0.75rem 0; }\n    .mdc-list-group__subheader--theme-dark,\n    .mdc-theme--dark .mdc-list-group__subheader {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n  .mdc-list-group .mdc-list {\n    padding: 0; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* postcss-bem-linter: define simple-menu */\n.mdc-simple-menu {\n  display: none;\n  position: absolute;\n  max-width: calc(100vw - 32px);\n  max-height: calc(100vh - 32px);\n  margin: 0;\n  padding: 0;\n  transform: scale(0);\n  transform-origin: top left;\n  border-radius: 2px;\n  background-color: white;\n  white-space: nowrap;\n  opacity: 0;\n  overflow: hidden;\n  box-sizing: border-box;\n  will-change: transform, opacity;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  /* stylelint-disable plugin/selector-bem-pattern */\n  /* stylelint-enable plugin/selector-bem-pattern */\n  /* stylelint-disable plugin/selector-bem-pattern */\n  /* stylelint-disable selector-no-qualifying-type */\n  /* stylelint-enable selector-no-qualifying-type */\n  /* TODO(sgomes): Revisit when we have interactive lists. */\n  /* stylelint-enable plugin/selector-bem-pattern */ }\n  .mdc-simple-menu--theme-dark,\n  .mdc-theme--dark .mdc-simple-menu {\n    background-color: #424242; }\n  .mdc-simple-menu:focus {\n    outline: none; }\n  .mdc-simple-menu--open {\n    display: inline-block;\n    transform: scale(1);\n    opacity: 1; }\n  .mdc-simple-menu--animating {\n    display: inline-block;\n    transition: opacity 0.2s cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-simple-menu__items {\n    display: inline-block;\n    overflow-x: hidden;\n    overflow-y: auto;\n    box-sizing: border-box;\n    will-change: transform;\n    /* stylelint-disable plugin/selector-bem-pattern, selector-no-universal */\n    /* stylelint-enable plugin/selector-bem-pattern, selector-no-universal */ }\n    .mdc-simple-menu__items > * {\n      opacity: 0; }\n    .mdc-simple-menu__items > .mdc-list-item {\n      cursor: pointer; }\n    .mdc-simple-menu--animating .mdc-simple-menu__items {\n      overflow-y: hidden; }\n      .mdc-simple-menu--animating .mdc-simple-menu__items > * {\n        transition-duration: 0.3s;\n        transition-property: opacity;\n        transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }\n    .mdc-simple-menu--open .mdc-simple-menu__items > * {\n      opacity: 1;\n      will-change: opacity; }\n  [dir=\"rtl\"] .mdc-simple-menu {\n    transform-origin: top right; }\n  .mdc-simple-menu--open-from-top-left {\n    transform-origin: top left !important; }\n  .mdc-simple-menu--open-from-top-right {\n    transform-origin: top right !important; }\n  .mdc-simple-menu--open-from-bottom-left {\n    transform-origin: bottom left !important; }\n  .mdc-simple-menu--open-from-bottom-right {\n    transform-origin: bottom right !important; }\n  .mdc-simple-menu .mdc-list-group,\n  .mdc-simple-menu .mdc-list {\n    padding: 0; }\n  .mdc-simple-menu .mdc-list-item {\n    position: relative;\n    padding: 0 16px;\n    outline: none;\n    color: inherit;\n    text-decoration: none;\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 500;\n    letter-spacing: 0.04em;\n    line-height: 1.5rem; }\n    .mdc-simple-menu--theme-dark.mdc-simple-menu .mdc-list-item,\n    .mdc-theme--dark .mdc-simple-menu .mdc-list-item {\n      color: white; }\n  .mdc-simple-menu--theme-dark.mdc-simple-menu .mdc-list-divider,\n  .mdc-theme--dark .mdc-simple-menu .mdc-list-divider {\n    border-color: rgba(255, 255, 255, 0.12); }\n  .mdc-simple-menu .mdc-list-item__start-detail {\n    color: rgba(0, 0, 0, 0.54); }\n    .mdc-simple-menu--theme-dark.mdc-simple-menu .mdc-list-item__start-detail,\n    .mdc-theme--dark .mdc-simple-menu .mdc-list-item__start-detail {\n      color: rgba(255, 255, 255, 0.54); }\n  .mdc-simple-menu--selected.mdc-list-item,\n  .mdc-simple-menu--selected.mdc-list-item .mdc-list-item__start-detail {\n    color: #3f51b5;\n    color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-simple-menu .mdc-list-item::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transition: opacity 120ms cubic-bezier(0, 0, 0.2, 1);\n    border-radius: inherit;\n    background: currentColor;\n    content: \"\";\n    opacity: 0; }\n  .mdc-simple-menu .mdc-list-item:focus::before {\n    opacity: .12; }\n  .mdc-simple-menu .mdc-list-item:active::before {\n    /*\n      Slightly darker value for visual distinction.\n      This allows a full base that has distinct modes.\n      Progressive enhancement with ripples will provide complete button spec alignment.\n    */\n    opacity: .18; }\n\n/* postcss-bem-linter: end */\n.mdc-menu-anchor {\n  position: relative;\n  overflow: visible; }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n.mdc-radio {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  display: inline-block;\n  position: relative;\n  box-sizing: border-box;\n  width: 40px;\n  height: 40px;\n  flex: 0 0 40px;\n  padding: 10px;\n  cursor: pointer;\n  will-change: opacity, transform, border-color, background-color, color; }\n  .mdc-radio:not(.mdc-ripple-upgraded):hover::before, .mdc-radio:not(.mdc-ripple-upgraded):focus::before, .mdc-radio:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-radio::before {\n    background-color: rgba(63, 81, 181, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-radio::before {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }\n  .mdc-radio.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-radio.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-radio.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-radio.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-radio::after {\n    background-color: rgba(63, 81, 181, 0.14);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-radio::after {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(14%)); } }\n  .mdc-radio.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-radio:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-radio.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-radio.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-radio.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-radio::before, .mdc-radio::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%; }\n  .mdc-radio.mdc-ripple-upgraded .mdc-radio__background::before {\n    content: none; }\n  .mdc-radio__background {\n    display: inline-block;\n    position: absolute;\n    width: 50%;\n    height: 50%;\n    box-sizing: border-box; }\n    .mdc-radio__background::before {\n      background-color: #3f51b5;\n      background-color: var(--mdc-theme-primary, #3f51b5);\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      transform: scale(0, 0);\n      transition: opacity 120ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n      border-radius: 50%;\n      content: \"\";\n      opacity: 0;\n      pointer-events: none; }\n  .mdc-radio__outer-circle {\n    border-color: rgba(0, 0, 0, 0.54);\n    border-color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transition: border-color 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    border-width: 2px;\n    border-style: solid;\n    border-radius: 50%;\n    box-sizing: border-box; }\n    .mdc-radio--theme-dark .mdc-radio__outer-circle,\n    .mdc-theme--dark .mdc-radio__outer-circle {\n      border-color: rgba(255, 255, 255, 0.7);\n      border-color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n  .mdc-radio__inner-circle {\n    background-color: rgba(0, 0, 0, 0.54);\n    background-color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54));\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transform: scale(0, 0);\n    transition: transform 120ms 0ms cubic-bezier(0.4, 0, 1, 1), background-color 120ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    border-radius: 50%;\n    box-sizing: border-box; }\n    .mdc-radio--theme-dark .mdc-radio__inner-circle,\n    .mdc-theme--dark .mdc-radio__inner-circle {\n      background-color: rgba(255, 255, 255, 0.7);\n      background-color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n  .mdc-radio__native-control {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    cursor: inherit;\n    opacity: 0;\n    z-index: 1; }\n\n.mdc-radio__native-control:checked + .mdc-radio__background,\n.mdc-radio__native-control:disabled + .mdc-radio__background {\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__outer-circle,\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle {\n    transition: border-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n  .mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__inner-circle,\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle {\n    transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n\n.mdc-radio--disabled {\n  cursor: default;\n  pointer-events: none; }\n\n.mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__outer-circle {\n  border-color: #3f51b5;\n  border-color: var(--mdc-theme-primary, #3f51b5); }\n\n.mdc-radio__native-control:checked + .mdc-radio__background .mdc-radio__inner-circle {\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5);\n  transform: scale(0.5);\n  transition: transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1), background-color 120ms 0ms cubic-bezier(0, 0, 0.2, 1); }\n\n.mdc-radio__native-control:disabled + .mdc-radio__background,\nfieldset:disabled .mdc-radio__native-control + .mdc-radio__background,\n[aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background {\n  cursor: default; }\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle,\n  fieldset:disabled .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle,\n  [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle {\n    border-color: rgba(0, 0, 0, 0.26); }\n    .mdc-radio--theme-dark .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle,\n    .mdc-theme--dark .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__outer-circle, .mdc-radio--theme-dark\n    fieldset:disabled .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle,\n    .mdc-theme--dark\n    fieldset:disabled .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle, .mdc-radio--theme-dark\n    [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle,\n    .mdc-theme--dark\n    [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__outer-circle {\n      border-color: rgba(255, 255, 255, 0.3); }\n  .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle,\n  fieldset:disabled .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle,\n  [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle {\n    background-color: rgba(0, 0, 0, 0.26); }\n    .mdc-radio--theme-dark .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle,\n    .mdc-theme--dark .mdc-radio__native-control:disabled + .mdc-radio__background .mdc-radio__inner-circle, .mdc-radio--theme-dark\n    fieldset:disabled .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle,\n    .mdc-theme--dark\n    fieldset:disabled .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle, .mdc-radio--theme-dark\n    [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle,\n    .mdc-theme--dark\n    [aria-disabled=\"true\"] .mdc-radio__native-control + .mdc-radio__background .mdc-radio__inner-circle {\n      background-color: rgba(255, 255, 255, 0.3); }\n\n.mdc-radio__native-control:focus + .mdc-radio__background::before {\n  transform: scale(2, 2);\n  transition: opacity 120ms 0ms cubic-bezier(0, 0, 0.2, 1), transform 120ms 0ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: .26; }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/** MDC Ripple keyframes are split into their own file so that _mixins.scss can rely on them. */\n@keyframes mdc-ripple-fg-radius-in {\n  from {\n    transform: translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }\n  to {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1)); } }\n\n@keyframes mdc-ripple-fg-opacity-in {\n  from {\n    opacity: 0;\n    animation-timing-function: linear; }\n  to {\n    opacity: 1; } }\n\n@keyframes mdc-ripple-fg-opacity-out {\n  from {\n    opacity: 1;\n    animation-timing-function: linear; }\n  to {\n    opacity: 0; } }\n\n.mdc-ripple-surface {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: transparent;\n  position: relative;\n  outline: none;\n  overflow: hidden; }\n  .mdc-ripple-surface:not(.mdc-ripple-upgraded):hover::before, .mdc-ripple-surface:not(.mdc-ripple-upgraded):focus::before, .mdc-ripple-surface:not(.mdc-ripple-upgraded):active::after {\n    transition-duration: 85ms;\n    opacity: .6; }\n  .mdc-ripple-surface::before {\n    background-color: rgba(0, 0, 0, 0.06);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-ripple-surface.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-ripple-surface.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-ripple-surface.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-ripple-surface.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-ripple-surface::after {\n    background-color: rgba(0, 0, 0, 0.06);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n  .mdc-ripple-surface.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-ripple-surface:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-ripple-surface.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-ripple-surface.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-ripple-surface.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-ripple-surface[data-mdc-ripple-is-unbounded] {\n    overflow: visible; }\n  .mdc-ripple-surface--primary::before, .mdc-ripple-surface--primary::after {\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-ripple-surface--primary::before {\n    background-color: rgba(63, 81, 181, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-ripple-surface--primary::before {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(16%)); } }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-ripple-surface--primary::after {\n    background-color: rgba(63, 81, 181, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-ripple-surface--primary::after {\n        background-color: color(var(--mdc-theme-primary, #3f51b5) a(16%)); } }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-ripple-surface--primary:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-ripple-surface--primary.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n  .mdc-ripple-surface--accent::before, .mdc-ripple-surface--accent::after {\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-ripple-surface--accent::before {\n    background-color: rgba(255, 64, 129, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-ripple-surface--accent::before {\n        background-color: color(var(--mdc-theme-accent, #ff4081) a(16%)); } }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded::before {\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded--background-focused::before {\n    opacity: .99999; }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded--background-active-fill::before {\n    transition-duration: 120ms;\n    opacity: 1; }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded--unbounded::before {\n    top: calc(50% - 50%);\n    top: var(--mdc-ripple-top, calc(50% - 50%));\n    left: calc(50% - 50%);\n    left: var(--mdc-ripple-left, calc(50% - 50%));\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0)); }\n  .mdc-ripple-surface--accent::after {\n    background-color: rgba(255, 64, 129, 0.16);\n    position: absolute;\n    top: calc(50% - 100%);\n    left: calc(50% - 100%);\n    width: 200%;\n    height: 200%;\n    transition: opacity 250ms linear;\n    border-radius: 50%;\n    opacity: 0;\n    pointer-events: none;\n    content: \"\"; }\n    @supports (background-color: color(green a(10%))) {\n      .mdc-ripple-surface--accent::after {\n        background-color: color(var(--mdc-theme-accent, #ff4081) a(16%)); } }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center;\n    opacity: 0; }\n  .mdc-ripple-surface--accent:not(.mdc-ripple-upgraded--unbounded)::after {\n    transform-origin: center center; }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded--unbounded::after {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: 100%;\n    width: var(--mdc-ripple-fg-size, 100%);\n    height: 100%;\n    height: var(--mdc-ripple-fg-size, 100%);\n    transform: scale(0);\n    transform-origin: center center; }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded--foreground-activation::after {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards; }\n  .mdc-ripple-surface--accent.mdc-ripple-upgraded--foreground-deactivation::after {\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out; }\n\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n.mdc-select {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.75rem;\n  color: rgba(0, 0, 0, 0.87);\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n  padding-left: 0;\n  padding-right: 24px;\n  appearance: none;\n  display: inline-flex;\n  align-items: center;\n  justify-content: flex-start;\n  max-width: calc(100% - 24px);\n  height: 32px;\n  transition: border-bottom-color 150ms 0ms cubic-bezier(0.4, 0, 1, 1), background-color 150ms 0ms cubic-bezier(0.4, 0, 1, 1);\n  border: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  border-radius: 0;\n  background: none;\n  background-repeat: no-repeat;\n  background-position: right center;\n  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%230%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.54%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n  font-family: Roboto, sans-serif;\n  font-size: .936rem;\n  cursor: pointer; }\n  [dir=\"rtl\"] .mdc-select, .mdc-select[dir=\"rtl\"] {\n    padding-left: 24px;\n    padding-right: 0; }\n  .mdc-select::-ms-expand {\n    display: none; }\n  .mdc-select:focus {\n    border-bottom-color: #3f51b5;\n    border-bottom-color: var(--mdc-theme-primary, #3f51b5);\n    outline: none;\n    background-color: rgba(0, 0, 0, 0.06); }\n  [dir=\"rtl\"] .mdc-select, .mdc-select[dir=\"rtl\"] {\n    background-position: left center; }\n  .mdc-select--theme-dark,\n  .mdc-theme--dark .mdc-select {\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white);\n    background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23ffffff%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.54%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.12); }\n    .mdc-select--theme-dark:focus,\n    .mdc-theme--dark .mdc-select:focus {\n      border-bottom-color: #3f51b5;\n      border-bottom-color: var(--mdc-theme-primary, #3f51b5);\n      background-color: rgba(255, 255, 255, 0.09); }\n  .mdc-select__menu {\n    position: fixed;\n    top: 0;\n    left: 0;\n    max-height: 100%;\n    transform-origin: center center;\n    overflow-y: scroll;\n    z-index: 4; }\n  .mdc-select__selected-text {\n    transition: opacity 125ms 0ms cubic-bezier(0.4, 0, 1, 1), transform 125ms 0ms cubic-bezier(0.4, 0, 1, 1);\n    white-space: nowrap;\n    overflow: hidden; }\n\n.mdc-select--open .mdc-select__selected-text {\n  transform: translateY(8px);\n  transition: opacity 125ms 125ms cubic-bezier(0, 0, 0.2, 1), transform 125ms 125ms cubic-bezier(0, 0, 0.2, 1);\n  opacity: 0; }\n\n.mdc-select--disabled,\n.mdc-select[disabled] {\n  color: rgba(0, 0, 0, 0.38);\n  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));\n  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%230%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.38%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n  border-bottom-style: dotted;\n  cursor: default;\n  pointer-events: none;\n  user-select: none; }\n\n.mdc-select--theme-dark.mdc-select--disabled,\n.mdc-theme--dark .mdc-select--disabled {\n  color: rgba(255, 255, 255, 0.5);\n  color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5));\n  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23ffffff%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.38%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n  border-bottom: 1px dotted rgba(255, 255, 255, 0.38); }\n\n.mdc-select--theme-dark.mdc-select[disabled],\n.mdc-theme--dark .mdc-select[disabled] {\n  color: rgba(255, 255, 255, 0.5);\n  color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5));\n  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23ffffff%22%20fill-rule%3D%22evenodd%22%20opacity%3D%220.38%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n  border-bottom: 1px dotted rgba(255, 255, 255, 0.38); }\n\n.mdc-select__menu .mdc-list-item {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.75rem;\n  color: rgba(0, 0, 0, 0.54);\n  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); }\n  .mdc-select__menu .mdc-list-item[aria-selected=\"true\"] {\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }\n  .mdc-select--theme-dark .mdc-select__menu .mdc-list-item,\n  .mdc-theme--dark .mdc-select__menu .mdc-list-item {\n    color: rgba(255, 255, 255, 0.7);\n    color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n    .mdc-select--theme-dark .mdc-select__menu .mdc-list-item[aria-selected=\"true\"],\n    .mdc-theme--dark .mdc-select__menu .mdc-list-item[aria-selected=\"true\"] {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n\n.mdc-select__menu .mdc-list-group,\n.mdc-select__menu .mdc-list-group > .mdc-list-item:first-child {\n  margin-top: 12px; }\n\n.mdc-select__menu .mdc-list-group {\n  color: rgba(0, 0, 0, 0.38);\n  color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n  font-weight: normal; }\n  .mdc-select__menu .mdc-list-group .mdc-list-item {\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }\n\n.mdc-select--theme-dark .mdc-select__menu .mdc-list-group,\n.mdc-theme--dark .mdc-select__menu .mdc-list-group {\n  color: rgba(255, 255, 255, 0.5);\n  color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n  .mdc-select--theme-dark .mdc-select__menu .mdc-list-group .mdc-list-item,\n  .mdc-theme--dark .mdc-select__menu .mdc-list-group .mdc-list-item {\n    color: white;\n    color: var(--mdc-theme-text-primary-on-dark, white); }\n\n.mdc-multi-select {\n  appearance: none;\n  width: 250px;\n  padding: 0;\n  border: 1px solid;\n  border-color: rgba(0, 0, 0, 0.38);\n  border-color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n  outline: none; }\n  .mdc-multi-select--theme-dark,\n  .mdc-theme--dark .mdc-multi-select {\n    border-color: rgba(255, 255, 255, 0.5);\n    border-color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n  .mdc-multi-select .mdc-list-group {\n    margin: 16px 0 0;\n    padding: 0 0 0 16px;\n    color: rgba(0, 0, 0, 0.38);\n    color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n    font-weight: normal; }\n    .mdc-multi-select .mdc-list-group--theme-dark,\n    .mdc-theme--dark .mdc-multi-select .mdc-list-group {\n      color: rgba(255, 255, 255, 0.5);\n      color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n    .mdc-multi-select .mdc-list-group:last-child {\n      margin-bottom: 16px; }\n    .mdc-multi-select .mdc-list-group .mdc-list-divider {\n      margin-left: -16px; }\n  .mdc-multi-select .mdc-list-item {\n    margin: 0 0 0 -16px;\n    padding: 0 16px;\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)); }\n    .mdc-multi-select .mdc-list-item--theme-dark,\n    .mdc-theme--dark .mdc-multi-select .mdc-list-item {\n      color: white;\n      color: var(--mdc-theme-text-primary-on-dark, white); }\n    .mdc-multi-select .mdc-list-item:first-child {\n      margin-top: 12px; }\n    .mdc-multi-select .mdc-list-item:last-child {\n      margin-bottom: 8px; }\n  .mdc-multi-select .mdc-list-item:checked {\n    background-color: rgba(0, 0, 0, 0.12);\n    background-color: #fff;\n    background-color: var(--mdc-theme-background, #fff); }\n    .mdc-multi-select .mdc-list-item:checked--theme-dark,\n    .mdc-theme--dark .mdc-multi-select .mdc-list-item:checked {\n      background-color: white;\n      background-color: var(--mdc-theme-text-primary-on-dark, white); }\n\n.mdc-multi-select:focus .mdc-list-item:checked {\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-multi-select:focus .mdc-list-item:checked--theme-dark,\n  .mdc-theme--dark .mdc-multi-select:focus .mdc-list-item:checked {\n    background-color: white;\n    background-color: var(--mdc-theme-text-primary-on-dark, white); }\n\n.mdc-list-divider {\n  margin-bottom: 8px;\n  padding-top: 8px;\n  font-size: 0; }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* postcss-bem-linter: define snackbar */\n.mdc-snackbar {\n  display: flex;\n  position: fixed;\n  bottom: 0;\n  left: 50%;\n  align-items: center;\n  justify-content: flex-start;\n  padding-right: 24px;\n  padding-left: 24px;\n  transform: translate(0, 100%);\n  transition: transform 0.25s 0ms cubic-bezier(0.4, 0, 1, 1);\n  background-color: #323232;\n  will-change: transform;\n  pointer-events: none;\n  /* stylelint-disable plugin/selector-bem-pattern */\n  /* stylelint-enable plugin/selector-bem-pattern */ }\n  @media (max-width: 599px) {\n    .mdc-snackbar {\n      left: 0;\n      width: calc(100% - 48px); } }\n  @media (min-width: 600px) {\n    .mdc-snackbar {\n      min-width: 288px;\n      max-width: 568px;\n      transform: translate(-50%, 100%);\n      border-radius: 2px; } }\n  .mdc-snackbar--active {\n    transform: translate(0, 0);\n    pointer-events: auto;\n    transition: transform 0.25s 0ms cubic-bezier(0, 0, 0.2, 1); }\n    @media (min-width: 600px) {\n      .mdc-snackbar--active {\n        transform: translate(-50%, 0); } }\n  .mdc-snackbar--action-on-bottom {\n    flex-direction: column; }\n  .mdc-snackbar--action-on-bottom .mdc-snackbar__text {\n    margin-right: inherit; }\n  .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper {\n    flex-direction: column;\n    justify-content: flex-start;\n    margin-top: -12px;\n    margin-bottom: 8px;\n    margin-left: auto;\n    margin-right: 0; }\n    [dir=\"rtl\"] .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper, .mdc-snackbar--action-on-bottom .mdc-snackbar__action-wrapper[dir=\"rtl\"] {\n      margin-left: 0;\n      margin-right: auto; }\n  .mdc-snackbar__text {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 0.875rem;\n    font-weight: 400;\n    letter-spacing: 0.04em;\n    line-height: 1.25rem;\n    margin-left: 0;\n    margin-right: auto;\n    display: flex;\n    align-items: center;\n    height: 48px;\n    transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n    color: white;\n    opacity: 0; }\n    [dir=\"rtl\"] .mdc-snackbar .mdc-snackbar__text,\n    .mdc-snackbar[dir=\"rtl\"] .mdc-snackbar__text {\n      margin-left: auto;\n      margin-right: 0; }\n  .mdc-snackbar--multiline .mdc-snackbar__text {\n    height: 80px; }\n  .mdc-snackbar--multiline.mdc-snackbar--action-on-bottom .mdc-snackbar__text {\n    margin: 0; }\n  .mdc-snackbar__action-button {\n    color: #ff4081;\n    color: var(--mdc-theme-accent, #ff4081);\n    margin-left: 0;\n    margin-right: -16px;\n    min-width: auto;\n    height: inherit;\n    transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n    opacity: 0;\n    visibility: hidden; }\n    [dir=\"rtl\"] .mdc-snackbar .mdc-snackbar__action-button,\n    .mdc-snackbar[dir=\"rtl\"] .mdc-snackbar__action-button {\n      margin-left: -16px;\n      margin-right: 0; }\n    .mdc-snackbar__action-button::-moz-focus-inner {\n      border: 0; }\n    .mdc-snackbar__action-button:not([aria-hidden]) {\n      visibility: inherit; }\n  .mdc-snackbar--active .mdc-snackbar__text,\n  .mdc-snackbar--active .mdc-snackbar__action-button:not([aria-hidden]) {\n    transition: opacity 0.3s 0ms cubic-bezier(0.4, 0, 1, 1);\n    opacity: 1; }\n\n/* postcss-bem-linter: end */\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n.mdc-switch {\n  display: inline-block;\n  position: relative; }\n  .mdc-switch__native-control {\n    display: inline-block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 34px;\n    height: 14px;\n    cursor: pointer;\n    opacity: 0;\n    z-index: 2; }\n  .mdc-switch__background {\n    display: block;\n    position: relative;\n    width: 34px;\n    height: 14px;\n    border-radius: 7px;\n    outline: none;\n    background-color: transparent;\n    cursor: pointer;\n    user-select: none; }\n    .mdc-switch--theme-dark .mdc-switch__background,\n    .mdc-theme--dark .mdc-switch__background {\n      background-color: transparent; }\n    .mdc-switch__background::before {\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      transition: opacity 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n      border-radius: 7px;\n      background-color: #000;\n      content: \"\";\n      opacity: .38; }\n      .mdc-switch--theme-dark .mdc-switch__background::before,\n      .mdc-theme--dark .mdc-switch__background::before {\n        background-color: #fff;\n        opacity: .3; }\n    .mdc-switch__background .mdc-switch__knob {\n      display: block;\n      position: absolute;\n      top: -3px;\n      left: 0;\n      width: 20px;\n      height: 20px;\n      transform: translateX(0);\n      transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n      border-radius: 10px;\n      background-color: #fafafa;\n      box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n      z-index: 1; }\n      .mdc-switch--theme-dark .mdc-switch__background .mdc-switch__knob,\n      .mdc-theme--dark .mdc-switch__background .mdc-switch__knob {\n        background-color: #bdbdbd; }\n      .mdc-switch__background .mdc-switch__knob::before {\n        position: absolute;\n        top: -14px;\n        left: -14px;\n        width: 48px;\n        height: 48px;\n        transform: scale(0);\n        transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n        border-radius: 24px;\n        background-color: transparent;\n        content: \"\";\n        opacity: .2; }\n\n.mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before {\n  position: absolute;\n  width: 48px;\n  height: 48px;\n  transform: scale(1);\n  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 24px;\n  background-color: #9e9e9e; }\n  .mdc-switch--theme-dark .mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before,\n  .mdc-theme--dark .mdc-switch__native-control:focus ~ .mdc-switch__background .mdc-switch__knob::before {\n    background-color: #f1f1f1;\n    opacity: .14; }\n\n.mdc-switch__native-control:checked ~ .mdc-switch__background::before {\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5);\n  opacity: .5; }\n\n.mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob {\n  transform: translateX(14px);\n  transition: transform 90ms cubic-bezier(0.4, 0, 0.2, 1), background-color 90ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob::before {\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5);\n    opacity: .15; }\n    .mdc-switch--theme-dark .mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob::before,\n    .mdc-theme--dark .mdc-switch__native-control:checked ~ .mdc-switch__background .mdc-switch__knob::before {\n      background-color: #3f51b5;\n      background-color: var(--mdc-theme-primary, #3f51b5); }\n\n.mdc-switch__native-control:disabled {\n  cursor: initial; }\n\n.mdc-switch__native-control:disabled ~ .mdc-switch__background::before {\n  background-color: #000;\n  opacity: .12; }\n  .mdc-switch--theme-dark .mdc-switch__native-control:disabled ~ .mdc-switch__background::before,\n  .mdc-theme--dark .mdc-switch__native-control:disabled ~ .mdc-switch__background::before {\n    background-color: #fff;\n    opacity: .1; }\n\n.mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob {\n  background-color: #bdbdbd; }\n  .mdc-switch--theme-dark .mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob,\n  .mdc-theme--dark .mdc-switch__native-control:disabled ~ .mdc-switch__background .mdc-switch__knob {\n    background-color: #424242; }\n\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-textfield {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  letter-spacing: 0.04em;\n  display: inline-block;\n  margin-bottom: 8px;\n  will-change: opacity, transform, color; }\n  .mdc-textfield__input {\n    color: rgba(0, 0, 0, 0.87);\n    color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87));\n    padding: 0 0 8px;\n    border: none;\n    background: none;\n    font-size: inherit;\n    appearance: none; }\n    .mdc-textfield__input::placeholder {\n      color: rgba(0, 0, 0, 0.38);\n      color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n      transition: color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      opacity: 1; }\n    .mdc-textfield__input:focus {\n      outline: none; }\n      .mdc-textfield__input:focus::placeholder {\n        color: rgba(0, 0, 0, 0.54);\n        color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)); }\n    .mdc-textfield__input:invalid {\n      box-shadow: none; }\n    .mdc-textfield__input--theme-dark,\n    .mdc-theme--dark .mdc-textfield__input {\n      color: white; }\n      .mdc-textfield__input--theme-dark::placeholder,\n      .mdc-theme--dark .mdc-textfield__input::placeholder {\n        color: rgba(255, 255, 255, 0.5);\n        color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n      .mdc-textfield__input--theme-dark:focus::placeholder,\n      .mdc-theme--dark .mdc-textfield__input:focus::placeholder {\n        color: rgba(255, 255, 255, 0.7);\n        color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)); }\n  .mdc-textfield__label {\n    color: rgba(0, 0, 0, 0.38);\n    color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n    position: absolute;\n    bottom: 8px;\n    left: 0;\n    transform-origin: left top;\n    transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1), color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: text; }\n    [dir=\"rtl\"] .mdc-textfield .mdc-textfield__label,\n    .mdc-textfield[dir=\"rtl\"] .mdc-textfield__label {\n      right: 0;\n      left: auto;\n      transform-origin: right top; }\n    .mdc-textfield--theme-dark .mdc-textfield__label,\n    .mdc-theme--dark .mdc-textfield__label {\n      color: rgba(255, 255, 255, 0.5);\n      color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n    .mdc-textfield__label--float-above {\n      transform: translateY(-100%) scale(0.75, 0.75);\n      cursor: auto; }\n\n.mdc-textfield__input:-webkit-autofill + .mdc-textfield__label {\n  transform: translateY(-100%) scale(0.75, 0.75);\n  cursor: auto; }\n\n.mdc-textfield--upgraded:not(.mdc-textfield--fullwidth) {\n  display: inline-flex;\n  position: relative;\n  box-sizing: border-box;\n  align-items: flex-end;\n  margin-top: 16px; }\n  .mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline) {\n    height: 48px; }\n    .mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 1px;\n      transform: translateY(50%) scaleY(1);\n      transform-origin: center bottom;\n      transition: background-color 180ms cubic-bezier(0.4, 0, 0.2, 1), transform 180ms cubic-bezier(0.4, 0, 0.2, 1);\n      background-color: rgba(0, 0, 0, 0.12);\n      content: \"\"; }\n      .mdc-textfield--theme-dark .mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after,\n      .mdc-theme--dark .mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after {\n        background-color: rgba(255, 255, 255, 0.12); }\n  .mdc-textfield--upgraded:not(.mdc-textfield--fullwidth) .mdc-textfield__label {\n    pointer-events: none; }\n\n.mdc-textfield--focused.mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after {\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5);\n  transform: translateY(100%) scaleY(2);\n  transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1); }\n  .mdc-textfield--theme-dark.mdc-textfield--focused.mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after,\n  .mdc-theme--dark .mdc-textfield--focused.mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after {\n    background-color: #3f51b5;\n    background-color: var(--mdc-theme-primary, #3f51b5);\n    transform: translateY(100%) scaleY(2);\n    transition: transform 180ms cubic-bezier(0.4, 0, 0.2, 1); }\n\n.mdc-textfield--focused .mdc-textfield__label {\n  color: #3f51b5;\n  color: var(--mdc-theme-primary, #3f51b5); }\n  .mdc-textfield--theme-dark .mdc-textfield--focused .mdc-textfield__label,\n  .mdc-theme--dark .mdc-textfield--focused .mdc-textfield__label {\n    color: #3f51b5;\n    color: var(--mdc-theme-primary, #3f51b5); }\n\n.mdc-textfield--dense {\n  margin-top: 12px;\n  margin-bottom: 4px;\n  font-size: .813rem; }\n  .mdc-textfield--dense .mdc-textfield__label--float-above {\n    transform: translateY(calc(-100% - 2px)) scale(0.923, 0.923); }\n\n.mdc-textfield--invalid:not(.mdc-textfield--focused)::after {\n  background-color: #d50000; }\n\n.mdc-textfield--invalid:not(.mdc-textfield--focused) .mdc-textfield__label {\n  color: #d50000; }\n\n.mdc-textfield--theme-dark.mdc-textfield--invalid:not(.mdc-textfield--focused)::after,\n.mdc-theme--dark .mdc-textfield--invalid:not(.mdc-textfield--focused)::after {\n  background-color: #ff6e6e; }\n\n.mdc-textfield--theme-dark.mdc-textfield--invalid:not(.mdc-textfield--focused) .mdc-textfield__label,\n.mdc-theme--dark .mdc-textfield--invalid:not(.mdc-textfield--focused) .mdc-textfield__label {\n  color: #ff6e6e; }\n\n.mdc-textfield--disabled {\n  border-bottom: 1px dotted rgba(35, 31, 32, 0.26); }\n  .mdc-textfield--disabled::after {\n    display: none; }\n  .mdc-textfield--disabled .mdc-textfield__input {\n    padding-bottom: 7px; }\n  .mdc-textfield--theme-dark.mdc-textfield--disabled,\n  .mdc-theme--dark .mdc-textfield--disabled {\n    border-bottom: 1px dotted rgba(255, 255, 255, 0.3); }\n  .mdc-textfield--disabled .mdc-textfield__input,\n  .mdc-textfield--disabled .mdc-textfield__label,\n  .mdc-textfield--disabled + .mdc-textfield-helptext {\n    color: rgba(0, 0, 0, 0.38);\n    color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)); }\n  .mdc-textfield--theme-dark .mdc-textfield--disabled .mdc-textfield__input,\n  .mdc-theme--dark .mdc-textfield--disabled .mdc-textfield__input, .mdc-textfield--theme-dark\n  .mdc-textfield--disabled .mdc-textfield__label,\n  .mdc-theme--dark\n  .mdc-textfield--disabled .mdc-textfield__label {\n    color: rgba(255, 255, 255, 0.5);\n    color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }\n  .mdc-textfield--theme-dark.mdc-textfield--disabled + .mdc-textfield-helptext,\n  .mdc-theme--dark .mdc-textfield--disabled + .mdc-textfield-helptext {\n    color: rgba(255, 255, 255, 0.5);\n    color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)); }\n  .mdc-textfield--disabled .mdc-textfield__label {\n    bottom: 7px;\n    cursor: default; }\n\n.mdc-textfield__input:required + .mdc-textfield__label::after {\n  margin-left: 1px;\n  content: \"*\"; }\n  .mdc-textfield--focused .mdc-textfield__input:required + .mdc-textfield__label::after {\n    color: #d50000; }\n  .mdc-textfield--focused .mdc-textfield--theme-dark .mdc-textfield__input:required + .mdc-textfield__label::after, .mdc-textfield--focused\n  .mdc-theme--dark .mdc-textfield__input:required + .mdc-textfield__label::after {\n    color: #ff6e6e; }\n\n.mdc-textfield--multiline {\n  display: flex;\n  height: initial;\n  transition: none; }\n  .mdc-textfield--multiline::after {\n    content: initial; }\n  .mdc-textfield--multiline .mdc-textfield__input {\n    padding: 4px;\n    transition: border-color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n    border: 1px solid rgba(0, 0, 0, 0.12);\n    border-radius: 2px; }\n    .mdc-textfield--theme-dark .mdc-textfield--multiline .mdc-textfield__input,\n    .mdc-theme--dark .mdc-textfield--multiline .mdc-textfield__input {\n      border-color: rgba(255, 255, 255, 0.12); }\n    .mdc-textfield--multiline .mdc-textfield__input:focus {\n      border-color: #3f51b5;\n      border-color: var(--mdc-theme-primary, #3f51b5); }\n    .mdc-textfield--multiline .mdc-textfield__input:invalid:not(:focus) {\n      border-color: #d50000; }\n    .mdc-textfield--theme-dark .mdc-textfield--multiline .mdc-textfield__input:invalid:not(:focus),\n    .mdc-theme--dark .mdc-textfield--multiline .mdc-textfield__input:invalid:not(:focus) {\n      border-color: #ff6e6e; }\n  .mdc-textfield--multiline .mdc-textfield__label {\n    top: 6px;\n    bottom: initial;\n    left: 4px; }\n    [dir=\"rtl\"] .mdc-textfield--multiline .mdc-textfield--multiline .mdc-textfield__label,\n    .mdc-textfield--multiline[dir=\"rtl\"] .mdc-textfield--multiline .mdc-textfield__label {\n      right: 4px;\n      left: auto; }\n    .mdc-textfield--multiline .mdc-textfield__label--float-above {\n      transform: translateY(calc(-100% - 6px)) scale(0.923, 0.923); }\n  .mdc-textfield--multiline.mdc-textfield--disabled {\n    border-bottom: none; }\n    .mdc-textfield--multiline.mdc-textfield--disabled .mdc-textfield__input {\n      border: 1px dotted rgba(35, 31, 32, 0.26); }\n      .mdc-textfield--theme-dark .mdc-textfield--multiline.mdc-textfield--disabled .mdc-textfield__input,\n      .mdc-theme--dark .mdc-textfield--multiline.mdc-textfield--disabled .mdc-textfield__input {\n        border-color: rgba(255, 255, 255, 0.3); }\n\n.mdc-textfield--fullwidth {\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n  margin: 0;\n  border: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  outline: none; }\n  .mdc-textfield--fullwidth:not(.mdc-textfield--multiline) {\n    height: 56px; }\n  .mdc-textfield--fullwidth.mdc-textfield--multiline {\n    padding: 20px 0 0; }\n  .mdc-textfield--fullwidth.mdc-textfield--dense:not(.mdc-textfield--multiline) {\n    height: 48px; }\n  .mdc-textfield--fullwidth.mdc-textfield--dense.mdc-textfield--multiline {\n    padding: 16px 0 0; }\n  .mdc-textfield--fullwidth.mdc-textfield--disabled, .mdc-textfield--fullwidth.mdc-textfield--disabled.mdc-textfield--multiline {\n    border-bottom: 1px dotted rgba(0, 0, 0, 0.12); }\n  .mdc-textfield--fullwidth--theme-dark,\n  .mdc-theme--dark .mdc-textfield--fullwidth {\n    border-bottom: 1px solid rgba(255, 255, 255, 0.12); }\n    .mdc-textfield--fullwidth--theme-dark.mdc-textfield--disabled, .mdc-textfield--fullwidth--theme-dark.mdc-textfield--disabled.mdc-textfield--multiline,\n    .mdc-theme--dark .mdc-textfield--fullwidth.mdc-textfield--disabled,\n    .mdc-theme--dark .mdc-textfield--fullwidth.mdc-textfield--disabled.mdc-textfield--multiline {\n      border-bottom: 1px dotted rgba(255, 255, 255, 0.12); }\n  .mdc-textfield--fullwidth .mdc-textfield__input {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    resize: none;\n    border: none !important; }\n\n.mdc-textfield:not(.mdc-textfield--upgraded):not(.mdc-textfield--multiline) .mdc-textfield__input {\n  transition: border-bottom-color 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\n\n.mdc-textfield:not(.mdc-textfield--upgraded) .mdc-textfield__input:focus {\n  border-color: #3f51b5;\n  border-color: var(--mdc-theme-primary, #3f51b5); }\n\n.mdc-textfield:not(.mdc-textfield--upgraded) .mdc-textfield__input:disabled {\n  color: rgba(0, 0, 0, 0.38);\n  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38));\n  border-style: dotted;\n  border-color: rgba(35, 31, 32, 0.26); }\n\n.mdc-textfield:not(.mdc-textfield--upgraded) .mdc-textfield__input:invalid:not(:focus) {\n  border-color: #d50000; }\n\n.mdc-textfield--theme-dark:not(.mdc-textfield--upgraded) .mdc-textfield__input:not(:focus),\n.mdc-theme--dark .mdc-textfield:not(.mdc-textfield--upgraded) .mdc-textfield__input:not(:focus) {\n  border-color: rgba(255, 255, 255, 0.12); }\n\n.mdc-textfield--theme-dark:not(.mdc-textfield--upgraded) .mdc-textfield__input:disabled,\n.mdc-theme--dark .mdc-textfield:not(.mdc-textfield--upgraded) .mdc-textfield__input:disabled {\n  color: rgba(255, 255, 255, 0.5);\n  color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5));\n  border-color: rgba(255, 255, 255, 0.3); }\n\n.mdc-textfield--theme-dark:not(.mdc-textfield--upgraded) .mdc-textfield__input:invalid:not(:focus),\n.mdc-theme--dark .mdc-textfield:not(.mdc-textfield--upgraded) .mdc-textfield__input:invalid:not(:focus) {\n  border-color: #ff6e6e; }\n\n.mdc-textfield-helptext {\n  color: rgba(0, 0, 0, 0.38);\n  color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38));\n  margin: 0;\n  transition: opacity 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  font-size: .75rem;\n  opacity: 0;\n  will-change: opacity; }\n  .mdc-textfield-helptext--theme-dark,\n  .mdc-theme--dark .mdc-textfield-helptext {\n    color: rgba(255, 255, 255, 0.5);\n    color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)); }\n  .mdc-textfield + .mdc-textfield-helptext {\n    margin-bottom: 8px; }\n  .mdc-textfield--dense + .mdc-textfield-helptext {\n    margin-bottom: 4px; }\n  .mdc-textfield--focused + .mdc-textfield-helptext:not(.mdc-textfield-helptext--validation-msg) {\n    opacity: 1; }\n\n.mdc-textfield-helptext--persistent {\n  transition: none;\n  opacity: 1;\n  will-change: initial; }\n\n.mdc-textfield--invalid + .mdc-textfield-helptext--validation-msg {\n  color: #d50000;\n  opacity: 1; }\n\n.mdc-textfield--theme-dark.mdc-textfield--invalid + .mdc-textfield-helptext--validation-msg,\n.mdc-theme--dark .mdc-textfield--invalid + .mdc-textfield-helptext--validation-msg {\n  color: #ff6e6e; }\n\n.mdc-form-field > .mdc-textfield + label {\n  align-self: flex-start; }\n\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n:root {\n  --mdc-theme-primary: #3f51b5;\n  --mdc-theme-accent: #ff4081;\n  --mdc-theme-background: #fff;\n  --mdc-theme-text-primary-on-primary: white;\n  --mdc-theme-text-secondary-on-primary: rgba(255, 255, 255, 0.7);\n  --mdc-theme-text-hint-on-primary: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-disabled-on-primary: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-icon-on-primary: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-primary-on-accent: white;\n  --mdc-theme-text-secondary-on-accent: rgba(255, 255, 255, 0.7);\n  --mdc-theme-text-hint-on-accent: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-disabled-on-accent: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-icon-on-accent: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-primary-on-background: rgba(0, 0, 0, 0.87);\n  --mdc-theme-text-secondary-on-background: rgba(0, 0, 0, 0.54);\n  --mdc-theme-text-hint-on-background: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-disabled-on-background: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-icon-on-background: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-primary-on-light: rgba(0, 0, 0, 0.87);\n  --mdc-theme-text-secondary-on-light: rgba(0, 0, 0, 0.54);\n  --mdc-theme-text-hint-on-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-disabled-on-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-icon-on-light: rgba(0, 0, 0, 0.38);\n  --mdc-theme-text-primary-on-dark: white;\n  --mdc-theme-text-secondary-on-dark: rgba(255, 255, 255, 0.7);\n  --mdc-theme-text-hint-on-dark: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-disabled-on-dark: rgba(255, 255, 255, 0.5);\n  --mdc-theme-text-icon-on-dark: rgba(255, 255, 255, 0.5); }\n\n/* Special case, so that .mdc-theme--background changes background color, not text color. */\n.mdc-theme--background {\n  background-color: #fff;\n  background-color: var(--mdc-theme-background, #fff); }\n\n.mdc-theme--primary {\n  color: #3f51b5 !important;\n  color: var(--mdc-theme-primary, #3f51b5) !important; }\n\n.mdc-theme--accent {\n  color: #ff4081 !important;\n  color: var(--mdc-theme-accent, #ff4081) !important; }\n\n.mdc-theme--text-primary-on-primary {\n  color: white !important;\n  color: var(--mdc-theme-text-primary-on-primary, white) !important; }\n\n.mdc-theme--text-secondary-on-primary {\n  color: rgba(255, 255, 255, 0.7) !important;\n  color: var(--mdc-theme-text-secondary-on-primary, rgba(255, 255, 255, 0.7)) !important; }\n\n.mdc-theme--text-hint-on-primary {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-hint-on-primary, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-disabled-on-primary {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-disabled-on-primary, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-icon-on-primary {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-icon-on-primary, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-primary-on-accent {\n  color: white !important;\n  color: var(--mdc-theme-text-primary-on-accent, white) !important; }\n\n.mdc-theme--text-secondary-on-accent {\n  color: rgba(255, 255, 255, 0.7) !important;\n  color: var(--mdc-theme-text-secondary-on-accent, rgba(255, 255, 255, 0.7)) !important; }\n\n.mdc-theme--text-hint-on-accent {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-hint-on-accent, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-disabled-on-accent {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-disabled-on-accent, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-icon-on-accent {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-icon-on-accent, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-primary-on-background {\n  color: rgba(0, 0, 0, 0.87) !important;\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87)) !important; }\n\n.mdc-theme--text-secondary-on-background {\n  color: rgba(0, 0, 0, 0.54) !important;\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54)) !important; }\n\n.mdc-theme--text-hint-on-background {\n  color: rgba(0, 0, 0, 0.38) !important;\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-disabled-on-background {\n  color: rgba(0, 0, 0, 0.38) !important;\n  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-icon-on-background {\n  color: rgba(0, 0, 0, 0.38) !important;\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-primary-on-light {\n  color: rgba(0, 0, 0, 0.87) !important;\n  color: var(--mdc-theme-text-primary-on-light, rgba(0, 0, 0, 0.87)) !important; }\n\n.mdc-theme--text-secondary-on-light {\n  color: rgba(0, 0, 0, 0.54) !important;\n  color: var(--mdc-theme-text-secondary-on-light, rgba(0, 0, 0, 0.54)) !important; }\n\n.mdc-theme--text-hint-on-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  color: var(--mdc-theme-text-hint-on-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-disabled-on-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  color: var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-icon-on-light {\n  color: rgba(0, 0, 0, 0.38) !important;\n  color: var(--mdc-theme-text-icon-on-light, rgba(0, 0, 0, 0.38)) !important; }\n\n.mdc-theme--text-primary-on-dark {\n  color: white !important;\n  color: var(--mdc-theme-text-primary-on-dark, white) !important; }\n\n.mdc-theme--text-secondary-on-dark {\n  color: rgba(255, 255, 255, 0.7) !important;\n  color: var(--mdc-theme-text-secondary-on-dark, rgba(255, 255, 255, 0.7)) !important; }\n\n.mdc-theme--text-hint-on-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-hint-on-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-disabled-on-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-disabled-on-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n.mdc-theme--text-icon-on-dark {\n  color: rgba(255, 255, 255, 0.5) !important;\n  color: var(--mdc-theme-text-icon-on-dark, rgba(255, 255, 255, 0.5)) !important; }\n\n/* CSS rules for using primary and accent as background colors. */\n.mdc-theme--primary-bg {\n  background-color: #3f51b5 !important;\n  background-color: var(--mdc-theme-primary, #3f51b5) !important; }\n\n.mdc-theme--accent-bg {\n  background-color: #ff4081 !important;\n  background-color: var(--mdc-theme-accent, #ff4081) !important; }\n\n/**\n * The css property used for elevation. In most cases this should not be changed. It is exposed\n * as a variable for abstraction / easy use when needing to reference the property directly, for\n * example in a `will-change` rule.\n */\n/**\n * The default duration value for elevation transitions.\n */\n/**\n * The default easing value for elevation transitions.\n */\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n/**\n * Creates a rule that will be applied when an MDC-Web component is within the context of an RTL layout.\n *\n * Usage Example:\n * ```scss\n * .mdc-foo {\n *   position: absolute;\n *   left: 0;\n *\n *   @include mdc-rtl {\n *     left: auto;\n *     right: 0;\n *   }\n *\n *   &__bar {\n *     margin-left: 4px;\n *     @include mdc-rtl(\".mdc-foo\") {\n *       margin-left: auto;\n *       margin-right: 4px;\n *     }\n *   }\n * }\n *\n * .mdc-foo--mod {\n *   padding-left: 4px;\n *\n *   @include mdc-rtl {\n *     padding-left: auto;\n *     padding-right: 4px;\n *   }\n * }\n * ```\n *\n * Note that this works by checking for [dir=\"rtl\"] on an ancestor element. While this will work\n * in most cases, it will in some cases lead to false negatives, e.g.\n *\n * ```html\n * <html dir=\"rtl\">\n *   <!-- ... -->\n *   <div dir=\"ltr\">\n *     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n *   </div>\n * </html>\n * ```\n *\n * In the future, selectors such as :dir (http://mdn.io/:dir) will help us mitigate this.\n */\n/**\n * Takes a base box-model property - e.g. margin / border / padding - along with a default\n * direction and value, and emits rules which apply the value to the\n * \"<base-property>-<default-direction>\" property by default, but flips the direction\n * when within an RTL context.\n *\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, left, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 8px;\n *     margin-left: 0;\n *   }\n * }\n * ```\n * whereas:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-box(margin, right, 8px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-right: 8px;\n *\n *   @include mdc-rtl {\n *     margin-right: 0;\n *     margin-left: 8px;\n *   }\n * }\n * ```\n *\n * You can also pass a 4th optional $root-selector argument which will be forwarded to `mdc-rtl`,\n * e.g. `@include mdc-rtl-reflexive-box-property(margin, left, 8px, \".mdc-component\")`.\n *\n * Note that this function will always zero out the original value in an RTL context. If you're\n * trying to flip the values, use mdc-rtl-reflexive-property().\n */\n/**\n * Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n * <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n * For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-property(margin, auto, 12px);\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n * .mdc-foo {\n *   margin-left: auto;\n *   margin-right: 12px;\n *\n *   @include mdc-rtl {\n *     margin-left: 12px;\n *     margin-right: auto;\n *   }\n * }\n * ```\n *\n * A 4th optional $root-selector argument can be given, which will be passed to `mdc-rtl`.\n */\n/**\n * Takes an argument specifying a horizontal position property (either \"left\" or \"right\") as well\n * as a value, and applies that value to the specified position in a LTR context, and flips it in a\n * RTL context. For example:\n *\n * ```scss\n * .mdc-foo {\n *   @include mdc-rtl-reflexive-position(left, 0);\n *   position: absolute;\n * }\n * ```\n * is equivalent to:\n *\n * ```scss\n *  .mdc-foo {\n *    position: absolute;\n *    left: 0;\n *    right: initial;\n *\n *    @include mdc-rtl {\n *      right: 0;\n *      left: initial;\n *    }\n *  }\n * ```\n * An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n */\n/*\n  Precomputed linear color channel values, for use in contrast calculations.\n  See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n\n  Algorithm, for c in 0 to 255:\n  f(c) {\n    c = c / 255;\n    return c < 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n  }\n\n  This lookup table is needed since there is no `pow` in SASS.\n*/\n/**\n * Calculate the luminance for a color.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Calculate the contrast ratio between two colors.\n * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n */\n/**\n * Determine whether to use dark or light text on top of given color.\n * Returns \"dark\" for dark text and \"light\" for light text.\n */\n/*\n  Main theme colors.\n  If you're a user customizing your color scheme in SASS, these are probably the only variables you need to change.\n*/\n/* Indigo 500 */\n/* Pink A200 */\n/* White */\n/* Which set of text colors to use for each main theme color (light or dark) */\n/* Text colors according to light vs dark and text type */\n/* Primary text colors for each of the theme colors */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-toolbar {\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  box-sizing: border-box;\n  background-color: #3f51b5;\n  background-color: var(--mdc-theme-primary, #3f51b5);\n  color: white;\n  color: var(--mdc-theme-text-primary-on-primary, white); }\n  .mdc-toolbar__row {\n    display: flex;\n    position: relative;\n    width: 100%;\n    height: 64px;\n    padding: 20px 28px;\n    box-sizing: border-box; }\n    @media (max-width: 599px) {\n      .mdc-toolbar__row {\n        height: 56px;\n        padding: 16px; } }\n  .mdc-toolbar__section {\n    display: inline-flex;\n    flex: 1;\n    align-items: flex-start;\n    justify-content: center;\n    z-index: 1;\n    overflow: hidden; }\n    .mdc-toolbar__section--align-start {\n      justify-content: flex-start;\n      order: -1; }\n    .mdc-toolbar__section--align-end {\n      justify-content: flex-end;\n      order: 1; }\n  .mdc-toolbar__title {\n    font-family: Roboto, sans-serif;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-size: 1.25rem;\n    font-weight: 500;\n    letter-spacing: 0.02em;\n    line-height: 2rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    margin: 0;\n    line-height: 1.5rem; }\n\n.mdc-toolbar--fixed {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mdc-toolbar-fixed-adjust {\n  margin-top: 64px; }\n  @media (max-width: 599px) {\n    .mdc-toolbar-fixed-adjust {\n      margin-top: 56px; } }\n\n.mdc-toolbar__section--shrink-to-fit {\n  flex: none; }\n\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n.mdc-typography {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased; }\n\n.mdc-typography--display4 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 7rem;\n  font-weight: 300;\n  letter-spacing: -0.04em;\n  line-height: 7rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--display4 {\n  margin: -1rem 0 3.5rem -0.085em; }\n\n.mdc-typography--display3 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 3.5rem;\n  font-weight: 400;\n  letter-spacing: -0.02em;\n  line-height: 3.5rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--display3 {\n  margin: -8px 0 64px -0.07em; }\n\n.mdc-typography--display2 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 2.813rem;\n  font-weight: 400;\n  letter-spacing: normal;\n  line-height: 3rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--display2 {\n  margin: -0.5rem 0 4rem -0.07em; }\n\n.mdc-typography--display1 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 2.125rem;\n  font-weight: 400;\n  letter-spacing: normal;\n  line-height: 2.5rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--display1 {\n  margin: -0.5rem 0 4rem -0.07em; }\n\n.mdc-typography--headline {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1.5rem;\n  font-weight: 400;\n  letter-spacing: normal;\n  line-height: 2rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--headline {\n  margin: -0.5rem 0 1rem -0.06em; }\n\n.mdc-typography--title {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1.25rem;\n  font-weight: 500;\n  letter-spacing: 0.02em;\n  line-height: 2rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--title {\n  margin: -0.5rem 0 1rem -0.05em; }\n\n.mdc-typography--subheading2 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 1rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.75rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--subheading2 {\n  margin: -0.5rem 0 1rem -0.06em; }\n\n.mdc-typography--subheading1 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.938rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.5rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--subheading1 {\n  margin: -0.313rem 0 0.813rem -0.06em; }\n\n.mdc-typography--body2 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  line-height: 1.5rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--body2 {\n  margin: -0.25rem 0 0.75rem 0; }\n\n.mdc-typography--body1 {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.875rem;\n  font-weight: 400;\n  letter-spacing: 0.04em;\n  line-height: 1.25rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--body1 {\n  margin: -0.25rem 0 0.75rem 0; }\n\n.mdc-typography--caption {\n  font-family: Roboto, sans-serif;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-size: 0.75rem;\n  font-weight: 400;\n  letter-spacing: 0.08em;\n  line-height: 1.25rem; }\n\n.mdc-typography--adjust-margin.mdc-typography--caption {\n  margin: -0.5rem 0 1rem -0.04em; }\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n$mdc-typography-font-family: Roboto, sans-serif !default;\n\n$mdc-typography-font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900\n) !default;\n\n/* TODO(sgomes): Figure out what to do about desktop font sizes. */\n\n/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */\n\n$mdc-typography-styles: (\n  display4: (\n    font-size: 7rem, /* 112sp */\n    line-height: 7rem, /* 112sp */\n    font-weight: map-get($mdc-typography-font-weight-values, light),\n    letter-spacing: -.04em,\n    margin: -1rem 0 3.5rem -.085em /* -16sp 0 56sp -.085em */\n  ),\n  display3: (\n    font-size: 3.5rem, /* 56px */\n    line-height: 3.5rem, /* 56px */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: -.02em,\n    margin: -8px 0 64px -.07em\n  ),\n  display2: (\n    font-size: 2.813rem, /* 45px */\n    line-height: 3rem, /* 48px */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: normal,\n    margin: -.5rem 0 4rem -.07em /* -8sp 0 64sp -.07em */\n  ),\n  display1: (\n    font-size: 2.125rem, /* 34sp */\n    line-height: 2.5rem, /* 40sp */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: normal,\n    margin: -.5rem 0 4rem -.07em /* -8sp 0 64sp -.07em */\n  ),\n  headline: (\n    font-size: 1.5rem, /* 24sp */\n    line-height: 2rem, /* 32sp */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: normal,\n    margin: -.5rem 0 1rem -.06em /* -8sp 0 16sp -.06em */\n  ),\n  title: (\n    font-size: 1.25rem, /* 20sp */\n    line-height: 2rem, /* 32sp */\n    font-weight: map-get($mdc-typography-font-weight-values, medium),\n    letter-spacing: .02em,\n    margin: -.5rem 0 1rem -.05em /* -8sp 0 16sp -.05em */\n  ),\n  subheading2: (\n    font-size: 1rem, /* 16sp */\n    line-height: 1.75rem, /* 28sp */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: .04em,\n    margin: -.5rem 0 1rem -.06em /* -8sp 0 16sp -.06em */\n  ),\n  subheading1: (\n    font-size: .938rem, /* 15sp */\n    line-height: 1.5rem, /* 24sp */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: .04em,\n    margin: -.313rem 0 .813rem -.06em /* -5sp 0 13sp -.06em */\n  ),\n  body2: (\n    font-size: .875rem, /* 14sp */\n    line-height: 1.5rem, /* 24sp */\n    font-weight: map-get($mdc-typography-font-weight-values, medium),\n    letter-spacing: .04em,\n    margin: -.25rem 0 .75rem 0 /* -4sp 0 12sp 0 */\n  ),\n  body1: (\n    font-size: .875rem, /* 14sp */\n    line-height: 1.25rem, /* 20sp */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: .04em,\n    margin: -.25rem 0 .75rem 0 /* -4sp 0 12sp 0 */\n  ),\n  caption: (\n    font-size: .75rem, /* 12sp */\n    line-height: 1.25rem, /* 20sp */\n    font-weight: map-get($mdc-typography-font-weight-values, regular),\n    letter-spacing: .08em,\n    margin: -.5rem 0 1rem -.04em /* -8sp 0 16sp -.04em */\n  )\n) !default;\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/functions\";\n@import \"@material/elevation/mixins\";\n@import \"@material/rtl/mixins\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n@import \"@material/typography/variables\";\n\n$mdc-dialog-dark-theme-bg-color: #303030 !default;\n\n:root {\n  --mdc-dialog-dark-theme-bg-color: $mdc-dialog-dark-theme-bg-color;\n}\n\n// postcss-bem-linter: define dialog\n\n.mdc-dialog {\n  display: flex;\n  position: fixed;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  z-index: -1;\n\n  &__surface {\n    display: inline-flex;\n    flex-direction: column;\n\n    @include mdc-elevation(24);\n\n    width: calc(100% - 30px);\n    min-width: 640px;\n    max-width: 865px;\n    transform: translateY(150px) scale(.8);\n    transition: mdc-animation-enter(opacity, 120ms), mdc-animation-enter(transform, 120ms);\n    border-radius: 2px;\n\n    @include mdc-theme-prop(background-color, background);\n\n    @include mdc-theme-dark(\".mdc-dialog\") {\n      @include mdc-theme-prop(color, text-primary-on-dark);\n\n      background-color: $mdc-dialog-dark-theme-bg-color;\n      background-color: var(--mdc-dialog-dark-theme-bg-color, #{$mdc-dialog-dark-theme-bg-color});\n    }\n\n    @include mdc-rtl(\".mdc-dialog\") {\n      text-align: right;\n    }\n\n    opacity: 0;\n  }\n\n  &__backdrop {\n    display: flex;\n    position: fixed;\n    top: 0;\n    left: 0;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n\n    @include mdc-theme-prop(background-color, text-primary-on-light);\n\n    opacity: 0;\n    z-index: -1;\n  }\n\n  &__header {\n    display: flex;\n    align-items: center;\n    padding: 24px 24px 0;\n\n    &__empty {\n      padding: 0;\n    }\n\n    @include mdc-rtl(\".mdc-dialog\") {\n      text-align: right;\n    }\n\n    &__title {\n      flex: 1;\n      margin: 0;\n\n      @include mdc-typography(title);\n    }\n  }\n\n  &__body {\n    margin-top: 20px;\n    padding: 0 24px 24px;\n\n    @include mdc-theme-prop(color, text-secondary-on-light);\n\n    @include mdc-theme-dark(\".mdc-dialog\", true) {\n      @include mdc-theme-prop(color, text-secondary-on-dark);\n    }\n\n    @include mdc-typography(body1);\n\n    &--scrollable {\n      max-height: 195px;\n      border-top: 1px solid rgba(0, 0, 0, .1);\n      border-bottom: 1px solid rgba(0, 0, 0, .1);\n      overflow-y: scroll;\n      overflow-x: auto;\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n\n  &__footer {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: flex-end;\n    padding: 8px;\n  }\n\n  // TODO: Replace with breakpoint variable\n  @media (max-width: 640px) {\n    min-width: 280px;\n\n    &__surface {\n      min-width: 280px;\n    }\n\n    &__body {\n      line-height: 24px;\n    }\n  }\n}\n\n.mdc-dialog--open {\n  display: flex;\n  top: 0;\n  left: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  opacity: 1;\n  z-index: 2;\n\n  .mdc-dialog__surface {\n    transform: translateY(0) scale(1);\n    transition: mdc-animation-enter(opacity, 120ms), mdc-animation-enter(transform, 120ms);\n    opacity: 1;\n  }\n\n  .mdc-dialog__backdrop {\n    transition: mdc-animation-enter(opacity, 120ms);\n    opacity: .3;\n  }\n}\n\n// postcss-bem-linter: end\n\n.mdc-dialog-scroll-lock {\n  height: 100vh;\n  overflow: hidden;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n@import \"@material/rtl/mixins\";\n\n@mixin mdc-slideable-drawer {\n  height: 100%;\n  transform: translateX(-107%);\n  transform: translateX(calc(-100% - 20px));\n  will-change: transform;\n}\n\n@mixin mdc-slideable-drawer-rtl {\n  transform: translateX(107%);\n  transform: translateX(calc(100% + 20px));\n}\n\n@mixin mdc-slideable-drawer-open {\n  transform: none;\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n$mdc-slidable-drawer-transition-time: .13s;\n$mdc-slidable-drawer-transition-open-time: .33s;\n$mdc-slidable-drawer-transition: mdc-animation-enter(transform, $mdc-slidable-drawer-transition-time);\n$mdc-slidable-drawer-transition-open: mdc-animation-enter(transform, $mdc-slidable-drawer-transition-open-time);\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/rtl/mixins\";\n@import \"@material/theme/mixins\";\n@import \"../mixins\";\n@import \"../slidable/mixins\";\n@import \"../slidable/variables\";\n\n$mdc-persistent-drawer-width: 240px;\n$mdc-persistent-drawer-dark-theme-bg-color: #212121 !default;\n\n:root {\n  --mdc-persistent-drawer-dark-theme-bg-color: $mdc-persistent-drawer-dark-theme-bg-color;\n}\n\n.mdc-persistent-drawer {\n  @include mdc-drawer-base_;\n  width: 0;\n\n  &__drawer {\n    @include mdc-theme-prop(background, background);\n    @include mdc-rtl-reflexive-box(border, right, 1px solid #e4e4e4);\n    @include mdc-rtl-reflexive-position(left, 0);\n\n    @include mdc-theme-dark {\n      background-color: $mdc-persistent-drawer-dark-theme-bg-color;\n      background-color: var(--mdc-persistent-drawer-dark-theme-bg-color, #{$mdc-persistent-drawer-dark-theme-bg-color});\n\n      @include mdc-theme-prop(color, text-primary-on-dark);\n      @include mdc-rtl-reflexive-box(border, right, 1px solid rgba(white, .12));\n    }\n\n    @include mdc-slideable-drawer;\n\n    @include mdc-rtl(\".mdc-persistent-drawer\") {\n        @include mdc-slideable-drawer-rtl;\n    }\n\n    display: inline-flex;\n    flex-direction: column;\n    box-sizing: border-box;\n    overflow: hidden;\n    touch-action: none;\n    width: $mdc-persistent-drawer-width;\n  }\n\n  &--animating {\n\n    .mdc-persistent-drawer__drawer {\n      transition: $mdc-slidable-drawer-transition;\n    }\n\n    &.mdc-persistent-drawer--open .mdc-persistent-drawer__drawer  {\n      transition: $mdc-slidable-drawer-transition-open;\n    }\n  }\n\n  &--open {\n    width: $mdc-persistent-drawer-width;\n    pointer-events: auto;\n\n    .mdc-persistent-drawer__drawer {\n      @include mdc-slideable-drawer-open;\n    }\n\n    // Specificity fix to ensure that mdc-drawer is not translated off-screen within an RTL context\n    @include mdc-rtl {\n      .mdc-persistent-drawer__drawer {\n        @include mdc-slideable-drawer-open;\n      }\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/functions\";\n@import \"@material/animation/variables\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n\n@mixin mdc-drawer-toolbar-spacer_() {\n  &__toolbar-spacer {\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    flex-shrink: 0;\n    align-items: flex-center;\n    height: 56px;\n    padding: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, .12);\n    box-sizing: border-box;\n\n    @include mdc-theme-dark(quote(#{&})) {\n      border-bottom: 1px solid rgba(255, 255, 255, .12);\n    }\n\n    /* TODO(sgomes): replace with global breakpoints when we have them */\n    @media (min-width: 600px) {\n      height: 64px;\n    }\n  }\n}\n\n@mixin mdc-drawer-header_() {\n  /* Use aspect ratio trick to maintain 16:9 aspect ratio on the header */\n  &__header {\n    position: relative;\n  }\n\n  &__header::before {\n    display: block;\n    padding-top: 9 / 16 * 100%;\n    content: \"\";\n  }\n\n  &__header-content {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    align-items: flex-end;\n    padding: 16px;\n    box-sizing: border-box;\n  }\n}\n\n@mixin mdc-drawer-list_() {\n  .mdc-list-group,\n  .mdc-list {\n    padding-right: 0;\n    padding-left: 0;\n  }\n\n  .mdc-list-item {\n    position: relative;\n    padding: 0 16px;\n    outline: none;\n    color: inherit;\n    text-decoration: none;\n\n    @include mdc-typography(body2);\n  }\n\n  .mdc-list-item__start-detail {\n    color: rgba(0, 0, 0, .54);\n\n    @include mdc-theme-dark(#{&}) {\n      color: rgba(255, 255, 255, .54);\n    }\n  }\n\n  /* stylelint-disable selector-no-qualifying-type */\n  &--selected.mdc-list-item,\n  &--selected.mdc-list-item .mdc-list-item__start-detail {\n    @include mdc-theme-prop(color, primary);\n  }\n  /* stylelint-enable selector-no-qualifying-type */\n\n  /* TODO(sgomes): Revisit when we have interactive lists. */\n  .mdc-list-item::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transition: mdc-animation-exit(opacity, 120ms);\n    border-radius: inherit;\n    background: currentColor;\n    content: \"\";\n    opacity: 0;\n  }\n\n  .mdc-list-item:focus::before {\n    transition: mdc-animation-enter(opacity, 180ms);\n    opacity: .12;\n  }\n\n  .mdc-list-item:active::before {\n    /*\n      Slightly darker value for visual distinction.\n      This allows a full base that has distinct modes.\n      Progressive enhancement with ripples will provide complete button spec alignment.\n    */\n    transition: mdc-animation-enter(opacity, 180ms);\n    opacity: .18;\n  }\n\n  .mdc-list-item:active:focus::before {\n    transition-timing-function: $mdc-animation-fast-out-slow-in-timing-function;\n  }\n}\n\n@mixin mdc-drawer-base_() {\n  @include mdc-drawer-toolbar-spacer_;\n  @include mdc-drawer-header_;\n  @include mdc-drawer-list_;\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/rtl/mixins\";\n@import \"@material/theme/mixins\";\n@import \"../mixins\";\n\n$mdc-permanent-drawer-width: 240px;\n$mdc-permanent-drawer-dark-theme-bg-color: #212121 !default;\n\n:root {\n  --mdc-permanent-drawer-dark-theme-bg-color: $mdc-permanent-drawer-dark-theme-bg-color;\n}\n\n.mdc-permanent-drawer {\n  @include mdc-drawer-base_;\n  @include mdc-theme-prop(background, background);\n  @include mdc-rtl-reflexive-box(border, right, 1px solid #e4e4e4);\n  @include mdc-rtl-reflexive-position(left, 0);\n\n  @include mdc-theme-dark {\n    background-color: $mdc-permanent-drawer-dark-theme-bg-color;\n    background-color: var(--mdc-permanent-drawer-dark-theme-bg-color, #{$mdc-permanent-drawer-dark-theme-bg-color});\n\n    @include mdc-theme-prop(color, text-primary-on-dark);\n    @include mdc-rtl-reflexive-box(border, right, 1px solid rgba(white, .12));\n  }\n\n  display: inline-flex;\n  flex-direction: column;\n  width: $mdc-permanent-drawer-width;\n  height: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  &--floating {\n    background: none;\n\n    @include mdc-rtl-reflexive-box(border, right, none);\n\n    @include mdc-theme-dark {\n      background: none;\n\n      @include mdc-rtl-reflexive-box(border, right, none);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/functions\";\n@import \"@material/elevation/mixins\";\n@import \"@material/rtl/mixins\";\n@import \"@material/theme/mixins\";\n@import \"../mixins\";\n@import \"../slidable/mixins\";\n@import \"../slidable/variables\";\n\n.mdc-temporary-drawer {\n  @include mdc-drawer-base_;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  pointer-events: none;\n  box-sizing: border-box;\n  contain: strict;\n  z-index: 3;\n\n  /* Shaded background */\n  &::before {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, .6);\n    content: \"\";\n    opacity: 0;\n    opacity: var(--mdc-temporary-drawer-opacity, 0);\n    will-change: opacity;\n    box-sizing: border-box;\n  }\n\n  &__drawer {\n    @include mdc-theme-prop(background, background);\n    @include mdc-elevation(16);\n    @include mdc-rtl-reflexive-position(left, 0);\n\n    @include mdc-theme-dark(\".mdc-temporary-drawer\") {\n      background: #303030;\n\n      @include mdc-theme-prop(color, text-primary-on-dark);\n    }\n\n    @include mdc-slideable-drawer;\n\n    @include mdc-rtl(\".mdc-temporary-drawer__drawer\") {\n      @include mdc-slideable-drawer-rtl;\n    }\n\n    display: flex;\n    position: absolute;\n    flex-direction: column;\n    width: calc(100% - 56px);\n    max-width: 280px;\n    box-sizing: border-box;\n    overflow: hidden;\n    touch-action: none;\n\n    /* TODO(sgomes): replace with global breakpoints when we have them */\n    @media (min-width: 600px) {\n      width: calc(100% - 64px);\n      max-width: 320px;\n    }\n  }\n\n  &__content {\n    flex-grow: 1;\n    margin: 0;\n    overflow-x: hidden;\n    overflow-y: auto;\n    box-sizing: border-box;\n    -webkit-overflow-scrolling: touch;\n    touch-action: pan-y;\n  }\n\n  &__footer {\n    @include mdc-elevation(2);\n\n    flex-shrink: 0;\n  }\n\n  &--animating {\n    &::before {\n      transition: mdc-animation-enter(opacity, .3s);\n    }\n\n    &.mdc-temporary-drawer--open .mdc-temporary-drawer__drawer {\n      transition: $mdc-slidable-drawer-transition-open;\n    }\n\n    .mdc-temporary-drawer__drawer {\n      transition: $mdc-slidable-drawer-transition;\n    }\n  }\n\n  &--open {\n    pointer-events: auto;\n\n    &::before {\n      opacity: 1;\n      opacity: var(--mdc-temporary-drawer-opacity, 1);\n    }\n\n    .mdc-temporary-drawer__drawer {\n      @include mdc-slideable-drawer-open;\n    }\n\n    // Specificity fix to ensure that mdc-drawer is not translated off-screen within an RTL context\n    @include mdc-rtl {\n      .mdc-temporary-drawer__drawer {\n        @include mdc-slideable-drawer-open;\n      }\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n/**\n * Applies the correct css rules to an element to give it the elevation specified by $z-value.\n * The $z-value must be between 0 and 24.\n */\n@mixin mdc-elevation($z-value) {\n  @if type-of($z-value) != number or not unitless($z-value) {\n    @error \"$z-value must be a unitless number\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24\";\n  }\n\n  #{$mdc-elevation-property}:\n    #{map-get($mdc-elevation-umbra-map, $z-value)} $mdc-elevation-umbra-color,\n    #{map-get($mdc-elevation-penumbra-map, $z-value)} $mdc-elevation-penumbra-color,\n    #{map-get($mdc-elevation-ambient-map, $z-value)} $mdc-elevation-ambient-color;\n}\n\n/**\n * Returns a string that can be used as the value for a `transition` property for elevation.\n * Calling this function directly is useful in situations where a component needs to transition\n * more than one property.\n *\n * ```scss\n * .foo {\n *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;\n *   will-change: $mdc-elevation-property, opacity;\n * }\n * ```\n */\n@function mdc-elevation-transition-rule(\n  $duration: $mdc-elevation-transition-duration,\n  $easing: $mdc-elevation-transition-timing-function) {\n  @return #{$mdc-elevation-property} #{$duration} #{$easing};\n}\n\n/**\n * Applies the correct css rules needed to have an element transition between elevations.\n * This mixin should be applied to elements whose elevation values will change depending on their\n * context (e.g. when active or disabled).\n */\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mdc-elevation-transition(\n  $duration: $mdc-elevation-transition-duration,\n  $easing: $mdc-elevation-transition-timing-function) {\n  transition: mdc-elevation-transition-rule($duration, $easing);\n  will-change: $mdc-elevation-property;\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./mixins\";\n\n@for $z-value from 0 through 24 {\n  .mdc-elevation--z#{$z-value} {\n    @include mdc-elevation($z-value);\n  }\n}\n\n.mdc-elevation-transition {\n  @include mdc-elevation-transition;\n}\n","// Copyright 2016 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n@import \"@material/animation/functions\";\n@import \"@material/animation/variables\";\n@import \"@material/elevation/mixins\";\n@import \"@material/ripple/mixins\";\n@import \"@material/theme/mixins\";\n\n// postcss-bem-linter: define fab\n.mdc-fab {\n  @include mdc-ripple-base;\n  @include mdc-ripple-bg((pseudo: \"::before\", base-color: white, opacity: .16));\n  @include mdc-ripple-fg((pseudo: \"::after\", base-color: white, opacity: .16));\n\n  display: inline-flex;\n  position: relative;\n  justify-content: center;\n  width: 56px;\n  height: 56px;\n  padding: 0;\n  transition: box-shadow 280ms $mdc-animation-fast-out-slow-in-timing-function;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  user-select: none;\n  box-sizing: border-box;\n  fill: currentColor;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  overflow: hidden;\n\n  &:not(.mdc-ripple-upgraded) {\n    -webkit-tap-highlight-color: rgba(0, 0, 0, .18);\n  }\n\n  @include mdc-theme-prop(background-color, accent);\n  @include mdc-theme-prop(color, text-primary-on-accent);\n  @include mdc-elevation(6);\n\n  &--mini {\n    width: 40px;\n    height: 40px;\n  }\n\n  &--plain {\n    background-color: white;\n\n    @include mdc-theme-prop(color, text-primary-on-light);\n    @include mdc-ripple-bg((pseudo: \"::before\"));\n    @include mdc-ripple-fg((pseudo: \"::after\"));\n  }\n\n  &:active,\n  &:focus {\n    outline: none;\n  }\n\n  &:active {\n    @include mdc-elevation(12);\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &::-moz-focus-inner {\n    padding: 0;\n    border: 0;\n  }\n\n  // This allows for using SVGs within them to align properly in all browsers.\n  // Can remove once: https://bugzilla.mozilla.org/show_bug.cgi?id=1294515 is resolved.\n\n  // stylelint-disable selector-no-type\n  // postcss-bem-linter: ignore\n  > svg {\n    width: 100%;\n  }\n  // stylelint-enable selector-no-type\n\n  fieldset:disabled &,\n  &:disabled {\n    background-color: rgba(0, 0, 0, .12);\n    color: rgba(0, 0, 0, .26);\n    cursor: default;\n    pointer-events: none;\n  }\n}\n\n.mdc-fab__icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n\n// postcss-bem-linter: end\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/rtl/mixins\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n\n$mdc-form-field-item-spacing: 4px;\n\n/* stylelint-disable selector-no-type */\n.mdc-form-field {\n  @include mdc-typography(body1);\n  @include mdc-theme-prop(color, text-primary-on-light);\n\n  display: inline-flex;\n  align-items: center;\n  vertical-align: middle;\n\n  @include mdc-theme-dark {\n    @include mdc-theme-prop(color, text-primary-on-dark);\n  }\n\n  > label {\n    order: 0;\n    margin-right: auto;\n    padding-left: $mdc-form-field-item-spacing;\n  }\n\n  @include mdc-rtl {\n    > label {\n      margin-left: auto;\n      padding-right: $mdc-form-field-item-spacing;\n    }\n  }\n}\n\n.mdc-form-field--align-end {\n  > label {\n    order: -1;\n    margin-left: auto;\n    padding-right: $mdc-form-field-item-spacing;\n  }\n\n  @include mdc-rtl {\n    > label {\n      margin-right: auto;\n      padding-left: $mdc-form-field-item-spacing;\n    }\n  }\n}\n/* stylelint-enable selector-no-type */\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/rtl/mixins\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n\n$mdc-grid-list-tile-width: 200px !default;\n$mdc-grid-list-tile-secondary-padding: 16px;\n$mdc-grid-list-tile-secondary-padding-narrow: 8px;\n$mdc-grid-list-oneline-cap-secondary-height: 48px;\n$mdc-grid-list-twoline-cap-secondary-height: 68px;\n$mdc-grid-list-tile-secondary-icon-size: 24px;\n\n@mixin mdc-grid-list-tile-aspect($width-height-ratio) {\n  .mdc-grid-tile__primary {\n    padding-bottom: calc(100% / #{$width-height-ratio});\n  }\n}\n\n@mixin mdc-grid-list-tile-gutter($gutter-width) {\n  .mdc-grid-tile {\n    margin: $gutter-width/2 0;\n    padding: 0 $gutter-width/2;\n\n    &__secondary {\n      left: $gutter-width/2;\n      width: calc(100% - #{$gutter-width});\n    }\n  }\n\n  .mdc-grid-list__tiles {\n    margin: $gutter-width/2 auto;\n  }\n}\n\n// postcss-bem-linter: define grid-list\n.mdc-grid-list {\n  @include mdc-grid-list-tile-aspect(1);\n  @include mdc-grid-list-tile-gutter(4px);\n\n  &__tiles {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    margin: 0;\n    padding: 0;\n  }\n}\n\n.mdc-grid-list--tile-gutter-1 {\n  @include mdc-grid-list-tile-gutter(1px);\n}\n\n.mdc-grid-list--tile-aspect-16x9 {\n  @include mdc-grid-list-tile-aspect(16 / 9);\n}\n\n.mdc-grid-list--tile-aspect-3x2 {\n  @include mdc-grid-list-tile-aspect(3 / 2);\n}\n\n.mdc-grid-list--tile-aspect-2x3 {\n  @include mdc-grid-list-tile-aspect(2 / 3);\n}\n\n.mdc-grid-list--tile-aspect-4x3 {\n  @include mdc-grid-list-tile-aspect(4 / 3);\n}\n\n.mdc-grid-list--tile-aspect-3x4 {\n  @include mdc-grid-list-tile-aspect(3 / 4);\n}\n\n// stylelint-disable plugin/selector-bem-pattern\n// We need to disable linter here because we are nesting grid-tile under grid list here.\n.mdc-grid-list--twoline-caption {\n  .mdc-grid-tile__secondary {\n    height: $mdc-grid-list-twoline-cap-secondary-height;\n  }\n}\n\n.mdc-grid-list--header-caption {\n  .mdc-grid-tile__secondary {\n    top: 0;\n    bottom: auto;\n  }\n}\n\n.mdc-grid-list--with-icon-align-start {\n  .mdc-grid-tile__secondary {\n    @include mdc-rtl-reflexive-property(padding, $mdc-grid-list-tile-secondary-padding * 2 + $mdc-grid-list-tile-secondary-icon-size, $mdc-grid-list-tile-secondary-padding-narrow, \".mdc-grid-list\");\n  }\n\n  .mdc-grid-tile__icon {\n    @include mdc-rtl-reflexive-position(left, $mdc-grid-list-tile-secondary-padding, \".mdc-grid-list\");\n\n    font-size: $mdc-grid-list-tile-secondary-icon-size;\n  }\n}\n\n.mdc-grid-list--with-icon-align-end {\n  .mdc-grid-tile__secondary {\n    @include mdc-rtl-reflexive-property(padding, $mdc-grid-list-tile-secondary-padding, $mdc-grid-list-tile-secondary-padding * 2 + $mdc-grid-list-tile-secondary-icon-size, \".mdc-grid-list\");\n  }\n\n  .mdc-grid-tile__icon {\n    @include mdc-rtl-reflexive-position(right, $mdc-grid-list-tile-secondary-padding, \".mdc-grid-list\");\n\n    font-size: $mdc-grid-list-tile-secondary-icon-size;\n  }\n}\n// stylelint-enable plugin/selector-bem-pattern\n// postcss-bem-linter: end\n\n// postcss-bem-linter: define grid-tile\n.mdc-grid-tile {\n  display: block;\n  position: relative;\n  width: var(--mdc-grid-list-tile-width, $mdc-grid-list-tile-width);\n\n  &__primary {\n    position: relative;\n    height: 0;\n\n    @include mdc-theme-prop(background-color, background);\n    @include mdc-theme-prop(color, text-primary-on-background);\n\n    &-content {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: cover;\n    }\n  }\n\n  &__secondary {\n    position: absolute;\n    box-sizing: border-box;\n    bottom: 0;\n    height: $mdc-grid-list-oneline-cap-secondary-height;\n    padding: $mdc-grid-list-tile-secondary-padding;\n\n    @include mdc-theme-prop(background-color, primary);\n    @include mdc-theme-prop(color, text-primary-on-primary);\n  }\n\n  &__title {\n    display: block;\n    margin: 0;\n    padding: 0;\n    font-size: 1rem;\n    font-weight: #{map-get($mdc-typography-font-weight-values, medium)};\n    line-height: 1rem;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n\n  &__support-text {\n    @include mdc-typography(body1);\n\n    display: block;\n    margin: 0;\n    margin-top: 4px;\n    padding: 0;\n  }\n\n  &__icon {\n    position: absolute;\n    top: calc(50% - #{$mdc-grid-list-tile-secondary-icon-size} / 2);\n    font-size: 0;\n  }\n}\n// postcss-bem-linter: end\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n/** postcss-bem-linter: define icon-toggle */\n\n@import \"@material/animation/functions\";\n@import \"@material/ripple/mixins\";\n@import \"@material/theme/mixins\";\n\n.mdc-icon-toggle {\n  @include mdc-theme-prop(color, text-secondary-on-light);\n  @include mdc-ripple-base;\n  // NOTE: The spec denotes specific opacity values to use for different styles of icon buttons,\n  // either \"light\", \"dark\", or \"color\". Because ripples are made up of two distinct elements,\n  // we need to use an opacity value such that when two elements of the same color and opacity are\n  // layered on top of one another, they create the opacity specified in the spec.\n  // This is done by using the painter's compositing algorithm:\n  //\n  // alpha[desired] = alpha[a] + alpha[b](1 - alpha[a]).\n  //\n  // Because both alpha values are the same this reduces to:\n  //\n  // alpha[desired] = alpha[a] + alpha[a](1 - alpha[a]).\n  //\n  // We simply solve this quadratic equation for the nonnegative root between [0, 1].\n  // E.g. for black 12% opacity:\n  // https://www.wolframalpha.com/input/?i=x+%2B+x(1+-+x)+%3D+.12,+x+%3C%3D+1,+x+%3E%3D+0\n  @include mdc-ripple-bg((pseudo: \"::before\", opacity: .062));\n  @include mdc-ripple-fg((pseudo: \"::after\", opacity: .062));\n\n  @include mdc-theme-dark(\".mdc-icon-toggle\", true) {\n    @include mdc-ripple-bg((pseudo: \"::before\", base-color: white, opacity: .16));\n    @include mdc-ripple-fg((pseudo: \"::after\", base-color: white, opacity: .16));\n  }\n\n  // For some reason, GPU layer promotion makes ripples look terrible on Chrome\n  will-change: initial;\n  display: flex;\n  position: relative;\n  box-sizing: border-box;\n  align-items: center;\n  justify-content: center;\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n  outline: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n  user-select: none;\n\n  &::after {\n    position: absolute;\n    border-radius: 50%;\n    content: \"\";\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  @include mdc-theme-dark {\n    @include mdc-theme-prop(color, text-primary-on-dark);\n  }\n}\n\n.mdc-icon-toggle--primary {\n  @include mdc-theme-prop(color, primary);\n  @include mdc-ripple-bg((pseudo: \"::before\", theme-style: primary, opacity: .14));\n  @include mdc-ripple-fg((pseudo: \"::after\", theme-style: primary, opacity: .14));\n}\n\n.mdc-icon-toggle--accent {\n  @include mdc-theme-prop(color, accent);\n  @include mdc-ripple-bg((pseudo: \"::before\", theme-style: accent, opacity: .14));\n  @include mdc-ripple-fg((pseudo: \"::after\", theme-style: accent, opacity: .14));\n}\n\n.mdc-icon-toggle--disabled {\n  @include mdc-theme-prop(color, text-disabled-on-light);\n\n  pointer-events: none;\n\n  @include mdc-theme-dark(\".mdc-icon-toggle\", true) {\n    @include mdc-theme-prop(color, text-disabled-on-dark);\n  }\n}\n\n/** postcss-bem-linter: end */\n","// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n@import \"./variables\";\n@import \"./mixins\";\n\n// postcss-bem-linter: define layout-grid\n.mdc-layout-grid {\n  @include mdc-layout-grid($mdc-layout-grid-default-margin, $mdc-layout-grid-default-gutter);\n}\n\n.mdc-layout-grid__cell {\n  @include mdc-layout-grid-cell($mdc-layout-grid-default-gutter);\n\n  @each $size in map-keys($mdc-layout-grid-columns) {\n    @include mdc-layout-grid-media-query_($size) {\n      @for $span from 1 through map-get($mdc-layout-grid-columns, desktop) {\n        // Span classes.\n        // stylelint-disable max-nesting-depth\n        @at-root .mdc-layout-grid__cell--span-#{$span},\n          .mdc-layout-grid__cell--span-#{$span}-#{$size}.mdc-layout-grid__cell--span-#{$span}-#{$size} {\n          @include mdc-layout-grid-cell-span_($size, $span, $mdc-layout-grid-default-gutter);\n        }\n        // stylelint-enable max-nesting-depth\n      }\n    }\n  }\n\n  // Order override classes.\n  @for $i from 1 through map-get($mdc-layout-grid-columns, desktop) {\n    &--order-#{$i} {\n      @include mdc-layout-grid-cell-order($i);\n    }\n  }\n\n  // Alignment classes.\n  &--align-top {\n    @include mdc-layout-grid-cell-align(top);\n  }\n\n  &--align-middle {\n    @include mdc-layout-grid-cell-align(middle);\n  }\n\n  &--align-bottom {\n    @include mdc-layout-grid-cell-align(bottom);\n  }\n}\n\n// postcss-bem-linter: end\n","// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Private mixins, meant for internal use.\n@mixin mdc-layout-grid-media-query_($size) {\n  @if $size == phone {\n    // Phone\n    @media (max-width: map-get($mdc-layout-grid-breakpoints, tablet) - 1px) {\n      @content;\n    }\n  }\n\n  @if $size == tablet {\n    // Tablet\n    @media (min-width: map-get($mdc-layout-grid-breakpoints, tablet)) and (max-width: map-get($mdc-layout-grid-breakpoints, desktop) - 1px) {\n      @content;\n    }\n  }\n\n  @if $size == desktop {\n    // Desktop\n    @media (min-width: map-get($mdc-layout-grid-breakpoints, desktop)) {\n      @content;\n    }\n  }\n}\n\n@mixin mdc-layout-grid-cell-span_($size, $span, $gutter) {\n  $percent: percentage($span / map-get($mdc-layout-grid-columns, $size));\n\n  @if $percent > 100% {\n    $percent: 100%;\n  }\n\n  width: calc(#{$percent} - #{$gutter});\n  width: calc(#{$percent} - var(--mdc-layout-grid-gutter, #{$gutter}));\n\n  @supports (display: grid) {\n    width: auto;\n    grid-column-end: span min($span, map-get($mdc-layout-grid-columns, $size));\n  }\n}\n\n@mixin mdc-layout-grid-cell-spans_($span, $gutter) {\n  @each $size in map-keys($mdc-layout-grid-columns) {\n    @include mdc-layout-grid-media-query_($size) {\n      @include mdc-layout-grid-cell-span_($size, $span, $gutter);\n    }\n  }\n}\n\n// Public mixins, meant for developer usage.\n@mixin mdc-layout-grid($margin, $gutter, $max-width: null) {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: stretch;\n  margin: 0 auto;\n  box-sizing: border-box;\n  padding: $margin - $gutter / 2;\n  padding: calc(var(--mdc-layout-grid-margin, #{$margin}) - var(--mdc-layout-grid-gutter, #{$gutter}) / 2);\n\n  @if $max-width {\n    max-width: $max-width;\n  }\n\n  @supports (display: grid) {\n    display: grid;\n    grid-gap: $gutter;\n    grid-gap: var(--mdc-layout-grid-gutter, $gutter);\n    padding: $margin;\n    padding: var(--mdc-layout-grid-margin, #{$margin});\n\n    @each $size in map-keys($mdc-layout-grid-columns) {\n      @include mdc-layout-grid-media-query_($size) {\n        grid-template-columns: repeat(map-get($mdc-layout-grid-columns, $size), minmax(0, 1fr));\n      }\n    }\n  }\n}\n\n@mixin mdc-layout-grid-cell($gutter, $span: 4) {\n  margin: $gutter / 2;\n  margin: calc(var(--mdc-layout-grid-gutter, #{$gutter}) / 2);\n  box-sizing: border-box;\n\n  @supports (display: grid) {\n    margin: 0;\n  }\n\n  @include mdc-layout-grid-cell-spans_($span, $gutter);\n}\n\n@mixin mdc-layout-grid-cell-order($order) {\n  order: $order;\n}\n\n@mixin mdc-layout-grid-cell-align($position) {\n  @if $position == \"top\" {\n    align-self: flex-start;\n\n    @supports (display: grid) {\n      align-self: start;\n    }\n  }\n\n  @if $position == \"middle\" {\n    align-self: center;\n  }\n\n  @if $position == \"bottom\" {\n    align-self: flex-end;\n\n    @supports (display: grid) {\n      align-self: end;\n    }\n  }\n\n  @if $position == \"stretch\" {\n    align-self: stretch;\n  }\n}\n","// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n$mdc-layout-grid-breakpoints: (\n  desktop: 840px,\n  tablet: 480px,\n  phone: 0px\n) !default;\n\n$mdc-layout-grid-columns: (\n  desktop: 12,\n  tablet: 8,\n  phone: 4\n) !default;\n\n$mdc-layout-grid-default-column-span: 4 !default;\n$mdc-layout-grid-default-margin: 16px !default;\n$mdc-layout-grid-default-gutter: 16px !default;\n","// Copyright 2016 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n@import \"@material/ripple/mixins\";\n@import \"@material/rtl/mixins\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n@import \"@material/typography/variables\";\n\n$mdc-list-side-padding: 16px;\n\n// Sets the width and height of a detail element to the specified dimension.\n@mixin mdc-list-detail-size_($size) {\n  width: $size;\n  height: $size;\n}\n\n// Sets the width and height of the start detail element, as well as calculates the margins for\n// the start detail element such that the text is always offset by 72px, which is defined within\n// the spec.\n@mixin mdc-list-start-detail-size_($size) {\n  $text-offset: 72px;\n  $side-padding: $mdc-list-side-padding;\n  $margin-value: $text-offset - $side-padding - $size;\n\n  @include mdc-list-detail-size_($size);\n  @include mdc-rtl-reflexive-box(margin, right, $margin-value, \".mdc-list-item\");\n}\n\n// postcss-bem-linter: define list\n\n.mdc-list {\n  @include mdc-typography(subheading2);\n  @include mdc-theme-prop(color, text-primary-on-background);\n\n  @include mdc-theme-dark {\n    @include mdc-theme-prop(color, text-primary-on-dark);\n  }\n\n  margin: 0;\n  padding: 8px $mdc-list-side-padding 0;\n\n  // According to the mocks and stickersheet, the line-height is adjusted to 24px for text content,\n  // same as for subheading1.\n  line-height: map-get(map-get($mdc-typography-styles, subheading1), line-height);\n  list-style-type: none;\n}\n\n.mdc-list--dense {\n  padding-top: 4px;\n  font-size: .812rem;\n}\n\n// postcss-bem-linter: end\n\n// postcss-bem-linter: define list-item\n\n.mdc-list-item {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  height: 48px;\n\n  &__start-detail {\n    @include mdc-list-start-detail-size_(24px);\n  }\n\n  &__end-detail {\n    @include mdc-list-detail-size_(24px);\n    @include mdc-rtl-reflexive-property(margin, auto, $mdc-list-side-padding, \".mdc-list-item\");\n  }\n\n  &__text {\n    display: inline-flex;\n    flex-direction: column;\n\n    &__secondary {\n      @include mdc-typography(body1);\n      @include mdc-theme-prop(color, text-secondary-on-background);\n\n      @include mdc-theme-dark {\n        @include mdc-theme-prop(color, text-secondary-on-dark);\n      }\n\n      // Match the font size to the primary text when dense\n      // stylelint-disable plugin/selector-bem-pattern\n      .mdc-list--dense & {\n        font-size: inherit;\n      }\n      // stylelint-enable plugin/selector-bem-pattern\n    }\n  }\n\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-list--dense & {\n    height: 40px;\n\n    &__start-detail {\n      @include mdc-list-start-detail-size_(20px);\n    }\n\n    &__end-detail {\n      @include mdc-list-detail-size_(20px);\n    }\n  }\n\n  .mdc-list--avatar-list & {\n    height: 56px;\n\n    &__start-detail {\n      @include mdc-list-start-detail-size_(40px);\n\n      border-radius: 50%;\n    }\n  }\n\n  .mdc-list--avatar-list.mdc-list--dense .mdc-list__item {\n    height: 48px;\n\n    &__start-detail {\n      @include mdc-list-start-detail-size_(36px);\n    }\n  }\n\n  .mdc-list--two-line & {\n    height: 72px;\n  }\n\n  .mdc-list--two-line.mdc-list--dense & {\n    height: 60px;\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n}\n\n// postcss-bem-linter: end //\n\n// Override anchor tag styles for the use-case of a list being used for navigation\n// stylelint-disable selector-no-type,selector-no-qualifying-type\na.mdc-list-item {\n  color: inherit;\n  text-decoration: none;\n}\n// stylelint-enable selector-no-type,selector-no-qualifying-type\n\n.mdc-list-item.mdc-ripple-upgraded {\n  @include mdc-ripple-base;\n  @include mdc-ripple-bg((pseudo: \"::before\"));\n  @include mdc-ripple-fg((pseudo: \"::after\"));\n\n  position: relative;\n  // Cause the upgraded list item to cover the entirety of the list, causing ripples to emanate\n  // across the entire list element.\n  left: $mdc-list-side-padding * -1;\n  width: 100%;\n  padding: 0 $mdc-list-side-padding;\n  overflow: hidden;\n\n  &:focus {\n    outline: none;\n  }\n\n  @include mdc-theme-dark(\".mdc-list\") {\n    @include mdc-ripple-bg((pseudo: \"::before\", base-color: white, opacity: .12));\n    @include mdc-ripple-fg((pseudo: \"::after\", base-color: white, opacity: .12));\n  }\n}\n\n// postcss-bem-linter: define list-divider\n\n.mdc-list-divider {\n  height: 0;\n  margin: 0;\n  border: none;\n  border-bottom: 1px solid rgba(0, 0, 0, .12);\n\n  @include mdc-theme-dark(\".mdc-list\") {\n    border-bottom-color: rgba(255, 255, 255, .2);\n  }\n}\n\n.mdc-list-divider--inset {\n  $mdc-list-divider-inset-amt: /* text offset */ 72px - /* padding offset */ $mdc-list-side-padding;\n\n  @include mdc-rtl-reflexive-box(margin, left, $mdc-list-divider-inset-amt, \".mdc-list-group\");\n\n  width: calc(100% - #{$mdc-list-divider-inset-amt});\n}\n\n// postcss-bem-linter: end\n\n// postcss-bem-linter: define list-group\n\n.mdc-list-group {\n  padding: 0 $mdc-list-side-padding;\n\n  &__subheader {\n    $mdc-list-subheader-virtual-height: 3rem;\n    $mdc-list-subheader-leading: map-get(map-get($mdc-typography-styles, body2), line-height);\n    $mdc-list-subheader-margin:\n      ($mdc-list-subheader-virtual-height - $mdc-list-subheader-leading) / 2;\n\n    @include mdc-typography(body2);\n    @include mdc-theme-prop(color, text-primary-on-background);\n\n    @include mdc-theme-dark {\n      @include mdc-theme-prop(color, text-primary-on-dark);\n    }\n\n    margin: $mdc-list-subheader-margin 0;\n  }\n\n  // Reset padding on mdc-list since it's already accounted for by the list group.\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-list {\n    padding: 0;\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n}\n\n// postcss-bem-linter: end\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/variables\";\n@import \"@material/elevation/mixins\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n\n$mdc-simple-menu-fade-duration: .2s;\n$mdc-simple-menu-item-fade-duration: .3s;\n\n/* postcss-bem-linter: define simple-menu */\n.mdc-simple-menu {\n  display: none;\n  position: absolute;\n  max-width: calc(100vw - 32px);\n  max-height: calc(100vh - 32px);\n  margin: 0;\n  padding: 0;\n  transform: scale(0);\n  transform-origin: top left;\n  border-radius: 2px;\n  background-color: white;\n  white-space: nowrap;\n  opacity: 0;\n  overflow: hidden;\n  box-sizing: border-box;\n  will-change: transform, opacity;\n\n  @include mdc-elevation(2);\n\n  @include mdc-theme-dark {\n    background-color: #424242;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &--open {\n    display: inline-block;\n    transform: scale(1);\n    opacity: 1;\n  }\n\n  &--animating {\n    display: inline-block;\n    transition: opacity $mdc-simple-menu-fade-duration $mdc-animation-linear-out-slow-in-timing-function;\n  }\n\n  &__items {\n    display: inline-block;\n    overflow-x: hidden;\n    overflow-y: auto;\n    box-sizing: border-box;\n    will-change: transform;\n\n    /* stylelint-disable plugin/selector-bem-pattern, selector-no-universal */\n    > * {\n      opacity: 0;\n    }\n\n    > .mdc-list-item {\n      cursor: pointer;\n    }\n\n    .mdc-simple-menu--animating & {\n      overflow-y: hidden;\n\n      > * {\n        transition-duration: $mdc-simple-menu-item-fade-duration;\n        transition-property: opacity;\n        transition-timing-function: $mdc-animation-linear-out-slow-in-timing-function;\n      }\n    }\n\n    .mdc-simple-menu--open & {\n      > * {\n        opacity: 1;\n        will-change: opacity;\n      }\n    }\n    /* stylelint-enable plugin/selector-bem-pattern, selector-no-universal */\n  }\n\n  /* stylelint-disable plugin/selector-bem-pattern */\n  [dir=\"rtl\"] & {\n    transform-origin: top right;\n  }\n  /* stylelint-enable plugin/selector-bem-pattern */\n\n  // Note: it's appropriate to use `!important` for these since:\n  // - they override defaults at several levels of specificity;\n  // - they're optional classes that are purposely added by the developer to obtain a desired behaviour.\n  &--open-from-top-left {\n    transform-origin: top left !important;\n  }\n\n  &--open-from-top-right {\n    transform-origin: top right !important;\n  }\n\n  &--open-from-bottom-left {\n    transform-origin: bottom left !important;\n  }\n\n  &--open-from-bottom-right {\n    transform-origin: bottom right !important;\n  }\n\n  /* stylelint-disable plugin/selector-bem-pattern */\n  .mdc-list-group,\n  .mdc-list {\n    padding: 0;\n  }\n\n  .mdc-list-item {\n    position: relative;\n    padding: 0 16px;\n    outline: none;\n    color: inherit;\n    text-decoration: none;\n\n    @include mdc-typography(body2);\n\n    @include mdc-theme-dark(\".mdc-simple-menu\", true) {\n      color: white;\n    }\n  }\n\n  .mdc-list-divider {\n    @include mdc-theme-dark(\".mdc-simple-menu\", true) {\n      border-color: rgba(white, .12);\n    }\n  }\n\n  .mdc-list-item__start-detail {\n    color: rgba(black, .54);\n\n    @include mdc-theme-dark(\".mdc-simple-menu\", true) {\n      color: rgba(white, .54);\n    }\n  }\n\n  /* stylelint-disable selector-no-qualifying-type */\n  &--selected.mdc-list-item,\n  &--selected.mdc-list-item .mdc-list-item__start-detail {\n    @include mdc-theme-prop(color, primary);\n  }\n  /* stylelint-enable selector-no-qualifying-type */\n\n  /* TODO(sgomes): Revisit when we have interactive lists. */\n  .mdc-list-item::before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transition: opacity 120ms $mdc-animation-linear-out-slow-in-timing-function;\n    border-radius: inherit;\n    background: currentColor;\n    content: \"\";\n    opacity: 0;\n  }\n\n  .mdc-list-item:focus::before {\n    opacity: .12;\n  }\n\n  .mdc-list-item:active::before {\n    /*\n      Slightly darker value for visual distinction.\n      This allows a full base that has distinct modes.\n      Progressive enhancement with ripples will provide complete button spec alignment.\n    */\n    opacity: .18;\n  }\n\n  /* stylelint-enable plugin/selector-bem-pattern */\n}\n\n/* postcss-bem-linter: end */\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./simple/mdc-simple-menu\";\n\n.mdc-menu-anchor {\n  position: relative;\n  overflow: visible;\n}\n","//\n// Copyright 2016 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/functions\";\n@import \"@material/ripple/mixins\";\n@import \"@material/theme/mixins\";\n\n$mdc-radio-touch-area: 40px;\n$mdc-radio-ui-size: 20px;\n$mdc-radio-ui-pct: percentage($mdc-radio-ui-size / $mdc-radio-touch-area);\n$mdc-radio-transition-duration: 120ms;\n\n@function mdc-radio-enter($name) {\n  @return mdc-animation-enter($name, $mdc-radio-transition-duration);\n}\n\n@function mdc-radio-exit($name) {\n  @return mdc-animation-exit($name, $mdc-radio-transition-duration);\n}\n\n// postcss-bem-linter: define radio\n.mdc-radio {\n  @include mdc-ripple-base;\n  @include mdc-ripple-bg((pseudo: \"::before\", theme-style: primary, opacity: .14));\n  @include mdc-ripple-fg((pseudo: \"::after\", theme-style: primary, opacity: .14));\n\n  display: inline-block;\n  position: relative;\n  box-sizing: border-box;\n  width: $mdc-radio-touch-area;\n  height: $mdc-radio-touch-area;\n  flex: 0 0 $mdc-radio-touch-area;\n  padding: ($mdc-radio-touch-area - $mdc-radio-ui-size) / 2;\n  cursor: pointer;\n  will-change: opacity, transform, border-color, background-color, color;\n\n  &::before,\n  &::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  // stylelint-disable plugin/selector-bem-pattern\n  &.mdc-ripple-upgraded {\n    .mdc-radio__background::before {\n      content: none;\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n\n  // Container for radio circles and ripple.\n  &__background {\n    display: inline-block;\n    position: absolute;\n    width: $mdc-radio-ui-pct;\n    height: $mdc-radio-ui-pct;\n    box-sizing: border-box;\n\n    &::before {\n      @include mdc-theme-prop(background-color, primary);\n\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      transform: scale(0, 0);\n      transition: mdc-radio-exit(opacity), mdc-radio-exit(transform);\n      border-radius: 50%;\n      content: \"\";\n      opacity: 0;\n      pointer-events: none;\n    }\n  }\n\n  &__outer-circle {\n    @include mdc-theme-prop(border-color, text-secondary-on-light);\n\n    @include mdc-theme-dark(\".mdc-radio\") {\n      @include mdc-theme-prop(border-color, text-secondary-on-dark);\n    }\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transition: mdc-radio-exit(border-color);\n    border-width: 2px;\n    border-style: solid;\n    border-radius: 50%;\n    box-sizing: border-box;\n  }\n\n  &__inner-circle {\n    @include mdc-theme-prop(background-color, text-secondary-on-light);\n\n    @include mdc-theme-dark(\".mdc-radio\") {\n      @include mdc-theme-prop(background-color, text-secondary-on-dark);\n    }\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transform: scale(0, 0);\n    transition: mdc-radio-exit(transform), mdc-radio-exit(background-color);\n    border-radius: 50%;\n    box-sizing: border-box;\n  }\n\n  &__native-control {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    cursor: inherit;\n    opacity: 0;\n    z-index: 1;\n  }\n}\n\n.mdc-radio__native-control:checked,\n.mdc-radio__native-control:disabled {\n  + .mdc-radio__background {\n    transition: mdc-radio-enter(opacity), mdc-radio-enter(transform);\n\n    .mdc-radio__outer-circle {\n      transition: mdc-radio-enter(border-color);\n    }\n\n    .mdc-radio__inner-circle {\n      transition: mdc-radio-enter(transform), mdc-radio-enter(background-color);\n    }\n  }\n}\n\n.mdc-radio--disabled {\n  cursor: default;\n  pointer-events: none;\n}\n\n.mdc-radio__native-control:checked {\n  + .mdc-radio__background {\n    .mdc-radio__outer-circle {\n      @include mdc-theme-prop(border-color, primary);\n    }\n\n    .mdc-radio__inner-circle {\n      @include mdc-theme-prop(background-color, primary);\n\n      transform: scale(.5);\n      transition: mdc-radio-enter(transform), mdc-radio-enter(background-color);\n    }\n  }\n}\n\n.mdc-radio__native-control:disabled,\nfieldset:disabled .mdc-radio__native-control,\n[aria-disabled=\"true\"] .mdc-radio__native-control {\n  + .mdc-radio__background {\n    cursor: default;\n\n    .mdc-radio__outer-circle {\n      border-color: rgba(black, .26);\n\n      @include mdc-theme-dark(\".mdc-radio\") {\n        border-color: rgba(white, .3);\n      }\n    }\n\n    .mdc-radio__inner-circle {\n      background-color: rgba(black, .26);\n\n      @include mdc-theme-dark(\".mdc-radio\") {\n        background-color: rgba(white, .3);\n      }\n    }\n  }\n}\n\n.mdc-radio__native-control:focus {\n  + .mdc-radio__background::before {\n    transform: scale(2, 2);\n    transition: mdc-radio-enter(opacity), mdc-radio-enter(transform);\n    opacity: .26;\n  }\n}\n\n// postcss-bem-linter: end\n","//\n// Copyright 2016 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/functions\";\n@import \"@material/theme/mixins\";\n@import \"./mixins\";\n\n// postcss-bem-linter: define ripple-surface\n\n.mdc-ripple-surface {\n  @include mdc-ripple-base;\n  @include mdc-ripple-bg((pseudo: \"::before\"));\n  @include mdc-ripple-fg((pseudo: \"::after\"));\n\n  position: relative;\n  outline: none;\n  overflow: hidden;\n\n  &[data-mdc-ripple-is-unbounded] {\n    overflow: visible;\n  }\n\n  &--primary {\n    &::before,\n    &::after {\n      @include mdc-theme-prop(background-color, primary);\n    }\n\n    @include mdc-ripple-bg((pseudo: \"::before\", theme-style: primary, opacity: .16));\n    @include mdc-ripple-fg((pseudo: \"::after\", theme-style: primary, opacity: .16));\n  }\n\n  &--accent {\n    &::before,\n    &::after {\n      @include mdc-theme-prop(background-color, primary);\n    }\n\n    @include mdc-ripple-bg((pseudo: \"::before\", theme-style: accent, opacity: .16));\n    @include mdc-ripple-fg((pseudo: \"::after\", theme-style: accent, opacity: .16));\n  }\n}\n\n// postcss-bem-linter: end\n","//\n// Copyright 2016 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/variables\";\n@import \"@material/theme/variables\";\n@import \"./keyframes\";\n\n@function mdc-ripple-default-config_() {\n  @return (\n    pseudo: null,\n    radius: 100%,\n    base-color: black,\n    opacity: .06,\n    theme-style: null\n  );\n}\n\n@mixin mdc-ripple-base() {\n  --mdc-ripple-surface-width: 0;\n  --mdc-ripple-surface-height: 0;\n  --mdc-ripple-fg-size: 0;\n  --mdc-ripple-left: 0;\n  --mdc-ripple-top: 0;\n  --mdc-ripple-fg-scale: 1;\n  --mdc-ripple-fg-translate-end: 0;\n  --mdc-ripple-fg-translate-start: 0;\n\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n\n  &:not(.mdc-ripple-upgraded) {\n    &:hover::before,\n    &:focus::before,\n    &:active::after {\n      transition-duration: 85ms;\n      opacity: .6;\n    }\n  }\n}\n\n@mixin mdc-ripple-color_($config) {\n  $base-color: map-get($config, base-color);\n  $opacity: map-get($config, opacity);\n  $theme-style: map-get($config, theme-style);\n\n  // stylelint-disable at-rule-empty-line-before, block-closing-brace-newline-after\n  @if ($theme-style) {\n    $theme-value: map-get($mdc-theme-property-values, $theme-style);\n    $css-var: $theme-value;\n    $css-var: var(--mdc-theme-#{$theme-style}, $theme-value);\n\n    background-color: rgba($theme-value, $opacity);\n\n    // See: https://drafts.csswg.org/css-color/#modifying-colors\n    // While this is currently unsupported as of now, it will begin to work by default as browsers\n    // begin to implement the CSS 4 color spec.\n    @supports (background-color: color(green a(10%))) {\n      background-color: color(#{$css-var} a(#{percentage($opacity)}));\n    }\n  } @else {\n    background-color: rgba($base-color, $opacity);\n  }\n\n  // stylelint-enable at-rule-empty-line-before, block-closing-brace-newline-after\n}\n\n@mixin mdc-ripple-bg-base_($config) {\n  $radius: map-get($config, radius);\n\n  @include mdc-ripple-color_($config);\n\n  position: absolute;\n  top: calc(50% - #{$radius});\n  left: calc(50% - #{$radius});\n  width: $radius * 2;\n  height: $radius * 2;\n  transition: opacity 250ms linear;\n  border-radius: 50%;\n  opacity: 0;\n  pointer-events: none;\n}\n\n@mixin mdc-ripple-bg($config: ()) {\n  $config: map-merge(mdc-ripple-default-config_(), $config);\n  $pseudo: map-get($config, pseudo);\n  $radius: map-get($config, radius);\n\n  // stylelint-disable at-rule-empty-line-before, block-closing-brace-newline-after\n  @if ($pseudo) {\n    &#{$pseudo} {\n      @include mdc-ripple-bg-base_($config);\n\n      content: \"\";\n    }\n  } @else {\n    @include mdc-ripple-bg-base_($config);\n  }\n  // stylelint-enable at-rule-empty-line-before, block-closing-brace-newline-after\n\n  &.mdc-ripple-upgraded#{$pseudo} {\n    top: calc(50% - #{$radius});\n    left: calc(50% - #{$radius});\n    width: $radius * 2;\n    height: $radius * 2;\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0));\n  }\n\n  &.mdc-ripple-upgraded--background-focused#{$pseudo} {\n    opacity: .99999;\n  }\n\n  &.mdc-ripple-upgraded--background-active-fill#{$pseudo} {\n    transition-duration: 120ms;\n    opacity: 1;\n  }\n\n  &.mdc-ripple-upgraded--unbounded#{$pseudo} {\n    top: calc(50% - #{$radius / 2});\n    top: var(--mdc-ripple-top, calc(50% - #{$radius / 2}));\n    left: calc(50% - #{$radius / 2});\n    left: var(--mdc-ripple-left, calc(50% - #{$radius / 2}));\n    width: $radius;\n    width: var(--mdc-ripple-fg-size, $radius);\n    height: $radius;\n    height: var(--mdc-ripple-fg-size, $radius);\n    transform: scale(0);\n    transform: scale(var(--mdc-ripple-fg-scale, 0));\n  }\n}\n\n@mixin mdc-ripple-fg-base_($config) {\n  $radius: map-get($config, radius);\n\n  @include mdc-ripple-color_($config);\n\n  position: absolute;\n  top: calc(50% - #{$radius});\n  left: calc(50% - #{$radius});\n  width: $radius * 2;\n  height: $radius * 2;\n  transition: opacity 250ms linear;\n  border-radius: 50%;\n  opacity: 0;\n  pointer-events: none;\n}\n\n@mixin mdc-ripple-fg($config: ()) {\n  $config: map-merge(mdc-ripple-default-config_(), $config);\n  $pseudo: map-get($config, pseudo);\n  $radius: map-get($config, radius);\n\n  // stylelint-disable at-rule-empty-line-before, block-closing-brace-newline-after\n  @if ($pseudo) {\n    &#{$pseudo} {\n      @include mdc-ripple-fg-base_($config);\n\n      content: \"\";\n    }\n  } @else {\n    @include mdc-ripple-fg-base_($config);\n  }\n  // stylelint-enable at-rule-empty-line-before, block-closing-brace-newline-after\n\n  &.mdc-ripple-upgraded {\n    &#{$pseudo} {\n      top: 0;\n      left: 0;\n      width: $radius;\n      width: var(--mdc-ripple-fg-size, $radius);\n      height: $radius;\n      height: var(--mdc-ripple-fg-size, $radius);\n      transform: scale(0);\n      transform-origin: center center;\n      opacity: 0;\n    }\n  }\n\n  &:not(.mdc-ripple-upgraded--unbounded)#{$pseudo} {\n    transform-origin: center center;\n  }\n\n  &.mdc-ripple-upgraded--unbounded#{$pseudo} {\n    top: 0;\n    top: var(--mdc-ripple-top, 0);\n    left: 0;\n    left: var(--mdc-ripple-left, 0);\n    width: $radius;\n    width: var(--mdc-ripple-fg-size, $radius);\n    height: $radius;\n    height: var(--mdc-ripple-fg-size, $radius);\n    transform: scale(0);\n    transform-origin: center center;\n  }\n\n  &.mdc-ripple-upgraded--foreground-activation#{$pseudo} {\n    animation: 300ms mdc-ripple-fg-radius-in forwards, 83ms mdc-ripple-fg-opacity-in forwards;\n  }\n\n  &.mdc-ripple-upgraded--foreground-deactivation#{$pseudo} {\n    // Retain transform from mdc-ripple-fg-radius-in activation\n    transform: translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1));\n    animation: 250ms mdc-ripple-fg-opacity-out;\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/functions\";\n@import \"@material/typography/mixins\";\n@import \"@material/theme/mixins\";\n@import \"@material/rtl/mixins\";\n\n@mixin mdc-select-dd-arrow-svg-bg_($fill-hex-number: 000000, $opacity: .54) {\n  background-image: url(data:image/svg+xml,%3Csvg%20width%3D%2210px%22%20height%3D%225px%22%20viewBox%3D%227%2010%2010%205%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%0A%20%20%20%20%3Cpolygon%20id%3D%22Shape%22%20stroke%3D%22none%22%20fill%3D%22%23#{$fill-hex-number}%22%20fill-rule%3D%22evenodd%22%20opacity%3D%22#{$opacity}%22%20points%3D%227%2010%2012%2015%2017%2010%22%3E%3C%2Fpolygon%3E%0A%3C%2Fsvg%3E);\n}\n\n// postcss-bem-linter: define select\n.mdc-select {\n  $dd-arrow-padding: 24px;\n\n  @include mdc-typography(subheading2);\n  @include mdc-theme-prop(color, text-primary-on-light);\n  @include mdc-rtl-reflexive-box(padding, right, $dd-arrow-padding);\n\n  // Resets for <select> element\n  appearance: none;\n\n  &::-ms-expand {\n    display: none;\n  }\n\n  display: inline-flex;\n  align-items: center;\n  justify-content: flex-start;\n  max-width: calc(100% - #{$dd-arrow-padding});\n  height: 32px;\n  transition:\n    mdc-animation-exit(border-bottom-color, 150ms),\n    mdc-animation-exit(background-color, 150ms);\n  border: none;\n  border-bottom: 1px solid rgba(black, .12);\n  border-radius: 0;\n  background: none;\n  background-repeat: no-repeat;\n  background-position: right center;\n\n  @include mdc-select-dd-arrow-svg-bg_;\n\n  font-family: Roboto, sans-serif;\n  font-size: .936rem;\n  cursor: pointer;\n\n  &:focus {\n    @include mdc-theme-prop(border-bottom-color, primary);\n\n    outline: none;\n    background-color: rgba(black, .06);\n  }\n\n  @include mdc-rtl {\n    background-position: left center;\n  }\n\n  @include mdc-theme-dark {\n    @include mdc-theme-prop(color, text-primary-on-dark);\n    @include mdc-select-dd-arrow-svg-bg_(ffffff);\n\n    border-bottom: 1px solid rgba(white, .12);\n\n    &:focus {\n      @include mdc-theme-prop(border-bottom-color, primary);\n\n      background-color: rgba(white, .09);\n    }\n  }\n\n  &__menu {\n    position: fixed;\n    top: 0;\n    left: 0;\n    max-height: 100%;\n    transform-origin: center center;\n    overflow-y: scroll;\n    z-index: 4; // Should pop up above everything else. temporary-drawer is next highest at 3.\n  }\n\n  &__selected-text {\n    transition:\n      mdc-animation-exit(opacity, 125ms),\n      mdc-animation-exit(transform, 125ms);\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n.mdc-select--open {\n  .mdc-select__selected-text {\n    transform: translateY(8px);\n    transition:\n      mdc-animation-enter(opacity, 125ms, 125ms),\n      mdc-animation-enter(transform, 125ms, 125ms);\n    opacity: 0;\n  }\n}\n\n.mdc-select--disabled,\n.mdc-select[disabled] {\n  @include mdc-theme-prop(color, text-disabled-on-light);\n  @include mdc-select-dd-arrow-svg-bg_(000000, .38);\n\n  border-bottom-style: dotted;\n  cursor: default;\n  pointer-events: none;\n  // Imitate native disabled functionality\n  user-select: none;\n}\n\n@each $sel in (\"mdc-select--disabled\", \"mdc-select[disabled]\") {\n  .#{$sel} {\n    @include mdc-theme-dark(\".mdc-select\", true) {\n      @include mdc-theme-prop(color, text-disabled-on-dark);\n      @include mdc-select-dd-arrow-svg-bg_(ffffff, .38);\n\n      border-bottom: 1px dotted rgba(white, .38);\n    }\n  }\n}\n\n// postcss-bem-linter: end\n\n.mdc-select__menu {\n  .mdc-list-item {\n    @include mdc-typography(subheading2);\n    @include mdc-theme-prop(color, text-secondary-on-light);\n\n    &[aria-selected=\"true\"] {\n      @include mdc-theme-prop(color, text-primary-on-light);\n    }\n\n    @include mdc-theme-dark(\".mdc-select\") {\n      @include mdc-theme-prop(color, text-secondary-on-dark);\n\n      &[aria-selected=\"true\"] {\n        @include mdc-theme-prop(color, text-primary-on-dark);\n      }\n    }\n  }\n\n  .mdc-list-group,\n  .mdc-list-group > .mdc-list-item:first-child {\n    margin-top: 12px;\n  }\n\n  .mdc-list-group {\n    @include mdc-theme-prop(color, text-hint-on-light);\n\n    font-weight: normal;\n\n    .mdc-list-item {\n      @include mdc-theme-prop(color, text-primary-on-light);\n    }\n  }\n\n  @include mdc-theme-dark(\".mdc-select\") {\n    .mdc-list-group {\n      @include mdc-theme-prop(color, text-hint-on-dark);\n\n      .mdc-list-item {\n        @include mdc-theme-prop(color, text-primary-on-dark);\n      }\n    }\n  }\n}\n\n// postcss-bem-linter: define multi-select\n.mdc-multi-select {\n  appearance: none;\n  width: 250px;\n  padding: 0;\n  border: 1px solid;\n\n  @include mdc-theme-prop(border-color, text-hint-on-light);\n\n  @include mdc-theme-dark {\n    @include mdc-theme-prop(border-color, text-hint-on-dark);\n  }\n\n  outline: none;\n\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-list-group {\n    margin: 16px 0 0;\n    padding: 0 0 0 16px;\n\n    @include mdc-theme-prop(color, text-hint-on-light);\n\n    @include mdc-theme-dark {\n      @include mdc-theme-prop(color, text-hint-on-dark);\n    }\n\n    font-weight: normal;\n\n    &:last-child {\n      margin-bottom: 16px;\n    }\n\n    .mdc-list-divider {\n      margin-left: -16px;\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-list-item {\n    margin: 0 0 0 -16px;\n    padding: 0 16px;\n\n    @include mdc-theme-prop(color, text-primary-on-light);\n\n    @include mdc-theme-dark {\n      @include mdc-theme-prop(color, text-primary-on-dark);\n    }\n\n    &:first-child {\n      margin-top: 12px;\n    }\n\n    &:last-child {\n      margin-bottom: 8px;\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-list-item:checked {\n    background-color: rgba(black, .12);\n\n    @include mdc-theme-prop(background-color, background);\n\n    @include mdc-theme-dark {\n      @include mdc-theme-prop(background-color, text-primary-on-dark);\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n}\n\n.mdc-multi-select:focus .mdc-list-item:checked {\n  @include mdc-theme-prop(background-color, primary);\n\n  @include mdc-theme-dark {\n    @include mdc-theme-prop(background-color, text-primary-on-dark);\n  }\n}\n\n// height for option elements cannot be controlled\n// with CSS. Use the font-size rule instead.\n\n// stylelint-disable plugin/selector-bem-pattern\n.mdc-list-divider {\n  margin-bottom: 8px;\n  padding-top: 8px;\n  font-size: 0;\n}\n// stylelint-enable plugin/selector-bem-pattern\n\n// postcss-bem-linter: end\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/functions\";\n@import \"@material/rtl/mixins\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n@import \"./variables\";\n\n/* postcss-bem-linter: define snackbar */\n.mdc-snackbar {\n  display: flex;\n  position: fixed;\n  bottom: 0;\n  left: 50%;\n  align-items: center;\n  justify-content: flex-start;\n  padding-right: 24px;\n  padding-left: 24px;\n  transform: translate(0, 100%);\n  transition: mdc-animation-exit(transform, .25s);\n  background-color: $mdc-snackbar-background-color;\n  will-change: transform;\n  pointer-events: none;\n\n  @media (max-width: ($mdc-snackbar-tablet-breakpoint - 1)) {\n    left: 0;\n    width: calc(100% - 48px);\n  }\n\n  @media (min-width: $mdc-snackbar-tablet-breakpoint) {\n    min-width: 288px;\n    max-width: 568px;\n    transform: translate(-50%, 100%);\n    border-radius: 2px;\n  }\n\n  &--active {\n    transform: translate(0, 0);\n    pointer-events: auto;\n    transition: mdc-animation-enter(transform, .25s);\n\n    @media (min-width: $mdc-snackbar-tablet-breakpoint) {\n      transform: translate(-50%, 0);\n    }\n  }\n\n  &--action-on-bottom {\n    flex-direction: column;\n  }\n\n  &--action-on-bottom &__text {\n    margin-right: inherit;\n  }\n\n  &--action-on-bottom &__action-wrapper {\n    flex-direction: column;\n    justify-content: flex-start;\n    margin-top: -12px;\n    margin-bottom: 8px;\n\n    @include mdc-rtl-reflexive-box(margin, left, auto);\n  }\n\n  &__text {\n    @include mdc-typography(body1);\n    @include mdc-rtl-reflexive-box(margin, right, auto, \".mdc-snackbar\");\n\n    display: flex;\n    align-items: center;\n    height: 48px;\n    transition: mdc-animation-exit(opacity, .3s);\n    color: $mdc-snackbar-foreground-color;\n    opacity: 0;\n  }\n\n  &--multiline &__text {\n    height: 80px;\n  }\n\n  /* stylelint-disable plugin/selector-bem-pattern */\n  &--multiline#{&}--action-on-bottom &__text {\n    margin: 0;\n  }\n  /* stylelint-enable plugin/selector-bem-pattern */\n\n  &__action-button {\n    @include mdc-theme-prop(color, accent);\n    @include mdc-rtl-reflexive-box(margin, right, -16px, \".mdc-snackbar\");\n\n    min-width: auto;\n    height: inherit;\n    transition: mdc-animation-exit(opacity, .3s);\n    opacity: 0;\n    visibility: hidden;\n\n    &::-moz-focus-inner {\n      border: 0;\n    }\n\n    &:not([aria-hidden]) {\n      visibility: inherit;\n    }\n  }\n\n  &--active &__text,\n  &--active &__action-button:not([aria-hidden]) {\n    transition: mdc-animation-exit(opacity, .3s);\n    opacity: 1;\n  }\n}\n\n/* postcss-bem-linter: end */\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n// Hard coded since the color is not present in any palette.\n$mdc-snackbar-background-color: #323232;\n$mdc-snackbar-foreground-color: white;\n// TODO: Better spot to pull this breakpoint?\n//$snackbar-tablet-breakpoint: $grid-tablet-breakpoint;\n$mdc-snackbar-tablet-breakpoint: 600px;\n","// Copyright 2016 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n@import \"@material/animation/functions\";\n@import \"@material/animation/variables\";\n@import \"@material/elevation/mixins\";\n@import \"@material/theme/mixins\";\n@import \"./mixins\";\n@import \"./variables\";\n\n@function mdc-switch-transition($property) {\n  @return $property 90ms $mdc-switch-transition-curve;\n}\n\n// postcss-bem-linter: define switch\n.mdc-switch {\n  display: inline-block;\n  position: relative;\n\n  &__native-control {\n    display: inline-block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: $mdc-switch-track-width;\n    height: $mdc-switch-track-height;\n    cursor: pointer;\n    opacity: 0;\n    z-index: 2;\n  }\n\n  &__background {\n    display: block;\n    position: relative;\n    width: $mdc-switch-track-width;\n    height: $mdc-switch-track-height;\n    border-radius: 7px;\n    outline: none;\n    background-color: transparent;\n    cursor: pointer;\n    user-select: none;\n\n    @include mdc-theme-dark(\".mdc-switch\") {\n      background-color: transparent;\n    }\n\n    &::before {\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      transition:\n        mdc-switch-transition(opacity),\n        mdc-switch-transition(background-color);\n      border-radius: 7px;\n      background-color: $mdc-switch-unchecked-track-color;\n      content: \"\";\n      opacity: .38;\n\n      @include mdc-theme-dark(\".mdc-switch\") {\n        background-color: $mdc-switch-unchecked-track-color-dark;\n        opacity: .3;\n      }\n    }\n\n    // postcss-bem-linter: ignore\n    .mdc-switch__knob {\n      display: block;\n      position: absolute;\n      top: -3px;\n      left: 0;\n      width: $mdc-switch-knob-diameter;\n      height: $mdc-switch-knob-diameter;\n      transform: translateX(0);\n      transition:\n        mdc-switch-transition(transform),\n        mdc-switch-transition(background-color);\n      border-radius: $mdc-switch-knob-diameter / 2;\n      background-color: $mdc-switch-unchecked-knob-color;\n\n      @include mdc-theme-dark(\".mdc-switch\") {\n        background-color: $mdc-switch-unchecked-knob-color-dark;\n      }\n\n      @include mdc-elevation(2);\n\n      z-index: 1;\n\n      // postcss-bem-linter: ignore\n      &::before {\n        position: absolute;\n        top: -14px;\n        left: -14px;\n        width: $mdc-switch-focus-ring-diameter;\n        height: $mdc-switch-focus-ring-diameter;\n        transform: scale(0);\n        transition:\n          mdc-switch-transition(transform),\n          mdc-switch-transition(background-color);\n        border-radius: $mdc-switch-focus-ring-diameter / 2;\n        background-color: transparent;\n        content: \"\";\n        opacity: .2;\n      }\n    }\n  }\n}\n\n.mdc-switch__native-control:focus ~ .mdc-switch__background {\n  .mdc-switch__knob {\n    &::before {\n      position: absolute;\n      width: $mdc-switch-focus-ring-diameter;\n      height: $mdc-switch-focus-ring-diameter;\n      transform: scale(1);\n      transition:\n        mdc-switch-transition(transform),\n        mdc-switch-transition(background-color);\n      border-radius: $mdc-switch-focus-ring-diameter / 2;\n      background-color: $mdc-switch-unchecked-focus-ring-color;\n\n      @include mdc-theme-dark(\".mdc-switch\") {\n        background-color: $mdc-switch-unchecked-focus-ring-color-dark;\n        opacity: .14;\n      }\n    }\n  }\n}\n\n.mdc-switch__native-control:checked ~ .mdc-switch__background {\n  &::before {\n    @include mdc-theme-prop(background-color, primary);\n\n    opacity: .5;\n  }\n\n  .mdc-switch__knob {\n    transform: translateX($mdc-switch-track-width - $mdc-switch-knob-diameter);\n    transition:\n      mdc-switch-transition(transform),\n      mdc-switch-transition(background-color);\n\n    @include mdc-theme-prop(background-color, primary);\n\n    &::before {\n      @include mdc-theme-prop(background-color, primary);\n\n      @include mdc-theme-dark(\".mdc-switch\") {\n        @include mdc-theme-prop(background-color, primary);\n      }\n\n      opacity: .15;\n    }\n  }\n}\n\n// postcss-bem-linter: end\n\n.mdc-switch__native-control:disabled {\n  cursor: initial;\n}\n\n.mdc-switch__native-control:disabled ~ .mdc-switch__background {\n  &::before {\n    background-color: $mdc-switch-unchecked-track-color;\n    opacity: .12;\n\n    @include mdc-theme-dark(\".mdc-switch\") {\n      background-color: $mdc-switch-unchecked-track-color-dark;\n      opacity: .1;\n    }\n  }\n\n  .mdc-switch__knob {\n    background-color: $mdc-switch-disabled-knob-color;\n\n    @include mdc-theme-dark(\".mdc-switch\") {\n      background-color: $mdc-switch-disabled-knob-color-dark;\n    }\n  }\n}\n","// \n// Copyright 2016 Google Inc. All Rights Reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n//      http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// \n\n$mdc-switch-track-width: 34px;\n$mdc-switch-track-height: 14px;\n$mdc-switch-knob-diameter: 20px;\n$mdc-switch-focus-ring-diameter: 48px;\n$mdc-switch-knob-active-margin: $mdc-switch-track-width - $mdc-switch-knob-diameter;\n\n$mdc-switch-unchecked-track-color: #000;\n$mdc-switch-unchecked-knob-color: #fafafa;\n$mdc-switch-unchecked-focus-ring-color: #9e9e9e;\n$mdc-switch-unchecked-knob-color-dark: #bdbdbd;\n$mdc-switch-unchecked-track-color-dark: #fff;\n$mdc-switch-unchecked-focus-ring-color-dark: #f1f1f1;\n$mdc-switch-disabled-knob-color: #bdbdbd;\n$mdc-switch-disabled-knob-color-dark: #424242;\n\n$mdc-switch-transition-duration: 175ms;\n$mdc-switch-transition-curve: cubic-bezier(.4, 0, .2, 1);\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/animation/variables\";\n@import \"@material/rtl/mixins\";\n@import \"@material/theme/variables\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n@import \"@material/typography/variables\";\n\n$mdc-textfield-error-on-light: #d50000;\n$mdc-textfield-error-on-dark: #ff6e6e;\n$mdc-textfield-divider-on-light: rgba(black, .12);\n$mdc-textfield-divider-on-dark: rgba(white, .12);\n$mdc-textfield-disabled-border-on-light: rgba(#231f20, .26);\n$mdc-textfield-disabled-border-on-dark: rgba(white, .3);\n\n@function mdc-textfield-transition($property) {\n  @return #{$property} 180ms $mdc-animation-fast-out-slow-in-timing-function;\n}\n\n// postcss-bem-linter: define textfield\n.mdc-textfield {\n  @include mdc-typography-base;\n  // We use only a subset of the MDC typography values here as changing things such as line-height\n  // affects how the labels are transformed.\n  @each $prop in (font-size, letter-spacing) {\n    #{$prop}: map-get(map-get($mdc-typography-styles, subheading2), $prop);\n  }\n\n  display: inline-block;\n  margin-bottom: 8px;\n  will-change: opacity, transform, color;\n\n  &__input {\n    @include mdc-theme-prop(color, text-primary-on-light);\n\n    padding: 0 0 8px;\n    border: none;\n    background: none;\n    font-size: inherit;\n    appearance: none;\n\n    &::placeholder {\n      @include mdc-theme-prop(color, text-hint-on-light);\n\n      transition: mdc-textfield-transition(color);\n      opacity: 1;\n    }\n\n    &:focus {\n      outline: none;\n\n      &::placeholder {\n        @include mdc-theme-prop(color, text-secondary-on-light);\n      }\n    }\n\n    // Remove red outline on firefox\n    &:invalid {\n      box-shadow: none;\n    }\n\n    @include mdc-theme-dark {\n      color: white;\n\n      &::placeholder {\n        @include mdc-theme-prop(color, text-hint-on-dark);\n      }\n\n      &:focus::placeholder {\n        @include mdc-theme-prop(color, text-secondary-on-dark);\n      }\n    }\n  }\n\n  &__label {\n    @include mdc-theme-prop(color, text-hint-on-light);\n\n    position: absolute;\n    bottom: 8px;\n    left: 0;\n    transform-origin: left top;\n    transition: mdc-textfield-transition(transform), mdc-textfield-transition(color);\n    cursor: text;\n\n    // stylelint-disable plugin/selector-bem-pattern\n    @include mdc-rtl(\".mdc-textfield\") {\n      right: 0;\n      left: auto;\n      transform-origin: right top;\n    }\n    // stylelint-enable plugin/selector-bem-pattern\n\n    @include mdc-theme-dark(\".mdc-textfield\") {\n      @include mdc-theme-prop(color, text-hint-on-dark);\n    }\n\n    &--float-above {\n      transform: translateY(-100%) scale(.75, .75);\n      cursor: auto;\n    }\n  }\n}\n\n// Move label when textfield gets autofilled in Chrome\n.mdc-textfield__input {\n  // stylelint-disable plugin/selector-bem-pattern\n  &:-webkit-autofill + .mdc-textfield__label {\n    transform: translateY(-100%) scale(.75, .75);\n    cursor: auto;\n  }\n  // stylelint-enable plugin/selector-bem-pattern  \n}\n\n.mdc-textfield--upgraded:not(.mdc-textfield--fullwidth) {\n  display: inline-flex;\n  position: relative;\n  box-sizing: border-box;\n  align-items: flex-end;\n  margin-top: 16px;\n\n  &:not(.mdc-textfield--multiline) {\n    height: 48px;\n\n    &::after {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 1px;\n      transform: translateY(50%) scaleY(1);\n      transform-origin: center bottom;\n      transition: mdc-textfield-transition(background-color), mdc-textfield-transition(transform);\n      background-color: $mdc-textfield-divider-on-light;\n      content: \"\";\n\n      @include mdc-theme-dark(\".mdc-textfield\") {\n        background-color: $mdc-textfield-divider-on-dark;\n      }\n    }\n  }\n\n  .mdc-textfield__label {\n    pointer-events: none;\n  }\n}\n\n.mdc-textfield--focused {\n  @mixin mdc-textfield-after-styles {\n    @include mdc-theme-prop(background-color, primary);\n\n    transform: translateY(100%) scaleY(2);\n    transition: mdc-textfield-transition(transform);\n  }\n\n  @mixin mdc-textfield-label-styles {\n    @include mdc-theme-prop(color, primary);\n  }\n\n  &.mdc-textfield--upgraded:not(.mdc-textfield--fullwidth):not(.mdc-textfield--multiline)::after {\n    @include mdc-textfield-after-styles;\n\n    @include mdc-theme-dark(\".mdc-textfield\", true) {\n      @include mdc-textfield-after-styles;\n    }\n  }\n\n  .mdc-textfield__label {\n    @include mdc-textfield-label-styles;\n\n    @include mdc-theme-dark(\".mdc-textfield\") {\n      @include mdc-textfield-label-styles;\n    }\n  }\n}\n\n.mdc-textfield--dense {\n  margin-top: 12px;\n  margin-bottom: 4px;\n  font-size: .813rem;\n\n  .mdc-textfield__label--float-above {\n    // NOTE: This is an eyeball'd approximation of what's in the mocks.\n    transform: translateY(calc(-100% - 2px)) scale(.923, .923);\n  }\n}\n\n.mdc-textfield--invalid {\n  &:not(.mdc-textfield--focused) {\n    &::after {\n      background-color: $mdc-textfield-error-on-light;\n    }\n\n    .mdc-textfield__label {\n      color: $mdc-textfield-error-on-light;\n    }\n  }\n\n  @include mdc-theme-dark(\".mdc-textfield\", true) {\n    &:not(.mdc-textfield--focused) {\n      &::after {\n        background-color: $mdc-textfield-error-on-dark;\n      }\n\n      .mdc-textfield__label {\n        color: $mdc-textfield-error-on-dark;\n      }\n    }\n  }\n}\n\n.mdc-textfield--disabled {\n  &::after {\n    display: none;\n  }\n\n  // Account for offset by border\n  .mdc-textfield__input {\n    padding-bottom: 7px;\n  }\n\n  border-bottom: 1px dotted $mdc-textfield-disabled-border-on-light;\n\n  @include mdc-theme-dark(\".mdc-textfield\", true) {\n    border-bottom: 1px dotted $mdc-textfield-disabled-border-on-dark;\n  }\n\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-textfield__input,\n  .mdc-textfield__label,\n  & + .mdc-textfield-helptext {\n    @include mdc-theme-prop(color, text-disabled-on-light);\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n\n  .mdc-textfield__input,\n  .mdc-textfield__label {\n    @include mdc-theme-dark(\".mdc-textfield\") {\n      @include mdc-theme-prop(color, text-disabled-on-dark);\n    }\n  }\n\n  @include mdc-theme-dark(\".mdc-textfield\", true) {\n    // stylelint-disable plugin/selector-bem-pattern\n    + .mdc-textfield-helptext {\n      @include mdc-theme-prop(color, text-disabled-on-dark);\n    }\n    // stylelint-enable plugin/selector-bem-pattern\n  }\n\n  .mdc-textfield__label {\n    bottom: 7px;\n    cursor: default;\n  }\n}\n\n.mdc-textfield__input:required + .mdc-textfield__label::after {\n  margin-left: 1px;\n  content: \"*\";\n\n  .mdc-textfield--focused & {\n    color: $mdc-textfield-error-on-light;\n  }\n\n  @include mdc-theme-dark(\".mdc-textfield\") {\n    .mdc-textfield--focused & {\n      color: $mdc-textfield-error-on-dark;\n    }\n  }\n}\n\n.mdc-textfield--multiline {\n  $padding-inset: 4px;\n  $label-offset-y: $padding-inset + 2;\n  $label-offset-x: $padding-inset;\n\n  display: flex;\n  height: initial;\n  transition: none;\n\n  &::after {\n    content: initial;\n  }\n\n  // stylelint-disable plugin/selector-bem-pattern\n\n  .mdc-textfield__input {\n    padding: $padding-inset;\n    transition: mdc-textfield-transition(border-color);\n    border: 1px solid $mdc-textfield-divider-on-light;\n    border-radius: 2px;\n\n    @include mdc-theme-dark(\".mdc-textfield\") {\n      border-color: $mdc-textfield-divider-on-dark;\n    }\n\n    &:focus {\n      @include mdc-theme-prop(border-color, primary);\n    }\n\n    &:invalid:not(:focus) {\n      border-color: $mdc-textfield-error-on-light;\n    }\n\n    @include mdc-theme-dark(\".mdc-textfield\") {\n      &:invalid:not(:focus) {\n        border-color: $mdc-textfield-error-on-dark;\n      }\n    }\n  }\n\n  .mdc-textfield__label {\n    top: $label-offset-y;\n    bottom: initial;\n    left: $label-offset-x;\n\n    @include mdc-rtl(\".mdc-textfield--multiline\") {\n      right: $label-offset-x;\n      left: auto;\n    }\n\n    &--float-above {\n      // Translate above the top of the input, and compensate for the amount of offset needed\n      // to position the label within the bounds of the inset padding.\n      // Note that the scale factor is an eyeball'd approximation of what's shown in the mocks.\n      transform: translateY(calc(-100% - #{$label-offset-y})) scale(.923, .923);\n    }\n  }\n\n  &.mdc-textfield--disabled {\n    border-bottom: none;\n\n    .mdc-textfield__input {\n      border: 1px dotted $mdc-textfield-disabled-border-on-light;\n\n      @include mdc-theme-dark(\".mdc-textfield\") {\n        border-color: $mdc-textfield-disabled-border-on-dark;\n      }\n    }\n  }\n  // stylelint-enable plugin/selector-bem-pattern\n}\n\n.mdc-textfield--fullwidth {\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n  margin: 0;\n  border: none;\n  border-bottom: 1px solid $mdc-textfield-divider-on-light;\n  outline: none;\n\n  // stylelint-disable plugin/selector-bem-pattern\n\n  &:not(.mdc-textfield--multiline) {\n    height: 56px;\n  }\n\n  &.mdc-textfield--multiline {\n    padding: 20px 0 0;\n  }\n\n  &.mdc-textfield--dense {\n    &:not(.mdc-textfield--multiline) {\n      height: 48px;\n    }\n\n    &.mdc-textfield--multiline {\n      padding: 16px 0 0;\n    }\n  }\n\n  &.mdc-textfield--disabled {\n    &,\n    &.mdc-textfield--multiline {\n      border-bottom: 1px dotted $mdc-textfield-divider-on-light;\n    }\n  }\n\n  @include mdc-theme-dark {\n    border-bottom: 1px solid $mdc-textfield-divider-on-dark;\n\n    &.mdc-textfield--disabled {\n      &,\n      &.mdc-textfield--multiline {\n        border-bottom: 1px dotted $mdc-textfield-divider-on-dark;\n      }\n    }\n  }\n\n  // stylelint-enable plugin/selector-bem-pattern\n\n  .mdc-textfield__input {\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    resize: none;\n    // Use !important here to override all other border treatments\n    border: none !important;\n  }\n}\n\n// Graceful degredation for css-only inputs\n\n.mdc-textfield {\n  &:not(.mdc-textfield--upgraded):not(.mdc-textfield--multiline) .mdc-textfield__input {\n    transition: mdc-textfield-transition(border-bottom-color);\n    border-bottom: 1px solid $mdc-textfield-divider-on-light;\n  }\n\n  &:not(.mdc-textfield--upgraded) .mdc-textfield__input {\n    &:focus {\n      @include mdc-theme-prop(border-color, primary);\n    }\n\n    &:disabled {\n      @include mdc-theme-prop(color, text-disabled-on-light);\n\n      border-style: dotted;\n      border-color: $mdc-textfield-disabled-border-on-light;\n    }\n\n    &:invalid:not(:focus) {\n      border-color: $mdc-textfield-error-on-light;\n    }\n  }\n\n  @include mdc-theme-dark {\n    &:not(.mdc-textfield--upgraded) .mdc-textfield__input {\n      &:not(:focus) {\n        border-color: rgba(white, .12);\n      }\n\n      &:disabled {\n        @include mdc-theme-prop(color, text-disabled-on-dark);\n\n        border-color: $mdc-textfield-disabled-border-on-dark;\n      }\n\n      &:invalid:not(:focus) {\n        border-color: $mdc-textfield-error-on-dark;\n      }\n    }\n  }\n}\n\n// postcss-bem-linter: end\n\n// postcss-bem-linter: define textfield-helptext\n\n.mdc-textfield-helptext {\n  @include mdc-theme-prop(color, text-hint-on-light);\n\n  margin: 0;\n  transition: mdc-textfield-transition(opacity);\n  font-size: .75rem;\n  opacity: 0;\n  will-change: opacity;\n\n  @include mdc-theme-dark {\n    @include mdc-theme-prop(color, text-hint-on-dark);\n  }\n\n  // stylelint-disable plugin/selector-bem-pattern\n  .mdc-textfield + & {\n    margin-bottom: 8px;\n  }\n\n  .mdc-textfield--dense + & {\n    margin-bottom: 4px;\n  }\n\n  .mdc-textfield--focused + &:not(#{&}--validation-msg) {\n    opacity: 1;\n  }\n\n  // stylelint-enable plugin/selector-bem-pattern\n}\n\n.mdc-textfield-helptext--persistent {\n  transition: none;\n  opacity: 1;\n  will-change: initial;\n}\n\n// postcss-bem-linter: end\n\n.mdc-textfield--invalid {\n  + .mdc-textfield-helptext--validation-msg {\n    color: $mdc-textfield-error-on-light;\n    opacity: 1;\n  }\n\n  @include mdc-theme-dark(\".mdc-textfield\", true) {\n    + .mdc-textfield-helptext--validation-msg {\n      color: $mdc-textfield-error-on-dark;\n    }\n  }\n}\n\n// mdc-form-field tweaks to align text field label correctly\n// stylelint-disable selector-no-type\n.mdc-form-field > .mdc-textfield + label {\n  align-self: flex-start;\n}\n// stylelint-enable selector-no-type\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $mdc-theme-property-values (_variables.scss).\n */\n@mixin mdc-theme-prop($property, $style, $important: false) {\n  @if not map-has-key($mdc-theme-property-values, $style) {\n    @error \"Invalid style specified! Choose one of #{map-keys($mdc-theme-property-values)}\";\n  }\n\n  @if $important {\n    #{$property}: map-get($mdc-theme-property-values, $style) !important;\n    #{$property}: var(--mdc-theme-#{$style}, map-get($mdc-theme-property-values, $style)) !important;\n  }\n\n  @else {\n    #{$property}: map-get($mdc-theme-property-values, $style);\n    #{$property}: var(--mdc-theme-#{$style}, map-get($mdc-theme-property-values, $style));\n  }\n}\n\n/**\n * Creates a rule to be used in MDC-Web components for dark theming, and applies the provided contents.\n * Should provide the $root-selector option if applied to anything other than the root selector.\n * When used with a modifier class, provide a second argument of `true` for the $compound parameter\n * to specify that this should be attached as a compound class.\n *\n * Usage example:\n *\n * ```scss\n * .mdc-foo {\n *   color: black;\n *\n *   @include mdc-theme-dark {\n *     color: white;\n *   }\n *\n *   &__bar {\n *     background: black;\n *\n *     @include mdc-theme-dark(\".mdc-foo\") {\n *       background: white;\n *     }\n *   }\n * }\n *\n * .mdc-foo--disabled {\n *   opacity: .38;\n *\n *   @include mdc-theme-dark(\".mdc-foo\", true) {\n *     opacity: .5;\n *   }\n * }\n * ```\n */\n@mixin mdc-theme-dark($root-selector: null, $compound: false) {\n  @if ($root-selector) {\n    @at-root {\n      @if ($compound) {\n        #{$root-selector}--theme-dark#{&},\n        .mdc-theme--dark & {\n          @content;\n        }\n      }\n\n      @else {\n        #{$root-selector}--theme-dark &,\n        .mdc-theme--dark & {\n          @content;\n        }\n      }\n    }\n  }\n\n  @else {\n    &--theme-dark,\n    .mdc-theme--dark & {\n      @content;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./mixins\";\n\n:root {\n  @each $style in map-keys($mdc-theme-property-values) {\n    --mdc-theme-#{$style}: map-get($mdc-theme-property-values, $style);\n  }\n}\n\n/* Special case, so that .mdc-theme--background changes background color, not text color. */\n.mdc-theme--background {\n  @include mdc-theme-prop(background-color, background);\n}\n\n@each $style in map-keys($mdc-theme-property-values) {\n  @if $style != \"background\" {\n    .mdc-theme--#{$style} {\n      @include mdc-theme-prop(color, $style, true);\n    }\n  }\n}\n\n/* CSS rules for using primary and accent as background colors. */\n@each $style in (\"primary\", \"accent\") {\n  .mdc-theme--#{$style}-bg {\n    @include mdc-theme-prop(background-color, $style, true);\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"@material/elevation/mixins\";\n@import \"@material/rtl/mixins\";\n@import \"@material/theme/mixins\";\n@import \"@material/typography/mixins\";\n\n$mdc-toolbar-row-height: 64px;\n$mdc-toolbar-mobile-row-height: 56px;\n$mdc-toolbar-padding: 20px 28px;\n$mdc-toolbar-mobile-padding: 16px;\n\n$mdc-toolbar-mobile-breakpoint: 599px;\n\n// postcss-bem-linter: define toolbar\n.mdc-toolbar {\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  box-sizing: border-box;\n\n  @include mdc-theme-prop(background-color, primary);\n  @include mdc-theme-prop(color, text-primary-on-primary);\n\n  &__row {\n    display: flex;\n    position: relative;\n    width: 100%;\n    height: $mdc-toolbar-row-height;\n    padding: $mdc-toolbar-padding;\n    box-sizing: border-box;\n\n    // TODO: refactor this out when #23 is implemented\n    @media (max-width: $mdc-toolbar-mobile-breakpoint) {\n      height: $mdc-toolbar-mobile-row-height;\n      padding: $mdc-toolbar-mobile-padding;\n    }\n  }\n\n  &__section {\n    display: inline-flex;\n    flex: 1;\n    align-items: flex-start;\n    justify-content: center;\n    z-index: 1;\n    overflow: hidden;\n\n    &--align-start {\n      justify-content: flex-start;\n      order: -1;\n    }\n\n    &--align-end {\n      justify-content: flex-end;\n      order: 1;\n    }\n  }\n\n  &__title {\n    @include mdc-typography(title);\n\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    margin: 0;\n    line-height: 1.5rem;\n  }\n}\n\n.mdc-toolbar--fixed {\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  @include mdc-elevation(4);\n}\n\n// postcss-bem-linter: end\n\n.mdc-toolbar-fixed-adjust {\n  margin-top: $mdc-toolbar-row-height;\n\n  @media (max-width: 599px) {\n    margin-top: $mdc-toolbar-mobile-row-height;\n  }\n}\n\n.mdc-toolbar__section--shrink-to-fit {\n  flex: none;\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n@import \"./mixins\";\n\n.mdc-typography {\n  @include mdc-typography-base;\n}\n\n@each $style in map-keys($mdc-typography-styles) {\n  .mdc-typography--#{$style} {\n    @include mdc-typography($style);\n  }\n\n  .mdc-typography--adjust-margin.mdc-typography--#{$style} {\n    @include mdc-typography-adjust-margin($style);\n  }\n}\n","//\n// Copyright 2017 Google Inc. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n\n@import \"./variables\";\n\n@mixin mdc-typography-base {\n  font-family: $mdc-typography-font-family;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n@mixin mdc-typography($style) {\n  $style-props: map-get($mdc-typography-styles, $style);\n\n  @if not map-has-key($mdc-typography-styles, $style) {\n    @error \"Invalid style specified! Choose one of #{map-keys($mdc-typography-styles)}\";\n  }\n\n  @include mdc-typography-base;\n\n  font-size: map-get($style-props, font-size);\n  font-weight: #{map-get($style-props, font-weight)};\n  letter-spacing: map-get($style-props, letter-spacing);\n  line-height: map-get($style-props, line-height);\n}\n\n@mixin mdc-typography-adjust-margin($style) {\n  margin: map-get(map-get($mdc-typography-styles, $style), margin);\n}\n"],"sourceRoot":""}]);

// exports


/***/ })

/******/ });
//# sourceMappingURL=material-components-web.css.js.map